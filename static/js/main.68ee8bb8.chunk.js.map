{"version":3,"sources":["components/TableHeader.tsx","common/const.ts","components/TableListItem.tsx","components/TableList.tsx","components/TableFooter.tsx","index.tsx","components/Table.tsx"],"names":["TableHeader","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","Text","variant","style","padding","props","b","React","Component","getStoreUrl","id","getGitHubUrl","githubIcon","msstoreIcon","stackItemStyles","root","cardStyles","display","marginRight","marginBottom","width","itemAlignmentsStackTokens","childrenGap","TableListItem","DocumentCard","styles","DocumentCardImage","height","imageFit","ImageFit","cover","imageSrc","project","DocumentCardDetails","DocumentCardTitle","title","shouldTruncate","description","showAsSecondaryTitle","Stack","horizontal","disableShrink","tokens","github","Item","align","Link","href","target","Image","src","store","stackStyles","alignContent","wrapStackTokens","TableList","items","projects","map","item","TableListItem_TableListItem","wrap","horizontalAlign","TableFooter","initializeIcons","ReactDOM","render","react","TableHeader_TableHeader","TableList_TableList","ProjectList","TableFooter_TableFooter","document","getElementById"],"mappings":"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","file":"static/js/main.68ee8bb8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Text } from \"office-ui-fabric-react\";\r\n\r\ninterface TableHeaderProps {\r\n  a: string;\r\n  b: string;\r\n}\r\n\r\nexport class TableHeader extends React.Component<TableHeaderProps> {\r\n  render() {\r\n    return (\r\n      <Text variant=\"xxLarge\" style={{padding: 10}}>\r\n        UWP Community Projects {this.props.a} {this.props.b}\r\n      </Text>\r\n    );\r\n  }\r\n}\r\n","export const getSreenshotUrl = (id: string) => {\r\n    return \"assets/screenshots/\" + id + \".png\";  \r\n}\r\n\r\nexport const getStoreUrl = (id: string) => {\r\n  return \"https://www.microsoft.com/store/apps/\" + id;\r\n}\r\n\r\nexport const getGitHubUrl = (id: string) => {\r\n  return \"https://github.com/\" + id;\r\n}\r\n\r\nexport const discordIcon = \"assets/img/discord.png\";\r\n\r\nexport const githubIcon = \"assets/img/github.png\";\r\n\r\nexport const msstoreIcon = \"assets/img/msstore.png\";","import React from \"react\";\r\nimport { Project } from \"../common/interfaces\";\r\nimport {\r\n  DocumentCard,\r\n  DocumentCardTitle,\r\n  DocumentCardDetails,\r\n  DocumentCardImage,\r\n  IDocumentCardStyles\r\n} from \"office-ui-fabric-react/lib/DocumentCard\";\r\nimport { Image, ImageFit } from \"office-ui-fabric-react/lib/Image\";\r\nimport { getSreenshotUrl, getStoreUrl, getGitHubUrl, githubIcon, msstoreIcon } from \"../common/const\";\r\nimport { Stack, Link, IStackItemStyles, IStackTokens } from \"office-ui-fabric-react\";\r\n\r\ninterface TableListItemProps {\r\n  project: Project;\r\n}\r\n\r\n\r\nconst stackItemStyles: IStackItemStyles = {\r\n  root: {\r\n    padding: 5\r\n  }\r\n};\r\n\r\nconst cardStyles: IDocumentCardStyles = {\r\n  root: {\r\n    display: \"inline-block\",\r\n    marginRight: 10,\r\n    marginBottom: 10,\r\n    width: 320\r\n  }\r\n};\r\n\r\nconst itemAlignmentsStackTokens: IStackTokens = {\r\n  childrenGap: 5,\r\n  padding: 10\r\n};\r\n\r\n\r\nfunction Github(github: string) {\r\n  if (github) {\r\n    return (\r\n      <Stack.Item align=\"auto\" styles={stackItemStyles}>\r\n        <Link href={getGitHubUrl(github)} target=\"_blank\">\r\n          <Image src={githubIcon} />\r\n        </Link>\r\n      </Stack.Item>\r\n    );\r\n  } else {\r\n    return (\"\");\r\n  }\r\n}\r\n\r\nfunction Store(store: string) {\r\n  if (store) {\r\n    return (\r\n      <Stack.Item align=\"auto\" styles={stackItemStyles}>\r\n        <Link href={getStoreUrl(store)} target=\"_blank\">\r\n          <Image src={msstoreIcon} />\r\n        </Link>\r\n      </Stack.Item>\r\n    );\r\n  } else {\r\n    return (\"\");\r\n  }\r\n}\r\n\r\n\r\nexport class TableListItem extends React.Component<TableListItemProps> {\r\n  render() {\r\n    return (\r\n      <DocumentCard styles={cardStyles}>\r\n        <DocumentCardImage\r\n          height={150}\r\n          imageFit={ImageFit.cover}\r\n          imageSrc={getSreenshotUrl(this.props.project.id)}\r\n        />\r\n        <DocumentCardDetails>\r\n          <DocumentCardTitle title={this.props.project.title} shouldTruncate />\r\n          <DocumentCardTitle title={this.props.project.description} showAsSecondaryTitle />\r\n\r\n          <Stack horizontal disableShrink tokens={itemAlignmentsStackTokens}>\r\n            {Github(this.props.project.github)}\r\n\r\n            {Store(this.props.project.store)}\r\n          </Stack>\r\n        </DocumentCardDetails>\r\n      </DocumentCard>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { ProjectList } from \"../common/interfaces\";\r\nimport { TableListItem } from \"./TableListItem\";\r\nimport { Stack, IStackTokens, IStackStyles } from \"office-ui-fabric-react\";\r\n\r\ninterface TableListProps {\r\n  projects: ProjectList;\r\n}\r\n\r\n\r\nconst stackStyles: IStackStyles = {\r\n  root: {\r\n    width: \"90%\",\r\n    alignContent: \"center\"\r\n  }\r\n};\r\n\r\nconst wrapStackTokens: IStackTokens = { childrenGap: 30 };\r\n\r\n\r\nexport const TableList = (props: TableListProps) => {\r\n  const items = props.projects.projects.map((item) => (\r\n    <TableListItem project={item} />\r\n  ));\r\n\r\n  return (\r\n    <Stack horizontal wrap styles={stackStyles} tokens={wrapStackTokens} horizontalAlign=\"center\">\r\n      {items}\r\n    </Stack>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Stack } from \"office-ui-fabric-react\";\r\n\r\ninterface TableFooterProps {\r\n  a: string;\r\n  b: string;\r\n}\r\n\r\nexport const TableFooter = (props: TableFooterProps) => {\r\n  return (\r\n    <Stack horizontal horizontalAlign=\"space-between\">\r\n      Footer {props.a} {props.b}\r\n    </Stack>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { TodoApp } from \"./components/TodoApp\";\nimport { Table } from \"./components/Table\";\nimport { initializeIcons } from \"@uifabric/icons\";\n\n// Initializes the UI Fabric icons that we can use\n// Choose one from this list: https://developer.microsoft.com/en-us/fabric#/styles/icons\ninitializeIcons();\n\nReactDOM.render(<Table />, document.getElementById(\"app\"));\n","import * as React from \"react\";\r\nimport { Stack } from \"office-ui-fabric-react\";\r\nimport { TableHeader } from \"./TableHeader\";\r\nimport { TableList } from \"./TableList\";\r\nimport { TableFooter } from \"./TableFooter\";\r\n\r\nimport ProjectList from '../common/projectList.json';\r\n// export const ProjectListConst: ProjectList = myData;\r\n\r\nexport const Table: React.StatelessComponent = () => {\r\n  return (\r\n    <Stack horizontalAlign=\"center\">\r\n      <TableHeader a=\"\" b=\"\" />\r\n      <TableList projects={ProjectList}/>\r\n      <TableFooter a=\"\" b=\"\" />\r\n    </Stack>\r\n  );\r\n};\r\n"],"sourceRoot":""}