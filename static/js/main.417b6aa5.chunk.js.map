{"version":3,"sources":["common/const.ts","common/helpers.ts","components/ProjectCard.tsx","components/ProjectList.tsx","views/Projects.tsx","components/HoverBox.tsx","views/Home.tsx","components/NavMenu.tsx","components/AppHeader.tsx","views/launch/participants.tsx","common/discordService.ts","views/signin.tsx","views/Launch.tsx","views/NotFound.tsx","App.tsx","index.tsx"],"names":["Links","Images","msstore","github","discord","id","cardStyles","root","display","marginRight","marginBottom","width","boxShadow","Depths","depth8","itemAlignmentsStackTokens","childrenGap","ProjectCard","props","GetBadge","bind","GetDiscordBadge","GetStoreBadge","GetGithubBadge","badge","url","Stack","Item","Link","href","target","src","this","Helpers","store","DocumentCard","styles","DocumentCardImage","height","imageFit","ImageFit","cover","imageSrc","project","DocumentCardDetails","DocumentCardTitle","title","shouldTruncate","description","showAsSecondaryTitle","horizontal","horizontalAlign","disableShrink","tokens","style","React","Component","stackStyles","alignContent","wrapStackTokens","ProjectList","items","projects","map","item","key","wrap","Projects","styled","div","depth4","depth16","FaIconStyle","color","LinkCard","section","a","Img","img","LargeCard","Home","fontFamily","fontWeight","fontSize","margin","maxWidth","Image","className","coverStyle","ImageCoverStyle","landscape","verticalAlign","Text","variant","PrimaryButton","marginTop","text","disabled","HoverBox","icon","navLinkActiveStyle","borderBottom","MyNavLink","NavLink","NavText","NavMenu","to","exact","activeStyle","paddingLeft","NavArea","AppHeader","Helmet","path","getHeadTitle","location","pathname","padding","Participants","AuthData","Get","authData","localStorage","getItem","JSON","parse","Set","SetDiscordAuthData","Clear","removeItem","data","setItem","stringify","Init","UnixTime","Math","round","Date","getTime","auth","console","log","expires_at","fetch","refresh_token","json","refreshData","expires_in","Authenticated","WebSocketContainer","connection","WebSocket","useState","connectionId","floor","random","status","connectionState","setConnectionState","WebSocketReady","SetWebSocketReady","onopen","ev","info","send","onmessage","message","discordAuthResponse","ConnectionState","ready","Signin","windowOpened","SignInStatus","discordAuthEndpoint","showRedirectLink","setShowRedirectLink","window","open","useEffect","timer","setTimeout","clearTimeout","Label","Spinner","label","ariaLive","visibility","rel","undefined","Launch","match","component","LaunchViewSelection","launchButtonDisabled","setLaunchButtonDisabled","document","addEventListener","keyCode","header","buttonDisabled","buttonStyle","paddingTop","paddingBottom","marginLeft","LaunchCardStyle","LaunchCard","buttonText","children","primary","IconButton","iconProps","iconName","NotFound","library","add","fab","faDiscord","faMedium","faGithub","AppHeaderWithRouter","withRouter","App","InitDiscord","basename","initializeIcons","rootElement","getElementById","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.417b6aa5.chunk.js","sourcesContent":["export const Links = {\r\n  thisSiteRepo: \"https://github.com/UWPCommunity/uwpcommunity.github.io/\",\r\n  launch2019Medium: \"https://medium.com/@Arlodottxt/launch-2019-7efd37cc0877\",\r\n  discordServerInvite: \"https://discord.gg/eBHZSKG\",\r\n  githubOrganization: \"https://github.com/UWPCommunity/\"\r\n};\r\n\r\nexport const Images = {\r\n  discordChatExample: \"/assets/img/discordchatexample.png\",\r\n  githubOrgScreenshot: \"/assets/img/githuborgscreenshot.png\",\r\n  launchHeroImage: \"/assets/img/LaunchHero.png\",\r\n  launchHeroImageHD: \"/assets/img/LaunchHeroHD.png\",\r\n  launchAppsHero: \"/assets/img/LaunchAppsHero.png\",\r\n\r\n  uwpCommunityLogo: \"/assets/img/uwpCommunityLogo.png\",\r\n  Badges: {\r\n    msstore: \"/assets/img/msstoreBadge.svg\",\r\n    github: \"/assets/img/githubBadge.svg\",\r\n    discord: \"/assets/img/discordBadge.svg\"\r\n  }\r\n};\r\n","export const getStoreUrl = (id: string) => {\r\n    return `https://www.microsoft.com/store/apps/${id}`;\r\n}\r\n\r\nexport const getGithubUrl = (id: string) => {\r\n    return `https://www.github.com/${id}`;\r\n}\r\n\r\nexport const getDiscordUrl = (id: string) => {\r\n    return `https://www.discord.gg/${id}`;\r\n}\r\n\r\nexport const getHeadTitle = (path: string) => {\r\n    let title = \"UWP Community\"\r\n    switch (path) {\r\n        case \"/\":\r\n            title = title + \" // Home\"\r\n            break;\r\n        case \"/projects\":\r\n            title = title + \" // Projects\"\r\n            break;\r\n        case \"/launch\":\r\n            title = title + \" // Launch\"\r\n            break;\r\n        default:\r\n            title = title + \" // 404\"\r\n            break;\r\n    }\r\n    return title\r\n}\r\n\r\nexport default {\r\n    getDiscordUrl, getGithubUrl, getStoreUrl\r\n}","import React from \"react\";\r\nimport { IProject } from \"../common/interfaces\";\r\nimport {\r\n  DocumentCard,\r\n  DocumentCardTitle,\r\n  DocumentCardDetails,\r\n  DocumentCardImage,\r\n  IDocumentCardStyles\r\n} from \"office-ui-fabric-react/lib/DocumentCard\";\r\nimport { ImageFit } from \"office-ui-fabric-react/lib/Image\";\r\nimport { Images } from \"../common/const\";\r\nimport Helpers from \"../common/helpers\";\r\n\r\nimport { Stack, Link, IStackTokens } from \"office-ui-fabric-react\";\r\nimport { Depths } from '@uifabric/fluent-theme/lib/fluent/FluentDepths';\r\nimport SVG from 'react-inlinesvg';\r\n\r\n\r\ninterface ListItemProps {\r\n  project: IProject;\r\n}\r\n\r\nexport const getThumbUrl = (id: string) => {\r\n  return `/assets/thumbs/${id}.png`;\r\n}\r\n\r\nconst cardStyles: IDocumentCardStyles = {\r\n  root: {\r\n    display: \"inline-block\",\r\n    marginRight: 10,\r\n    marginBottom: 10,\r\n    width: 320,\r\n    boxShadow: Depths.depth8\r\n  }\r\n};\r\n\r\nconst itemAlignmentsStackTokens: IStackTokens = {\r\n  childrenGap: 5\r\n};\r\n\r\n\r\nexport class ProjectCard extends React.Component<ListItemProps> {\r\n  constructor(props: ListItemProps) {\r\n    super(props);\r\n    this.GetBadge.bind(this);\r\n    this.GetDiscordBadge.bind(this);\r\n    this.GetStoreBadge.bind(this);\r\n    this.GetGithubBadge.bind(this);\r\n  }\r\n\r\n  private GetBadge(badge:string, url: string) {\r\n    return (\r\n      <Stack.Item>\r\n        <Link href={url} target=\"_blank\">\r\n          <SVG src={badge} />\r\n        </Link>\r\n      </Stack.Item>\r\n    );\r\n  };\r\n\r\n  private GetDiscordBadge(discord?: string) {\r\n    if (!discord) return \"\";\r\n    return this.GetBadge(Images.Badges.discord, Helpers.getDiscordUrl(discord));\r\n  };\r\n\r\n  private GetStoreBadge(store: string) {\r\n    if (!store) return \"\";\r\n    return this.GetBadge(Images.Badges.msstore, Helpers.getStoreUrl(store));\r\n  };\r\n\r\n  private GetGithubBadge(github: string) {\r\n    if (!github) return \"\";\r\n    return this.GetBadge(Images.Badges.github, Helpers.getGithubUrl(github));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DocumentCard styles={cardStyles}>\r\n        <DocumentCardImage\r\n          height={150}\r\n          imageFit={ImageFit.cover}\r\n          imageSrc={getThumbUrl(this.props.project.id)}\r\n        />\r\n        <DocumentCardDetails>\r\n          <DocumentCardTitle title={this.props.project.title} shouldTruncate />\r\n          <DocumentCardTitle title={this.props.project.description} showAsSecondaryTitle />\r\n\r\n          <Stack horizontal horizontalAlign=\"end\" disableShrink tokens={itemAlignmentsStackTokens} style={{ marginRight: 10, marginBottom: 10 }}>\r\n            {this.GetGithubBadge(this.props.project.github)}\r\n\r\n            {this.GetStoreBadge(this.props.project.store)}\r\n\r\n            {this.GetDiscordBadge(this.props.project.discord)}\r\n          </Stack>\r\n        </DocumentCardDetails>\r\n      </DocumentCard>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { IProjectList } from \"../common/interfaces\";\r\nimport { ProjectCard } from \"./ProjectCard\";\r\nimport { Stack, IStackTokens, IStackStyles } from \"office-ui-fabric-react\";\r\n\r\ninterface ListProps {\r\n  projects: IProjectList;\r\n}\r\n\r\nconst stackStyles: IStackStyles = {\r\n  root: {\r\n    width: \"90%\",\r\n    alignContent: \"center\"\r\n  }\r\n};\r\n\r\nconst wrapStackTokens: IStackTokens = { childrenGap: 30 };\r\n\r\nexport const ProjectList = (props: ListProps) => {\r\n  const items = props.projects.projects.map((item) => (\r\n    <ProjectCard key={item.id} project={item} />\r\n  ));\r\n\r\n  return (\r\n    <Stack horizontal wrap styles={stackStyles} tokens={wrapStackTokens} horizontalAlign=\"center\">\r\n      {items}\r\n    </Stack>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Stack } from \"office-ui-fabric-react\";\r\nimport { ProjectList as ProjectListElement } from \"../components/ProjectList\";\r\nimport ProjectList from '../assets/projectList.json';\r\n\r\nexport const Projects: React.StatelessComponent = () => {\r\n  return (\r\n    /* Todo: Add a header with brief explanation of the below */\r\n    <Stack horizontalAlign=\"center\">\r\n      <ProjectListElement projects={ProjectList} />\r\n    </Stack>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\n\r\nexport default styled.div`\r\n    box-shadow: ${Depths.depth4};\r\n    :hover {\r\n      box-shadow: ${Depths.depth16};\r\n    };\r\n    transition: 150ms all;\r\n`;","import React, { CSSProperties } from \"react\";\r\nimport { Stack, Text, PrimaryButton, Image, ImageFit, ImageCoverStyle } from \"office-ui-fabric-react\";\r\nimport { Links, Images } from \"../common/const\";\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport HoverBox from '../components/HoverBox';\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\n\r\nconst FaIconStyle: CSSProperties = {\r\n  color: \"black\",\r\n  height: \"65px\",\r\n  width: \"65px\"\r\n};\r\n\r\nconst LinkCard = styled.section`\r\n    font-family: Segoe UI, sans-serif;\r\n    padding: 7px;\r\n    max-width: 400px;\r\n`;\r\n\r\nlet Link = styled.a`\r\n    color: blue;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    :hover {\r\n      text-decoration: underline;\r\n    };\r\n`;\r\n\r\nlet Img = styled.img`\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n`;\r\n\r\nconst LargeCard = styled.div`\r\nbox-shadow: ${Depths.depth16};\r\n.heroImage, .heroImage img {\r\n  width: 620px;\r\n  height: 350px;\r\n}\r\n\r\n@media screen and (max-width: 1079px) {\r\n  width: min-content;\r\n  .heroImage, .heroImage img {\r\n      width: 750px;\r\n      height: 350px;\r\n  }\r\n}\r\n`;\r\n\r\nexport const Home: React.StatelessComponent = () => {\r\n  return (\r\n    <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n      <p style={{ fontFamily: \"Segoe UI, Sans-Serif\", fontWeight: \"lighter\", fontSize: \"24px\", margin: 0 }}>The homepage for the unofficial Discord server </p>\r\n\r\n      <Stack wrap horizontal horizontalAlign=\"space-around\" tokens={{ childrenGap: 25 }}>\r\n\r\n        <LargeCard>\r\n          <Stack horizontal wrap maxWidth=\"1200px\" horizontalAlign=\"space-evenly\">\r\n            <Image className=\"heroImage\" coverStyle={ImageCoverStyle.landscape} imageFit={ImageFit.cover} src={Images.launchHeroImageHD} />\r\n\r\n            <Stack style={{ margin: \"15px\" }} verticalAlign=\"center\">\r\n              <Text variant=\"xLargePlus\">Launch 2020 signup coming soon</Text>\r\n              <Text variant=\"mediumPlus\">Check back later</Text>\r\n              <PrimaryButton style={{ marginTop: \"15px\" }} text=\"Submit your app\" disabled />\r\n            </Stack>\r\n          </Stack>\r\n        </LargeCard>\r\n\r\n        <Stack wrap horizontal horizontalAlign=\"space-around\" tokens={{ childrenGap: 15 }}>\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.discordChatExample} />\r\n\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>Discuss the platform with other enthusiasts, get help as a developer, and interact with the devs of your favorite apps</Text>\r\n                    <Link href={Links.discordServerInvite} target=\"_blank\"> Join our discord server </Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"discord\"]} />\r\n                </Stack>\r\n\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.githubOrgScreenshot} />\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>Many of our projects are open source, so others can learn or build with them</Text>\r\n                    <Link href={Links.githubOrganization} target=\"_blank\">See our open source projects</Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"github\"]} />\r\n                </Stack>\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.launchHeroImage} />\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>As a community of talented developers, each year we Launch our projects together in an annual event known as <code>Launch</code></Text>\r\n                    <Link href={Links.launch2019Medium} target=\"_blank\">Read about Launch 2019</Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"medium\"]} />\r\n                </Stack>\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n","import React, { CSSProperties } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Text } from \"office-ui-fabric-react\";\r\n\r\nconst navLinkActiveStyle: CSSProperties = {\r\n  borderBottom: \"3px solid #5e5eff\",\r\n};\r\n\r\nconst MyNavLink = styled(NavLink)`     \r\n   color: black;\r\n   padding: 10px 12px 5px 12px;\r\n   text-align: center;\r\n   display: inline-block;\r\n   text-decoration: none;\r\n   margin: 7px;\r\n   border-bottom: 3px solid #c9c9c9;\r\n\r\n  :hover  {\r\n    text-decoration: none;    \r\n    border-bottom: 3px solid #9e9e9e;\r\n  };\r\n`;\r\n\r\nconst NavText = styled(Text)`\r\n  font-size: 18px;\r\n`;\r\n\r\nexport class NavMenu extends React.Component<any, any> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <nav>\r\n        <MyNavLink to=\"/\" exact activeStyle={navLinkActiveStyle}>\r\n          <NavText>Home</NavText>\r\n        </MyNavLink>\r\n        <MyNavLink to=\"/projects\" activeStyle={navLinkActiveStyle}>\r\n          <NavText>Projects</NavText>\r\n        </MyNavLink>\r\n        <MyNavLink to=\"/launch\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Launch</NavText>\r\n        </MyNavLink>\r\n      </nav>\r\n    );\r\n  }\r\n}","import * as React from \"react\";\r\nimport { Stack, Link, Text, PrimaryButton } from \"office-ui-fabric-react\";\r\nimport { Image } from \"office-ui-fabric-react/lib/Image\";\r\nimport { Images } from \"../common/const\";\r\nimport { NavMenu } from \"./NavMenu\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CSSProperties } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getHeadTitle } from \"../common/helpers\";\r\n\r\nconst FaIconStyle: CSSProperties = {\r\n  color: \"white\",\r\n  height: \"20px\",\r\n  width: \"20px\",\r\n  paddingLeft: \"10px\"\r\n};\r\n\r\nconst NavArea = styled.div`\r\n\r\nmargin-right: 90px;\r\n     \r\n@media screen and (max-width: 1079px) {\r\n  margin-right: 0px;\r\n}\r\n`;\r\n\r\nexport const AppHeader: React.StatelessComponent = (props: any) => {\r\n  return (\r\n    <header style={{ margin: \"10px\" }}>\r\n      <Stack style={{ width: \"100vw\", margin: \"0px\" }} horizontal wrap tokens={{ childrenGap: 10 }} verticalAlign='end' horizontalAlign=\"space-around\">\r\n        <Helmet>\r\n          <title>{getHeadTitle(props.location.pathname)}</title>\r\n        </Helmet>\r\n        <Link href=\"/\">\r\n          <Image src={Images.uwpCommunityLogo} />\r\n        </Link>\r\n\r\n        <NavArea>\r\n          <NavMenu />\r\n        </NavArea>\r\n\r\n        <Stack verticalAlign=\"start\" style={{ marginBottom: \"22px\" }}>\r\n          <PrimaryButton href=\"/signin\" style={{ padding: \"18px\" }} disabled>\r\n            <Text>Sign in</Text>\r\n            <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"discord\"]} />\r\n          </PrimaryButton>\r\n        </Stack>\r\n      </Stack>\r\n\r\n    </header>\r\n  );\r\n};\r\n","import { Text, Stack } from \"office-ui-fabric-react\";\r\nimport React from \"react\";\r\n\r\nexport const Participants = () => {\r\n    return (\r\n        <Stack horizontalAlign=\"center\" tokens={{childrenGap: 25}}>\r\n            <Text variant=\"xLargePlus\">Participants</Text>\r\n            <Text variant=\"superLarge\">Under construction</Text>\r\n        </Stack>\r\n    )\r\n};","import { IDiscordAuthResponse } from \"./interfaces\";\r\n\r\nexport const AuthData = {\r\n    Get: GetDiscordAuthData,\r\n    Set: SetDiscordAuthData,\r\n    Clear: ClearDiscordAuthData\r\n};\r\n\r\nexport function GetDiscordAuthData(): IDiscordAuthResponse | undefined {\r\n    const authData = localStorage.getItem(\"discordAuthData\");\r\n    if (!authData) return;\r\n    return JSON.parse(authData);\r\n}\r\n\r\nexport function SetDiscordAuthData(data: IDiscordAuthResponse) {\r\n    if (!data) return;\r\n    localStorage.setItem(\"discordAuthData\", JSON.stringify(data));\r\n}\r\n\r\nexport function ClearDiscordAuthData() {\r\n    localStorage.removeItem(\"discordAuthData\");\r\n}\r\n\r\nexport async function Init() {\r\n    const UnixTime: number = Math.round((new Date()).getTime() / 1000);\r\n    let auth = AuthData.Get();\r\n    console.log(\"Initializing login service\");\r\n    if (!auth) return;\r\n\r\n    if (auth.expires_at && auth.expires_at < UnixTime) {\r\n        let refreshData: IDiscordAuthResponse = await (await fetch(\"https://uwpcommunity-site-backend.herokuapp.com/signin/refresh?refreshToken=\" + auth.refresh_token)).json();\r\n\r\n        if (refreshData.expires_in) refreshData.expires_at = UnixTime + refreshData.expires_in;\r\n\r\n        console.log(refreshData);\r\n        SetDiscordAuthData(refreshData);\r\n        Init();\r\n    }\r\n    \r\n}\r\n","import { Text, Stack, Label, Spinner } from \"office-ui-fabric-react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { IDiscordAuthResponse } from \"../common/interfaces\";\r\nimport {AuthData} from \"../common/discordService\";\r\n\r\nlet Authenticated: boolean = false;\r\n\r\nconst WebSocketContainer: React.FC<any> = (props: any) => {\r\n    // A container to help manage the web socket so it doesn't reload every time data from the socket updates data on the page\r\n    let connection = new WebSocket(\"ws://uwpcommunity-site-backend.herokuapp.com/signin/\");\r\n\r\n    const [connectionState, setConnectionState] = useState<IConnectionState>({\r\n        connectionId: (Math.floor(Math.random() * 10000000) + 1),\r\n        status: Authenticated ? \"done\" : \"start\"\r\n    });\r\n\r\n    const [WebSocketReady, SetWebSocketReady] = useState<boolean>(false);\r\n\r\n    connection.onopen = WebSocket_OnOpen;\r\n    connection.onmessage = WebSocket_OnMessage;\r\n\r\n    function WebSocket_OnOpen(this: WebSocket, ev: Event) {\r\n        console.info(\"Handshake established with login verification server\");\r\n        if (Authenticated) {\r\n            console.info(\"Already authenticated\");\r\n            return;\r\n        }\r\n        connection.send(JSON.stringify(connectionState));\r\n        SetWebSocketReady(true);\r\n    }\r\n\r\n    function WebSocket_OnMessage(this: WebSocket, ev: MessageEvent) {\r\n        console.info(\"Socket message: \", ev.data);\r\n        let message: IConnectionState = JSON.parse(ev.data);\r\n\r\n        if (message.status === \"done\" && message.discordAuthResponse) {\r\n            AuthData.Set(message.discordAuthResponse);\r\n            setConnectionState(message);\r\n            Authenticated = true;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SignInStatus ConnectionState={connectionState} ready={WebSocketReady} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Signin = () => {\r\n    return (\r\n        <Stack>\r\n            <WebSocketContainer />\r\n        </Stack>\r\n    )\r\n};\r\n\r\nlet windowOpened: boolean = false;\r\n\r\ninterface ISignInStatus {\r\n    ConnectionState: IConnectionState,\r\n    ready: boolean;\r\n};\r\n\r\nexport const SignInStatus = (props: ISignInStatus) => {\r\n    let discordAuthEndpoint = `https://discordapp.com/api/oauth2/authorize?client_id=611491369470525463&redirect_uri=http%3A%2F%2Fuwpcommunity-site-backend.herokuapp.com%2Fsignin%2Fredirect&response_type=code&scope=guilds%20identify&state=${props.ConnectionState.connectionId}`;\r\n\r\n    const [showRedirectLink, setShowRedirectLink] = useState<boolean>(false);\r\n\r\n    if (props.ConnectionState.status === \"start\" && !windowOpened && props.ready) {\r\n        window.open(discordAuthEndpoint);\r\n        windowOpened = true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setShowRedirectLink(true);\r\n        }, 7000);\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <Stack>\r\n            {\r\n                props.ConnectionState.status === \"start\" ? (\r\n                    <Stack horizontalAlign=\"center\">\r\n                        <Label>Taking you to Discord</Label>\r\n                        <Spinner label=\"Hold on tight\" ariaLive=\"assertive\" />\r\n                        <Text style={{ visibility: showRedirectLink ? \"visible\" : \"hidden\" }}>If not redirected automatically, <a href={discordAuthEndpoint} target=\"_blank\" rel=\"noopener noreferrer\">click here</a></Text>\r\n                    </Stack>\r\n                )\r\n                    :\r\n                    props.ConnectionState.discordAuthResponse !== undefined ? // Make sure the token is present\r\n                        <Stack>\r\n                            <Text variant=\"xLarge\">Authenticated successfully</Text>\r\n                            <Text variant=\"mediumPlus\">This page is still under development</Text>\r\n                            <Text variant=\"medium\">{JSON.stringify(props.ConnectionState)}</Text>\r\n                        </Stack> :\r\n                        <Text>Authentication failed: {JSON.stringify(props.ConnectionState)}</Text>\r\n            }\r\n        </Stack>\r\n    )\r\n};\r\n\r\ninterface IConnectionState {\r\n    connectionId: number;\r\n    status: string;\r\n    discordAuthResponse?: IDiscordAuthResponse;\r\n}\r\n\r\n/**\r\n * Todo: Post-sign in\r\n *\r\n * Redirect to a /me/ page to manage apps\r\n * Use discord.js to verify the user is in the server\r\n * Ask the user to join if not (provide link)\r\n * Display their name and icon on the page\r\n */","import React, { useState, CSSProperties } from \"react\";\r\nimport { Text, Stack, PrimaryButton, IconButton, Image, ImageCoverStyle, ImageFit } from \"office-ui-fabric-react\";\r\nimport { Route } from \"react-router\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport HoverBox from '../components/HoverBox';\r\nimport { Images } from \"../common/const\";\r\nimport { Participants } from \"../views/launch/participants\";\r\nimport { Signin } from \"./signin\";\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\n\r\nconst FaIconStyle: CSSProperties = {\r\n    color: \"white\",\r\n    height: \"20px\",\r\n    width: \"20px\",\r\n    paddingLeft: \"10px\"\r\n};\r\nexport const Launch: React.StatelessComponent<any> = ({ match }: any) => {\r\n    return (\r\n        <Stack>\r\n            <Route path={`${match.path}/participants`} component={Participants} />\r\n            <Route path={`/signin`} component={Signin} />\r\n            <Route exact path={match.path} component={LaunchViewSelection} />\r\n        </Stack>\r\n    );\r\n};\r\n\r\n\r\nconst LaunchViewSelection = () => {\r\n    const [launchButtonDisabled, setLaunchButtonDisabled] = useState<boolean>(true);\r\n\r\n    document.addEventListener(\"keydown\", (ev:any)=>{\r\n        if(ev.keyCode === 27) setLaunchButtonDisabled(false);\r\n    });\r\n    \r\n    return (\r\n        <Stack tokens={{childrenGap: 25}}>\r\n                <Stack horizontal wrap style={{ boxShadow: Depths.depth16 }} maxWidth=\"1200px\">\r\n                    <Image width=\"100%\" height=\"400px\" src={Images.launchAppsHero} coverStyle={ImageCoverStyle.landscape} imageFit={ImageFit.cover} />\r\n                    <Stack style={{margin: \"20px\"}}>\r\n\r\n                        <Text style={{fontFamily: \"Segoe UI\", fontSize: \"30px\", fontWeight: \"lighter\"}}>// Launch</Text>\r\n\r\n                        <Text style={{marginTop: \"10px\", fontWeight: 500}} variant=\"xLarge\">An annual event where a community of Windows App developers release their UWP-related projects</Text>\r\n                        <Text style={{marginTop: \"10px\"}} variant=\"mediumPlus\">Our Discord server provides direct, 2 way user feedback from users, and a place for newbies to ask questions and learn from those with more experience, creating the perfect environment for apps to grow into something more</Text>\r\n                    </Stack>\r\n                </Stack>\r\n\r\n            <Stack horizontal wrap horizontalAlign=\"center\" tokens={{childrenGap: 25}}>\r\n                <LaunchCard header=\"Participating apps\" description=\"See which apps are participating in Launch 2020\" path=\"/launch/participants\" buttonDisabled={launchButtonDisabled} />\r\n\r\n                <LaunchCard header=\"Submit your app\" description=\"Want to Launch your app with the community?\" path=\"/signin\" buttonStyle={{paddingTop: \"25px\", paddingBottom: \"25px\", marginLeft: \"10px\"}}  buttonDisabled={launchButtonDisabled}>\r\n                    <Text>Sign in </Text>\r\n                    <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"discord\"]} />\r\n                </LaunchCard>\r\n            </Stack>\r\n        </Stack>\r\n    );\r\n};\r\n\r\ninterface ILaunchCardProps {\r\n    header: string;\r\n    description: string;\r\n    path: string;\r\n    buttonText?: string;\r\n    buttonDisabled?: boolean;\r\n    buttonStyle?: CSSProperties;\r\n};\r\n\r\nconst LaunchCardStyle = styled(HoverBox)`\r\n    max-height: 500px;\r\n    max-width: 350px;\r\n    padding: 50px;\r\n    :hover {\r\n                pointer: cursor;\r\n        };\r\n    `;\r\n\r\nconst LaunchCard: React.FunctionComponent<ILaunchCardProps> = (props: React.PropsWithChildren<ILaunchCardProps>) => {\r\n    return (\r\n        <LaunchCardStyle>\r\n            <Stack tokens={{childrenGap: 5}}>\r\n                <Stack horizontal tokens={{ childrenGap: 5 }} verticalAlign=\"center\">\r\n                    <Text variant=\"xLarge\">{props.header}</Text>\r\n                    <NavLink to={(props.buttonDisabled? window.location.pathname : props.path)}>\r\n                        {\r\n                            props.buttonText || props.children ?\r\n                                <PrimaryButton primary disabled={props.buttonDisabled} style={props.buttonStyle} text={props.buttonText}>{props.children}</PrimaryButton>\r\n                                :\r\n                                <IconButton disabled={props.buttonDisabled} primary iconProps={{ iconName: 'Go' }} />\r\n                        }\r\n                    </NavLink>\r\n                </Stack>\r\n                <Text variant=\"medium\">{props.description}</Text>\r\n            </Stack>\r\n        </LaunchCardStyle>\r\n    )\r\n};\r\n","import * as React from \"react\";\r\nimport { Text, Stack } from \"office-ui-fabric-react\";\r\n\r\nexport const NotFound: React.StatelessComponent = () => {\r\n  return (\r\n    <Stack horizontal horizontalAlign=\"center\">\r\n      <Text variant=\"large\" style={{ padding: 10 }}>\r\n        404 Not Found\r\n      </Text>\r\n    </Stack>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\n\r\nimport { Projects } from './views/Projects';\r\nimport { Home } from './views/Home';\r\nimport { AppHeader } from \"./components/AppHeader\";\r\nimport { Launch } from \"./views/Launch\";\r\nimport { Signin } from \"./views/signin\";\r\n\r\nimport { Stack } from \"office-ui-fabric-react\";\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab, faDiscord, faMedium, faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport { Init as InitDiscord } from './common/discordService';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { NotFound } from \"./views/NotFound\";\r\n\r\nlibrary.add(fab, faDiscord, faMedium, faGithub);\r\n\r\nconst AppHeaderWithRouter = withRouter(props => <AppHeader {...props} />);\r\n\r\nexport const App: React.StatelessComponent = () => {\r\n  InitDiscord();\r\n\r\n  return (\r\n    <BrowserRouter basename=\"/\">\r\n      <Stack horizontalAlign=\"center\">\r\n        <AppHeaderWithRouter />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/projects\" component={Projects} />\r\n          <Route path=\"/launch\" component={Launch} />\r\n          <Route path=\"/signin\" component={Signin} />\r\n          <Route component={NotFound} />}\r\n        </Switch>\r\n      </Stack>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { hydrate, render } from \"react-dom\";\r\nimport { initializeIcons } from \"@uifabric/icons\";\r\nimport {App} from './App';\r\n\r\n// Initializes the UI Fabric icons that we can use\r\n// Choose one from this list: https://developer.microsoft.com/en-us/fabric#/styles/icons\r\ninitializeIcons();\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nif (rootElement && rootElement.hasChildNodes()) {\r\n  hydrate(<App />, rootElement);\r\n} else {\r\n  render(<App />, rootElement);\r\n}"],"sourceRoot":""}