{"version":3,"sources":["common/services/discord.ts","common/const.ts","common/helpers.ts","common/services/projects.ts","components/ProjectCard.tsx","views/Projects.tsx","components/HoverBox.tsx","views/Home.tsx","components/NavMenu.tsx","common/services/users.ts","components/forms/RegisterUser.tsx","components/AppHeader.tsx","views/Launch.tsx","views/signin.tsx","components/forms/EditProjectDetailsForm.tsx","components/forms/CreateProjectForm.tsx","views/dashboard.tsx","views/NotFound.tsx","components/markdown-loader.tsx","App.tsx","components/prerender-loader.tsx","index.tsx"],"names":["CurrentUser","Links","Images","backendHost","isLocalhost","discordAuthEndpoint","AuthData","Get","authData","localStorage","getItem","JSON","parse","Set","SetDiscordAuthData","Clear","removeItem","data","setItem","stringify","RefreshTokenIfNeeded","a","UnixTime","Math","round","Date","getTime","auth","expires_at","fetch","refresh_token","json","refreshData","expires_in","IsUserInServer","Auth","Error","headers","access_token","Req","status","Response","filter","server","id","length","GetCurrentDiscordUser","GetUserRoles","user","fetchBackend","request","result","map","role","name","AssignUserRole","roleName","GetUserAvatar","avatar","window","location","host","includes","navigator","userAgent","route","method","requestBody","push","url","body","match","toMatch","regex","m","exec","undefined","CreateProject","projectData","downloadLink","storeId","GetProjectByDiscordId","discordId","GetAllProjects","GetLaunchProjects","year","project","launchYear","awaitingLaunchApproval","ButtonType","FaIconStyle","color","height","width","ProjectCard","props","onRenderIcon","buttonProps","buttonData","link","type","valueOf","Download","style","icon","External","Github","DocumentCard","maxWidth","DocumentCardImage","imageFit","ImageFit","centerCover","imageSrc","heroImage","DocumentCardDetails","DocumentCardTitle","title","appName","shouldTruncate","Stack","tokens","padding","Text","description","horizontal","childrenGap","verticalAlign","onEditButtonClicked","PrimaryButton","onClick","DocumentCardActions","actions","githubLink","href","externalLink","Projects","React","projects","setProjects","projectsApi","PopulateProjects","horizontalAlign","wrap","marginTop","FontIcon","iconName","fontSize","variant","styled","div","Depths","depth8","depth16","LinkCard","section","Link","Img","img","LargeCard","Home","fontFamily","fontWeight","margin","Image","className","coverStyle","ImageCoverStyle","landscape","cover","src","text","disabled","HoverBox","target","navLinkActiveStyle","borderBottom","MyNavLink","NavLink","NavText","NavMenu","to","exact","activeStyle","display","Component","CreateUser","userData","ModifyUser","GetUser","RegisterUserForm","useState","userRequest","setUserRequest","submissionError","setSubmissionError","showSuccessIndicator","setShowSuccessIndicator","modifying","error","reason","setTimeout","onSuccess","alt","TextField","label","defaultValue","styles","root","required","onChange","e","value","email","onCancel","DefaultButton","paddingLeft","AppHeader","render","history","marginBottom","Helmet","path","getHeadTitle","pathname","PrivacyPolicyText","SignInButton","loggedIn","setLoggedIn","discordUser","setDiscordUser","setUser","userAvatar","setUserAvatar","joinServerAlertHidden","setJoinServerAlertHidden","registerUserShown","setRegisterUserShown","editProfileShown","setEditProfileShown","avatarUrl","setupLoggedInUser","LoggedInButtonDropdownItems","onItemClick","ev","item","key","LogOut","useTargetWidth","items","iconProps","reload","Dialog","hidden","dialogContentProps","DialogType","normal","subText","modalProps","isBlocking","main","DialogFooter","TooltipHost","content","username","delay","TooltipDelay","long","border","menuProps","Persona","size","PersonaSize","size40","imageUrl","largeHeader","calloutProps","gapSpace","closeDelay","Launch","useEffect","GetNextLaunchEventProjects","boxShadow","Signin","authResponse","URL","searchParams","get","atob","showRedirectLink","setShowRedirectLink","timer","clearTimeout","Label","Spinner","ariaLive","visibility","categoryOptions","category","index","EditProjectDetailsForm","isPrivate","projectRequest","setProjectRequest","Pivot","PivotItem","headerText","maxLength","multiline","autoAdjustHeight","placeholder","editing","ComboBox","options","defaultSelectedKey","option","Checkbox","checked","CreateProjectForm","verified","setVerified","codeVerificationDisplayed","setCodeVerificationDisplayed","manualReviewMessageShown","setManualReviewMessageShown","setProjectData","projectDetails","ProjectCodeVerifier","VerficationState","storeIdTeachingBubbleTarget","setStoreIdTeachingBubbleTarget","setStoreId","verificationCodeText","setVerificationCodeText","PreInit","verificationState","setVerificationState","errorMessage","setErrorMessage","BeginVerification","validateStoreIdField","WaitingForCode","response","console","checkVerification","Verified","hideStoreIdTeachingBubbleTimeout","tick","onTimeout","init","clear","cleared","showStoreIdTeachingButton","event","nativeEvent","hideStoreIdTeachingButton","onStoreIDTextFieldKeyPress","onVerificationCodeTextFieldKeyPress","TeachingBubble","directionalHintFixed","directionalHint","DirectionalHint","topAutoEdge","onMouseLeave","onMouseOver","grow","onKeyPress","field","minWidth","needsManualReview","DashboardHeader","header","Dashboard","welcomeMessage","setWelcomeMessage","userIcon","setUserIcon","roles","setRoles","appRegistrationShown","setAppRegistrationShown","devRegistrationShown","setDevRegistrationShown","apps","setApps","getUserApps","PersonaDark","DashboardColumnFiller","extraLarge","marginLeft","textDecoration","Icon","userSelect","NotFound","renderers","heading","level","children","1","2","3","headerType","as","getMarkdown","memoize","req","markdown","createMarkdownPage","filename","default","verticalFill","source","library","add","fab","faDiscord","faMedium","faGithub","fas","faGlobe","faArrowCircleDown","AppHeaderWithRouter","withRouter","PrivacyPolicy","dynamicImport","LoadableComponent","loadable","memo","PrerenderedComponent","live","load","prerenderedLoader","App","basename","component","initializeIcons","rootElement","document","getElementById","hasChildNodes","hydrate"],"mappings":"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","file":"static/js/main.bf58b419.chunk.js","sourcesContent":["import { backendHost } from \"../const\";\r\nimport { isLocalhost, fetchBackend } from \"../helpers\";\r\n\r\nexport const uwpCommunityGuildId = 372137812037730304;\r\nexport const developerRoleId = 372142246625017871;\r\n\r\nexport const discordAuthEndpoint = (\r\n    isLocalhost ?\r\n        `https://discordapp.com/api/oauth2/authorize?client_id=611491369470525463&redirect_uri=http%3A%2F%2Flocalhost%3A5000%2Fsignin%2Fredirect&response_type=code&scope=identify%20guilds`\r\n        :\r\n        `https://discordapp.com/api/oauth2/authorize?client_id=611491369470525463&redirect_uri=http%3A%2F%2Fuwpcommunity-site-backend.herokuapp.com%2Fsignin%2Fredirect&response_type=code&scope=identify%20guilds`\r\n);\r\n\r\nexport const AuthData = {\r\n    Get: GetDiscordAuthData,\r\n    Set: SetDiscordAuthData,\r\n    Clear: ClearDiscordAuthData\r\n};\r\n\r\nexport function GetDiscordAuthData(): IDiscordAuthResponse | undefined {\r\n    const authData = localStorage.getItem(\"discordAuthData\");\r\n    if (!authData) return;\r\n    return JSON.parse(authData);\r\n}\r\n\r\nexport function SetDiscordAuthData(data: IDiscordAuthResponse) {\r\n    if (!data) return;\r\n    localStorage.setItem(\"discordAuthData\", JSON.stringify(data));\r\n}\r\n\r\nexport function ClearDiscordAuthData() {\r\n    localStorage.removeItem(\"discordAuthData\");\r\n}\r\n\r\nexport async function RefreshTokenIfNeeded() {\r\n    const UnixTime: number = Math.round((new Date()).getTime() / 1000);\r\n    let auth = AuthData.Get();\r\n\r\n    if (!auth) return;\r\n\r\n    if (auth.expires_at && auth.expires_at < UnixTime) {\r\n        let refreshData: IDiscordAuthResponse = await (await fetch(`https://${backendHost}/signin/refresh?refreshToken=${auth.refresh_token}`)).json();\r\n\r\n        if (refreshData.expires_in) refreshData.expires_at = UnixTime + refreshData.expires_in;\r\n\r\n        SetDiscordAuthData(refreshData);\r\n    }\r\n}\r\n\r\nexport async function IsUserInServer(): Promise<boolean> {\r\n    await RefreshTokenIfNeeded();\r\n\r\n    const Auth = AuthData.Get();\r\n    if (!Auth) throw new Error(\"No auth data found\");\r\n\r\n    const Req = await fetch(\"https://discordapp.com/api/v6/users/@me/guilds\", {\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + Auth.access_token\r\n        }\r\n    });\r\n    if (Req.status !== 200) return true; // If something goes wrong, give the benefit of the doubt\r\n\r\n    const Response: IDiscordGuild[] = await Req.json();\r\n\r\n    return Response.filter(server => server.id === \"372137812037730304\").length > 0;\r\n}\r\n\r\nexport let CurrentUser: IDiscordUser;\r\nexport async function GetCurrentDiscordUser(): Promise<IDiscordUser | undefined> {\r\n    if (CurrentUser) return CurrentUser;\r\n\r\n    const Auth = AuthData.Get();\r\n    if (!Auth) return;\r\n\r\n    const Req = await fetch(\"https://discordapp.com/api/v6/users/@me\", {\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + Auth.access_token\r\n        }\r\n    });\r\n    if (!Req || Req.status !== 200) return;\r\n    CurrentUser = await Req.json();\r\n    return CurrentUser;\r\n}\r\n\r\nexport async function GetUserRoles(user: IDiscordUser): Promise<string[] | undefined> {\r\n    user = user || await GetCurrentDiscordUser();\r\n\r\n    const request = await fetchBackend(\"bot/user/roles\", \"GET\");\r\n\r\n    if (request && request.status === 200) {\r\n        const result: IDiscordRoleData[] = await request.json();\r\n\r\n        return result.map(role => role.name);\r\n    }\r\n}\r\n\r\nexport async function AssignUserRole(roleName: string, user?: IDiscordUser) {\r\n    return await fetchBackend(\"bot/user/roles\", \"PUT\", { role: roleName });\r\n}\r\n\r\nexport async function GetUserAvatar(user?: IDiscordUser): Promise<string | undefined> {\r\n    user = user || await GetCurrentDiscordUser();\r\n    if (!user) return;\r\n    return `https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png`;\r\n}\r\n\r\nexport interface IDiscordUser {\r\n    \"username\": string;\r\n    \"locale\"?: string;\r\n    \"premium_type\"?: number;\r\n    \"mfa_enabled\": boolean;\r\n    \"flags\"?: number;\r\n    \"avatar\": string;\r\n    \"discriminator\": string;\r\n    \"id\": string;\r\n}\r\n\r\nexport interface IDiscordRoleData {\r\n    deleted: boolean;\r\n    id: string;\r\n    name: string;\r\n    color: number;\r\n    hoist: boolean;\r\n    position: number;\r\n    permissions: number;\r\n    managed: boolean;\r\n    mentionable: boolean;\r\n}\r\n\r\nexport interface IDiscordGuildMember {\r\n    /** @summary the user this guild member represents */\r\n    user: IDiscordUser;\r\n    /** @summary this users guild nickname (if one is set) */\r\n    nick?: string;\r\n    /** @summary array of role object ids @type Snowflake[] */\r\n    roles: string[];\r\n    /** @summary when the user joined the guild */\r\n    joined_at: string;\r\n    /** @summary when the user used their Nitro boost on the server */\r\n    premium_since?: string;\r\n    /** @summary whether the user is deafened in voice channels */\r\n    deaf: boolean;\r\n    /** @summary whether the user is muted in voice channels */\r\n    mute: boolean;\r\n};\r\n\r\nexport interface IDiscordGuild {\r\n    \"owner\": boolean,\r\n    \"permissions\": number,\r\n    \"icon\": string,\r\n    \"id\": string,\r\n    \"name\": string;\r\n}\r\n\r\nexport interface IDiscordAuthResponse {\r\n    \"access_token\": string;\r\n    \"token_type\": \"Bearer\";\r\n    \"expires_in\": number;\r\n    \"expires_at\"?: number;\r\n    \"refresh_token\": string;\r\n    \"scope\": string;\r\n}","import { isLocalhost } from \"./helpers\";\r\n\r\nexport const Links = {\r\n  thisSiteRepo: \"https://github.com/UWPCommunity/uwpcommunity.github.io/\",\r\n  launch2019Medium: \"https://medium.com/@Arlodottxt/launch-2019-7efd37cc0877\",\r\n  discordServerInvite: \"https://discord.gg/eBHZSKG\",\r\n  githubOrganization: \"https://github.com/UWPCommunity/\"\r\n};\r\n\r\nexport const Images = {\r\n  discordChatExample: \"/assets/img/discordchatexample.png\",\r\n  githubOrgScreenshot: \"/assets/img/githuborgscreenshot.png\",\r\n  launchHeroImage: \"/assets/img/LaunchHero.png\",\r\n  launchHeroImageHD: \"/assets/img/LaunchHeroHD.png\",\r\n  launchAppsHero: \"/assets/img/LaunchAppsHero.png\",\r\n\r\n  uwpCommunityLogo: \"/assets/img/uwpCommunityLogo.png\",\r\n  Badges: {\r\n    msstore: \"/assets/img/msstoreBadge.svg\",\r\n    github: \"/assets/img/githubBadge.svg\",\r\n    discord: \"/assets/img/discordBadge.svg\"\r\n  }\r\n};\r\n\r\nexport const MicrosoftStoreAppCategories = [\r\n  \"Books & reference\",\r\n  \"Business\",\r\n  \"Developer tools\",\r\n  \"Education\",\r\n  \"Entertainment\",\r\n  \"Food & dining\",\r\n  \"Government & politics\",\r\n  \"Kids & family\",\r\n  \"Lifestyle\",\r\n  \"Medical\",\r\n  \"Multimedia design\",\r\n  \"Music\",\r\n  \"Navigation & maps\",\r\n  \"News & weather\",\r\n  \"Personal finance\",\r\n  \"Personalization\",\r\n  \"Photo & video\",\r\n  \"Productivity\",\r\n  \"Security\",\r\n  \"Shopping\",\r\n  \"Social\",\r\n  \"Sports\",\r\n  \"Travel\",\r\n  \"Utilities & tools\"\r\n];\r\n\r\nexport const backendHost: string = (\r\n  isLocalhost ? \"localhost:5000\" : \"uwpcommunity-site-backend.herokuapp.com\"\r\n); ","import { AuthData, GetCurrentDiscordUser } from \"./services/discord\";\r\nimport { backendHost } from \"./const\";\r\n\r\nexport const getStoreUrl = (id: string) => {\r\n    return `https://www.microsoft.com/store/apps/${id}`;\r\n}\r\n\r\nexport const getGithubUrl = (id: string) => {\r\n    return `https://www.github.com/${id}`;\r\n}\r\n\r\nexport const getDiscordUrl = (id: string) => {\r\n    return `https://www.discord.gg/${id}`;\r\n}\r\n\r\nexport const getHeadTitle = (path: string) => {\r\n    let title = \"UWP Community\"\r\n    switch (path) {\r\n        case \"/\":\r\n            title = title + \" // Home\"\r\n            break;\r\n        case \"/projects\":\r\n            title = title + \" // Projects\"\r\n            break;\r\n        case \"/launch\":\r\n            title = title + \" // Launch\"\r\n            break;\r\n        case \"/dashboard\":\r\n            title = title + \" // Dashboard\"\r\n            break;\r\n        case \"/signin\":\r\n            title = title + \" // Sign in\"\r\n            break;\r\n        default:\r\n            title = title + \" // 404\"\r\n            break;\r\n    }\r\n    return title\r\n}\r\nexport const isLocalhost = window.location.host.includes(\"localhost\") || navigator.userAgent.includes(\"ReactSnap\");\r\n\r\nexport async function fetchBackend(route: string, method: (\"GET\" | \"POST\" | \"PUT\" | \"DELETE\"), requestBody?: any): Promise<Response> {\r\n    let headers: string[][] = [[\"Content-Type\", \"application/json\"]];\r\n\r\n    let authData = await AuthData.Get();\r\n    if (authData) headers.push([\"authorization\", authData.access_token])\r\n\r\n    let protocol = isLocalhost ? \"http\" : \"https\";\r\n    let url = `${protocol}://${backendHost}/${route}`;\r\n\r\n    return await fetch(url, {\r\n        headers: headers,\r\n        method: method,\r\n        body: JSON.stringify(requestBody)\r\n    });\r\n}\r\n/**\r\n * @summary Get the first matching regex group, instead of an array with the full string and all matches\r\n * @param {string} toMatch  \r\n * @param {regex} regex \r\n * @returns {string} First matching regex group\r\n */\r\nexport function match(toMatch: string, regex: RegExp) {\r\n    let m = regex.exec(toMatch);\r\n    return (m && m[1]) ? m[1] : undefined;\r\n}\r\nexport async function ObjectToPathQuery(data: object) {\r\n    let queryString: string = \"\";\r\n    for (let [key, value] of Object.entries(data)) {\r\n        queryString += `${key}=${value}&`;\r\n    }\r\n    // If the last character is an \"&\", remove it\r\n    if (queryString.charAt(queryString.length - 1) === \"&\") queryString = queryString.slice(0, -1);\r\n    return queryString;\r\n}\r\nexport default {\r\n    getDiscordUrl, getGithubUrl, getStoreUrl\r\n}","import { IUser } from \"./users\";\r\nimport { fetchBackend, ObjectToPathQuery, match } from \"../helpers\";\r\n\r\nexport async function CreateProject(projectData: ICreateProjectsRequestBody): Promise<Response> {\r\n    // Reformat microsoft store links to an international format\r\n    if (projectData.downloadLink) {\r\n        const storeId = match(projectData.downloadLink, /http.*microsoft\\..*([\\w\\d]{12})[\\/|?]?/);\r\n        if (storeId) {\r\n            projectData.downloadLink = `https://www.microsoft.com/store/apps/${storeId}`;\r\n        }\r\n    }\r\n    return await fetchBackend(\"projects\", \"POST\", projectData);\r\n}\r\nexport interface ICreateProjectsRequestBody {\r\n    role: \"Developer\" | \"Other\"; // Only a developer or \"Other\" (manager, etc) can create a new project\r\n    appName: string;\r\n    category: string;\r\n    description: string;\r\n    isPrivate: boolean;\r\n    downloadLink?: string;\r\n    githubLink?: string;\r\n    externalLink?: string;\r\n    launchYear: number;\r\n    awaitingLaunchApproval: boolean;\r\n    needsManualReview: boolean;\r\n    heroImage: string;\r\n    lookingForRoles: string[];\r\n}\r\n\r\n\r\nexport async function ModifyProject(projectData: IModifyProjectsRequestBody, queryData: IModifyProjectRequestQuery) {\r\n    return await fetchBackend(`projects?${ObjectToPathQuery(queryData)}`, \"POST\", projectData);\r\n}\r\n\r\nexport async function GetProjectByDiscordId(discordId: string): Promise<IProject[]> {\r\n    return (await fetchBackend(`projects?discordId=${discordId}`, \"GET\")).json();\r\n}\r\n\r\nexport async function GetAllProjects(): Promise<IProject[]> {\r\n    return (await fetchBackend(`projects`, \"GET\")).json();\r\n}\r\n\r\nexport async function GetLaunchProjects(year: number): Promise<IProject[]> {\r\n    return (await (await fetchBackend(`projects`, \"GET\")).json()).filter((project: IProject) => project.launchYear == year && project.awaitingLaunchApproval == false);\r\n}\r\n\r\ninterface IModifyProjectsRequestBody {\r\n    appName: string;\r\n    description?: string;\r\n    isPrivate: boolean;\r\n    category?: string;\r\n\r\n    downloadLink?: string;\r\n    githubLink?: string;\r\n    externalLink?: string;\r\n\r\n    collaborators?: IUser[];\r\n\r\n    launchYear?: number;\r\n    awaitingLaunchApproval: boolean;\r\n}\r\n\r\ninterface IModifyProjectRequestQuery {\r\n    /** @summary The app name that's being modified */\r\n    appName: string;\r\n}\r\n\r\nexport interface IProjectCollaborator extends IUser {\r\n    role: \"Developer\" | \"Translator\" | \"Beta Tester\" | \"Other\";\r\n}\r\nexport interface IProject {\r\n    id?: number;\r\n\r\n    appName: string;\r\n    description: string;\r\n    isPrivate: boolean;\r\n    downloadLink?: string;\r\n    githubLink?: string;\r\n    externalLink?: string;\r\n\r\n    heroImage: string;\r\n\r\n    awaitingLaunchApproval: boolean;\r\n    needsManualReview: boolean;\r\n    lookingForRoles?: string[];\r\n\r\n    collaborators: IProjectCollaborator[];\r\n\r\n    launchYear?: number;\r\n    category?: string;\r\n};\r\n","import { IProject } from \"../common/services/projects\";\r\nimport { DocumentCard, DocumentCardImage, ImageFit, DocumentCardDetails, DocumentCardTitle, Text, Stack, DocumentCardActions, FontIcon, IButtonProps, PrimaryButton } from \"office-ui-fabric-react\";\r\nimport * as React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nenum ButtonType {\r\n  Github, Download, External\r\n}\r\n\r\ninterface ICustomButtonRenderProps {\r\n  type: ButtonType;\r\n  link: string;\r\n}\r\nconst FaIconStyle: React.CSSProperties = {\r\n  color: \"black\",\r\n  height: \"25px\",\r\n  width: \"25px\"\r\n};\r\n\r\nexport interface IProjectCard {\r\n  project: IProject;\r\n  onEditButtonClicked?: Function;\r\n}\r\n\r\nexport const ProjectCard = (props: IProjectCard) => {\r\n\r\n  function onRenderIcon(buttonProps: IButtonProps | undefined) {\r\n    if (!buttonProps) return null;\r\n    const buttonData: ICustomButtonRenderProps = buttonProps.data;\r\n    if (!buttonData.link) return null;\r\n\r\n    switch (buttonData.type.valueOf()) {\r\n      case ButtonType.Download:\r\n        if (buttonData.link && buttonData.link.includes(\"microsoft.com\")) {\r\n          return <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"microsoft\"]} />\r\n        } else {\r\n          return <FontAwesomeIcon style={FaIconStyle} icon=\"arrow-circle-down\" />\r\n        }\r\n      case ButtonType.External:\r\n        return <FontAwesomeIcon style={FaIconStyle} icon={[\"fas\", \"globe\"]} />\r\n      case ButtonType.Github:\r\n        return <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"github\"]} />\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DocumentCard style={{ maxWidth: 300 }}>\r\n      <DocumentCardImage height={150} imageFit={ImageFit.centerCover} imageSrc={props.project.heroImage} />\r\n      <DocumentCardDetails>\r\n        <DocumentCardTitle title={props.project.appName} shouldTruncate />\r\n        <Stack tokens={{ padding: 15 }}>\r\n          <Text>{props.project.description}</Text>\r\n        </Stack>\r\n        <Stack horizontal tokens={{ childrenGap: 5, padding: 10 }} verticalAlign=\"center\">\r\n          {props.onEditButtonClicked !== undefined ? <PrimaryButton onClick={() => { if (props.onEditButtonClicked) props.onEditButtonClicked() }}>Edit</PrimaryButton> : <></>}\r\n\r\n          <DocumentCardActions actions={[\r\n            {\r\n              data: {\r\n                type: ButtonType.Github,\r\n                link: props.project.githubLink\r\n              },\r\n              href: props.project.githubLink,\r\n              onRenderIcon: onRenderIcon\r\n            },\r\n            {\r\n              data: {\r\n                type: ButtonType.Download,\r\n                link: props.project.downloadLink\r\n              },\r\n              href: props.project.downloadLink,\r\n              onRenderIcon: onRenderIcon\r\n            },\r\n            {\r\n              data: {\r\n                type: ButtonType.External,\r\n                link: props.project.externalLink\r\n              },\r\n              href: props.project.externalLink,\r\n              onRenderIcon: onRenderIcon\r\n            }\r\n          ]} />\r\n        </Stack>\r\n      </DocumentCardDetails>\r\n    </DocumentCard>\r\n  )\r\n}","import * as React from \"react\";\r\nimport { Stack, Text, FontIcon } from \"office-ui-fabric-react\";\r\nimport { GetAllProjects, IProject } from \"../common/services/projects\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\n\r\nexport const Projects: React.StatelessComponent = () => {\r\n  const [projects, setProjects] = React.useState<IProject[]>();\r\n\r\n  async function PopulateProjects() {\r\n    const projectsApi = await GetAllProjects();\r\n    setProjects(projectsApi);\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    PopulateProjects();\r\n  }, []);\r\n\r\n  return (\r\n    /* Todo: Add a header with brief explanation of the below */\r\n    <Stack horizontalAlign=\"center\" horizontal wrap tokens={{ childrenGap: 10 }}>\r\n      {projects && projects.length > 0 ? projects.map(project => {\r\n        return (\r\n          <ProjectCard project={project}></ProjectCard>\r\n        )\r\n      }) :\r\n        <Stack horizontalAlign=\"center\" style={{ marginTop: \"25vh\" }}>\r\n          <FontIcon iconName=\"sad\" style={{ fontSize: 55 }}></FontIcon>\r\n          <Text variant=\"xLarge\">No projects, yet</Text>\r\n        </Stack>\r\n      }\r\n    </Stack>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\n\r\nexport default styled.div`\r\n    box-shadow: ${Depths.depth8};\r\n    :hover {\r\n      box-shadow: ${Depths.depth16};\r\n    };\r\n    transition: 150ms all;\r\n`;","import React, { CSSProperties } from \"react\";\r\nimport { Stack, Text, PrimaryButton, Image, ImageFit, ImageCoverStyle } from \"office-ui-fabric-react\";\r\nimport { Links, Images } from \"../common/const\";\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport HoverBox from '../components/HoverBox';\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\n\r\nconst FaIconStyle: CSSProperties = {\r\n  color: \"black\",\r\n  height: \"65px\",\r\n  width: \"65px\"\r\n};\r\n\r\nconst LinkCard = styled.section`\r\n    font-family: Segoe UI, sans-serif;\r\n    padding: 7px;\r\n    max-width: 400px;\r\n`;\r\n\r\nlet Link = styled.a`\r\n    color: blue;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    :hover {\r\n      text-decoration: underline;\r\n    };\r\n`;\r\n\r\nlet Img = styled.img`\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n`;\r\n\r\nconst LargeCard = styled.div`\r\nbox-shadow: ${Depths.depth16};\r\n.heroImage, .heroImage img {\r\n  width: 620px;\r\n  height: 350px;\r\n}\r\n\r\n@media screen and (max-width: 1079px) {\r\n  width: min-content;\r\n  .heroImage, .heroImage img {\r\n      width: 750px;\r\n      height: 350px;\r\n  }\r\n}\r\n`;\r\n\r\nexport const Home: React.StatelessComponent = () => {\r\n  return (\r\n    <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n      <p style={{ fontFamily: \"Segoe UI, Sans-Serif\", fontWeight: \"lighter\", fontSize: \"24px\", margin: 0 }}>The homepage for the unofficial Discord server </p>\r\n\r\n      <Stack wrap horizontal horizontalAlign=\"space-around\" tokens={{ childrenGap: 25 }}>\r\n\r\n        <LargeCard>\r\n          <Stack horizontal wrap maxWidth=\"1200px\" horizontalAlign=\"space-evenly\">\r\n            <Image className=\"heroImage\" coverStyle={ImageCoverStyle.landscape} imageFit={ImageFit.cover} src={Images.launchHeroImageHD} />\r\n\r\n            <Stack style={{ margin: \"15px\" }} verticalAlign=\"center\">\r\n              <Text variant=\"xLargePlus\">Launch 2020 signup coming soon</Text>\r\n              <Text variant=\"mediumPlus\">Check back later</Text>\r\n              <PrimaryButton style={{ marginTop: \"15px\" }} text=\"Submit your app\" disabled />\r\n            </Stack>\r\n          </Stack>\r\n        </LargeCard>\r\n\r\n        <Stack wrap horizontal horizontalAlign=\"space-around\" tokens={{ childrenGap: 15 }}>\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.discordChatExample} />\r\n\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>Discuss the platform with other enthusiasts, get help as a developer, and interact with the devs of your favorite apps</Text>\r\n                    <Link href={Links.discordServerInvite} target=\"_blank\"> Join our discord server </Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"discord\"]} />\r\n                </Stack>\r\n\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.githubOrgScreenshot} />\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>Many of our projects are open source, so others can learn or build with them</Text>\r\n                    <Link href={Links.githubOrganization} target=\"_blank\">See our open source projects</Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"github\"]} />\r\n                </Stack>\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.launchHeroImage} />\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>As a community of talented developers, each year we Launch our projects together in an annual event known as <code>Launch</code></Text>\r\n                    <Link href={Links.launch2019Medium} target=\"_blank\">Read about Launch 2019</Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"medium\"]} />\r\n                </Stack>\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n","import React, { CSSProperties } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Text, Stack } from \"office-ui-fabric-react\";\r\n\r\nconst navLinkActiveStyle: CSSProperties = {\r\n  borderBottom: \"3px solid #5e5eff\",\r\n};\r\n\r\nconst MyNavLink = styled(NavLink)`     \r\n   color: black;\r\n   padding: 10px 12px 5px 12px;\r\n   text-align: center;\r\n   display: inline-block;\r\n   text-decoration: none;\r\n   margin: 7px;\r\n   border-bottom: 3px solid #c9c9c9;\r\n\r\n  :hover  {\r\n    text-decoration: none;    \r\n    border-bottom: 3px solid #9e9e9e;\r\n  };\r\n`;\r\n\r\nconst NavText = styled(Text)`\r\n  font-size: 18px;\r\n`;\r\n\r\nexport class NavMenu extends React.Component<any, any> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <nav>\r\n        <Stack horizontal wrap style={{ maxWidth: \"100%\" }}>\r\n          <MyNavLink to=\"/\" exact activeStyle={navLinkActiveStyle}>\r\n            <NavText>Home</NavText>\r\n          </MyNavLink>\r\n          <MyNavLink to=\"/projects\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Projects</NavText>\r\n          </MyNavLink>\r\n          <MyNavLink to=\"/launch\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Launch</NavText>\r\n          </MyNavLink>\r\n          {/* Present but not shown, so it gets crawled */}\r\n          <MyNavLink style={{ display: \"none\" }} to=\"/dashboard\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Dashboard</NavText>\r\n          </MyNavLink>\r\n        </Stack>\r\n      </nav>\r\n    );\r\n  }\r\n}","import { fetchBackend } from \"../helpers\";\r\n\r\nexport async function CreateUser(userData: IUser): Promise<Response> {\r\n    return await fetchBackend(\"user\", \"POST\", userData);\r\n}\r\n\r\nexport async function ModifyUser(userData: IUser) {\r\n    return await fetchBackend(\"user\", \"PUT\", userData);\r\n}\r\n\r\nexport async function GetUser(discordId: string) {\r\n    return await fetchBackend(`user?discordId=${discordId}`, \"GET\");\r\n}\r\n\r\nexport interface IUser {\r\n    name: string;\r\n    discordId: string;\r\n    email?: string; // This is a contact email supplied by the user, and is safe to be public \r\n}","import { Text, Stack, PrimaryButton, TextField, DefaultButton } from \"office-ui-fabric-react\";\r\nimport React from \"react\";\r\nimport { IBackendReponseError } from \"../../common/interfaces\";\r\nimport { CreateUser, IUser, ModifyUser } from \"../../common/services/users\";\r\nimport { CurrentUser } from \"../../common/services/discord\";\r\n\r\nexport interface IRegisterDevProps {\r\n    onCancel?: Function;\r\n    onSuccess: Function;\r\n    userData?: Partial<IUser>;\r\n};\r\n\r\nexport const RegisterUserForm = (props: IRegisterDevProps) => {\r\n    let [userRequest, setUserRequest] = React.useState<IUser>({\r\n        discordId: CurrentUser.id,\r\n        name: \"\"\r\n    });\r\n\r\n    let [submissionError, setSubmissionError] = React.useState<string>(\"\");\r\n    let [showSuccessIndicator, setShowSuccessIndicator] = React.useState(false);\r\n\r\n    /* Todo: Attempt to find an existing user in the DB and set this according, then prepopulate the fields below */\r\n    let [modifying] = React.useState(false);\r\n\r\n    async function addUser() {\r\n        if (!userRequest) return;\r\n\r\n        let request = modifying ? await ModifyUser(userRequest)\r\n            : await CreateUser(userRequest);\r\n\r\n        let success = await request.status === 200;\r\n\r\n        if (!success) {\r\n            let error: IBackendReponseError = await request.json();\r\n            if (error.error && error.reason) {\r\n                setSubmissionError(error.reason);\r\n            }\r\n        } else {\r\n            setShowSuccessIndicator(true);\r\n            setTimeout(() => {\r\n                props.onSuccess();\r\n            }, 2500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n            {/* Need to toggle both src and display so it trigger the animation, and space is taken up during the transition (while the svg loads) */}\r\n            <img style={{ display: (showSuccessIndicator ? \"block\" : \"none\"), height: \"200px\" }} src={showSuccessIndicator ? \"/assets/img/checkanimated.svg\" : \"\"} alt=\"Check\" />\r\n            <Stack horizontalAlign=\"start\" tokens={{ childrenGap: 10 }} style={{ maxWidth: \"100%\", width: \"300px\", display: (!showSuccessIndicator ? \"block\" : \"none\") }}>\r\n                <TextField label=\"Name:\"\r\n                    description=\"Friendly name for other users/devs to see\"\r\n                    defaultValue={props.userData ? props.userData.name : \"\"}\r\n                    styles={{ root: { width: \"100%\" } }}\r\n                    required\r\n                    onChange={(e: any, value: any) => setUserRequest({ ...userRequest, name: value })} />\r\n\r\n                <TextField label=\"Contact email:\"\r\n                    description=\"Optional\"\r\n                    defaultValue={props.userData ? props.userData.email : \"\"}\r\n                    styles={{ root: { width: \"100%\" } }}\r\n                    onChange={(e: any, value: any) => setUserRequest({ ...userRequest, email: value })} />\r\n\r\n                <Text style={{ color: \"red\" }}>{submissionError}</Text>\r\n                <Stack horizontal tokens={{ childrenGap: 10 }}>\r\n                    <PrimaryButton text=\"Register\"\r\n                        onClick={addUser} />\r\n                    {\r\n                        props.onCancel ?\r\n                            <DefaultButton text=\"Cancel\" onClick={() => props.onCancel ? props.onCancel() : undefined} />\r\n                            : \"\"\r\n                    }\r\n                </Stack>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n};","import * as React from \"react\";\r\nimport { Stack, Link, Text, PrimaryButton, Persona, TooltipHost, TooltipDelay, DefaultButton, IContextualMenuProps, IContextualMenuItem, PersonaSize, Dialog, DialogFooter, DialogType } from \"office-ui-fabric-react\";\r\nimport { Images, Links } from \"../common/const\";\r\nimport { NavMenu } from \"./NavMenu\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CSSProperties } from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { GetUserAvatar, GetCurrentDiscordUser, IDiscordUser, AuthData, IsUserInServer, discordAuthEndpoint } from \"../common/services/discord\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getHeadTitle } from \"../common/helpers\";\r\nimport { History } from \"history\";\r\nimport { RegisterUserForm } from \"./forms/RegisterUser\";\r\nimport { GetUser, IUser } from \"../common/services/users\";\r\n\r\nconst FaIconStyle: CSSProperties = {\r\n  color: \"white\",\r\n  height: \"20px\",\r\n  width: \"20px\",\r\n  paddingLeft: \"10px\"\r\n};\r\n\r\nexport const AppHeader: React.StatelessComponent = (props: any) => {\r\n  return (\r\n    <Route render={({ history }) => (\r\n      <header style={{ marginBottom: \"10px\", maxWidth: \"98vw\" }}>\r\n        <Stack style={{ width: \"100vw\", margin: \"0px\" }} horizontal wrap tokens={{ childrenGap: 10 }} verticalAlign='end' horizontalAlign=\"space-around\">\r\n          <Helmet>\r\n            <title>{getHeadTitle(props.location.pathname)}</title>\r\n          </Helmet>\r\n          <Link href=\"/\">\r\n            {/* This is an img and not an Image from FabricUI because when rendered on the live server, the image randomly doesn't show */}\r\n            <img style={{ maxWidth: \"100vw\" }} src={Images.uwpCommunityLogo} alt=\"Uwp Community Logo\" />\r\n          </Link>\r\n\r\n          <NavMenu />\r\n\r\n          <SignInButton history={history} />\r\n        </Stack>\r\n\r\n      </header>\r\n    )} />\r\n  );\r\n};\r\n\r\nconst PrivacyPolicyText: React.StatelessComponent = () => <p>Make sure you've read the <NavLink to=\"/privacy-policy\">Privacy Policy</NavLink> first -- by logging in, you agree to accept this policy.</p>\r\n\r\nexport const SignInButton: React.FC<{ history: History }> = ({ history }) => {\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n  const [discordUser, setDiscordUser] = React.useState<IDiscordUser>();\r\n  const [user, setUser] = React.useState<IUser>();\r\n  const [userAvatar, setUserAvatar] = React.useState<string>();\r\n  const [joinServerAlertHidden, setJoinServerAlertHidden] = React.useState(true);\r\n  const [registerUserShown, setRegisterUserShown] = React.useState(false);\r\n  const [editProfileShown, setEditProfileShown] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setupLoggedInUser();\r\n  }, []);\r\n\r\n  async function setupLoggedInUser() {\r\n    const discordUser = await GetCurrentDiscordUser();\r\n    const avatarUrl = await GetUserAvatar(discordUser);\r\n\r\n    if (!discordUser || !avatarUrl) return;\r\n    setLoggedIn(true);\r\n    setDiscordUser(discordUser);\r\n\r\n    let userIsInServer = await IsUserInServer();\r\n    if (!userIsInServer) {\r\n      setJoinServerAlertHidden(false);\r\n      return;\r\n    }\r\n\r\n    const userRequest = await GetUser(discordUser.id);\r\n    if (userRequest.status === 404) {\r\n      // User isn't registered\r\n      setRegisterUserShown(true);\r\n      return;\r\n    }\r\n    if (userRequest && userRequest.status !== 200) throw new Error(await userRequest.text());\r\n\r\n    let user: IUser = await userRequest.json();\r\n\r\n    setUser(user);\r\n    setUserAvatar(avatarUrl);\r\n  }\r\n\r\n  const LoggedInButtonDropdownItems: IContextualMenuProps = {\r\n    onItemClick: OnMenuItemClick,\r\n    useTargetWidth: true,\r\n    items: [{\r\n      key: \"dashboard\",\r\n      text: \"Dashboard\",\r\n      iconProps: { iconName: \"ViewDashboard\" }\r\n    }, {\r\n      /* Todo: Only show this button if the user HAS a profile to edit */\r\n      key: \"editProfile\",\r\n      text: \"Edit Profile\",\r\n      iconProps: { iconName: \"EditContact\" }\r\n    }, {\r\n      key: \"logOut\",\r\n      text: \"Log out\",\r\n      iconProps: { iconName: \"SignOut\" }\r\n    }]\r\n  }\r\n\r\n  function OnMenuItemClick(ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined, item?: IContextualMenuItem | undefined) {\r\n    if (!item) return;\r\n\r\n    switch (item.key) {\r\n      case \"logOut\":\r\n        LogOut();\r\n        break;\r\n      case \"dashboard\":\r\n        history.push(\"/dashboard\");\r\n        break;\r\n      case \"editProfile\":\r\n        setEditProfileShown(true);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function LogOut() {\r\n    AuthData.Clear();\r\n    history.push(\"/\");\r\n    window.location.reload();\r\n  }\r\n\r\n  function CloseJoinServerDialog() {\r\n    setJoinServerAlertHidden(true);\r\n    LogOut();\r\n  }\r\n\r\n\r\n  return (\r\n    loggedIn && discordUser ?\r\n      <Stack>\r\n        <Dialog\r\n          hidden={joinServerAlertHidden}\r\n          dialogContentProps={{\r\n            type: DialogType.normal,\r\n            title: \"Join the Community to continue\",\r\n            subText: \"Looks like you aren't part of the UWP Community. To sign in, you'll need to join the server first\"\r\n          }}\r\n          modalProps={{\r\n            isBlocking: true,\r\n            styles: { main: { maxWidth: 450 } }\r\n          }}\r\n        >\r\n          <DialogFooter>\r\n            <PrimaryButton href={Links.discordServerInvite} text=\"Join the server\" />\r\n            <DefaultButton onClick={CloseJoinServerDialog} text=\"Sign out\" />\r\n          </DialogFooter>\r\n        </Dialog>\r\n        <TooltipHost content={`Logged in as ${discordUser.username}`} delay={TooltipDelay.long}>\r\n          <DefaultButton style={{ padding: \"25px\", border: \"0px solid black\" }} menuProps={LoggedInButtonDropdownItems}>\r\n            <Persona size={PersonaSize.size40} text={discordUser.username} imageUrl={userAvatar} />\r\n          </DefaultButton>\r\n        </TooltipHost>\r\n\r\n        <Dialog hidden={!editProfileShown && !registerUserShown} dialogContentProps={{ type: DialogType.largeHeader, title: registerUserShown ? \"One more step\" : \"Edit profile\" }}>\r\n          {registerUserShown ?\r\n            <Text variant=\"large\">Complete your profile to get started</Text>\r\n            : <></>}\r\n          <RegisterUserForm userData={user} onSuccess={() => { setRegisterUserShown(false); setEditProfileShown(false) }} onCancel={!registerUserShown ? () => setEditProfileShown(false) : undefined} />\r\n        </Dialog>\r\n      </Stack>\r\n      :\r\n      <Stack verticalAlign=\"start\" style={{ marginBottom: \"22px\" }}>\r\n        <TooltipHost\r\n          content={<PrivacyPolicyText />}\r\n          id={'privacyPolicyHost'}\r\n          calloutProps={{ gapSpace: 0 }}\r\n          closeDelay={500}\r\n          delay={0}\r\n          styles={{ root: { display: 'inline-block' } }}\r\n        >\r\n          <PrimaryButton href={discordAuthEndpoint} style={{ padding: \"18px\" }}>\r\n            <Text>Sign in</Text>\r\n            <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"discord\"]} />\r\n          </PrimaryButton>\r\n      </TooltipHost>\r\n    </Stack>\r\n  );\r\n};","import React, { useState, CSSProperties } from \"react\";\r\nimport { Text, Stack, PrimaryButton, IconButton, Image, ImageCoverStyle, ImageFit } from \"office-ui-fabric-react\";\r\nimport styled from 'styled-components';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport HoverBox from '../components/HoverBox';\r\nimport { Images } from \"../common/const\";\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\nimport { GetLaunchProjects, IProject } from \"../common/services/projects\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\nimport { GetCurrentDiscordUser, IDiscordUser } from \"../common/services/discord\";\r\n\r\nexport const Launch = () => {\r\n    const [projects, setProjects] = React.useState<IProject[]>();\r\n    const [user, setUser] = React.useState<IDiscordUser>();\r\n\r\n    async function GetNextLaunchEventProjects() {\r\n        setProjects(await GetLaunchProjects(2020));\r\n    }\r\n    React.useEffect(()=>{\r\n        GetNextLaunchEventProjects();\r\n        (async () => {\r\n            setUser(await GetCurrentDiscordUser());\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <Stack tokens={{childrenGap: 25}}>\r\n                <Stack horizontal wrap style={{ boxShadow: Depths.depth16 }} maxWidth=\"1200px\">\r\n                    <Image width=\"100%\" height=\"400px\" src={Images.launchAppsHero} coverStyle={ImageCoverStyle.landscape} imageFit={ImageFit.cover} />\r\n                    <Stack style={{margin: \"20px\"}}>\r\n\r\n                        <Text style={{fontFamily: \"Segoe UI\", fontSize: \"30px\", fontWeight: \"lighter\"}}>// Launch</Text>\r\n\r\n                        <Text style={{marginTop: \"10px\", fontWeight: 500}} variant=\"xLarge\">Learn, develop, and Launch together</Text>\r\n                        <Text style={{marginTop: \"10px\"}} variant=\"mediumPlus\">Once a year, our community of Windows App developers join together to release their UWP-related projects. If you’re a developer, new or veteran, then we HIGHLY encourage you to join the server and register your app for the next Launch event!</Text>\r\n                        <Text style={{marginTop: \"10px\"}} variant=\"large\">{ user ? \"Go to your dashboard to get started\" : \"\"}</Text>\r\n                    </Stack>\r\n                </Stack>\r\n\r\n                {projects ? <Text variant=\"xLarge\">Launch 2020 Participants</Text> : <></>}\r\n            <Stack horizontal wrap horizontalAlign=\"center\" tokens={{childrenGap: 25}}>\r\n                {/* Todo: Add launch 2019 summary */}\r\n                {projects ? projects.map(project => <ProjectCard project={project} />) : <></>}\r\n            </Stack>\r\n        </Stack>\r\n    );\r\n};\r\n\r\ninterface ILaunchCardProps {\r\n    header: string;\r\n    description: string;\r\n    path: string;\r\n    buttonText?: string;\r\n    buttonDisabled?: boolean;\r\n    buttonStyle?: CSSProperties;\r\n};\r\n\r\nconst LaunchCardStyle = styled(HoverBox)`\r\n    max-height: 500px;\r\n    max-width: 350px;\r\n    padding: 50px;\r\n    :hover {\r\n                pointer: cursor;\r\n        };\r\n    `;\r\n\r\n","import { Text, Stack, Label, Spinner } from \"office-ui-fabric-react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { AuthData } from \"../common/services/discord\";\r\n\r\nexport const Signin: React.FC<any> = () => {\r\n\r\n    let authResponse: string | null = (new URL(window.location.href)).searchParams.get(\"authResponse\");\r\n\r\n    if (authResponse) {\r\n        authResponse = atob(authResponse);\r\n        AuthData.Set(JSON.parse(authResponse));\r\n\r\n        window.location.href = \"/dashboard\";\r\n    }\r\n\r\n    const [showRedirectLink, setShowRedirectLink] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setShowRedirectLink(true);\r\n        }, 7000);\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Stack>\r\n                <Stack horizontalAlign=\"center\">\r\n                    <Label>Signing in...</Label>\r\n                    <Spinner label=\"Hold on tight\" ariaLive=\"assertive\" />\r\n                    <Text style={{ visibility: showRedirectLink ? \"visible\" : \"hidden\" }}>If not redirected automatically, <a href=\"/dashboard\">click here</a></Text>\r\n                </Stack>\r\n            </Stack>\r\n        </div>\r\n    )\r\n};\r\n","import { Text, Stack, PrimaryButton, Checkbox, TextField, DefaultButton, IComboBoxOption, ComboBox, MaskedTextField, Pivot, PivotItem, IComboBox } from \"office-ui-fabric-react\";\r\nimport React, { FormEvent } from \"react\";\r\nimport { IBackendReponseError } from \"../../common/interfaces\";\r\nimport { CreateProject, ICreateProjectsRequestBody, IProject } from \"../../common/services/projects\";\r\nimport { MicrosoftStoreAppCategories } from \"../../common/const\";\r\n\r\nexport interface IEditProjectDetailsFormProps {\r\n    onCancel?: Function;\r\n    onSuccess: Function;\r\n    projectData: Partial<IProject>;\r\n    editing?: boolean;\r\n};\r\n\r\nconst roleOptions: IComboBoxOption[] = [\r\n    { key: 1, text: 'Developer', selected: true },\r\n    { key: 2, text: 'Beta tester' },\r\n    { key: 3, text: 'Translator' },\r\n    { key: 4, text: 'Other' }\r\n];\r\n\r\nconst categoryOptions: IComboBoxOption[] = MicrosoftStoreAppCategories.map((category, index) => {\r\n    return { key: category, text: category }\r\n});\r\n\r\nexport const EditProjectDetailsForm = (props: IEditProjectDetailsFormProps) => {\r\n    let [projectRequest, setProjectRequest] = React.useState<Partial<ICreateProjectsRequestBody>>({\r\n        isPrivate: false, awaitingLaunchApproval: false, role: \"Developer\", ...props.projectData\r\n    });\r\n\r\n    let [submissionError, setSubmissionError] = React.useState<string>(\"\");\r\n    let [showSuccessIndicator, setShowSuccessIndicator] = React.useState(false);\r\n\r\n    async function submitParticipantRequest() {\r\n        let request = await CreateProject(projectRequest as ICreateProjectsRequestBody);\r\n\r\n        let success = request.status === 200;\r\n\r\n        if (!success) {\r\n            let error: IBackendReponseError = await request.json();\r\n            if (error.error && error.reason) {\r\n                setSubmissionError(error.reason);\r\n            }\r\n        } else {\r\n            setShowSuccessIndicator(true);\r\n            setTimeout(() => {\r\n                props.onSuccess();\r\n            }, 2500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stack horizontalAlign=\"center\">\r\n            {/* Need to toggle both src and display so it trigger the animation, and space is taken up during the transition (while the svg loads) */}\r\n            <img style={{ display: (showSuccessIndicator ? \"block\" : \"none\"), height: \"200px\" }} src={showSuccessIndicator ? \"/assets/img/checkanimated.svg\" : \"\"} alt=\"Check\" />\r\n            <Stack horizontalAlign=\"start\" tokens={{ childrenGap: 10 }} style={{ maxWidth: \"100%\", width: \"300px\", display: (!showSuccessIndicator ? \"block\" : \"none\") }}>\r\n                <Pivot>\r\n                    <PivotItem headerText=\"Basic info\">\r\n                        <Stack tokens={{ childrenGap: 10 }}>\r\n                            <TextField label=\"Project name:\" maxLength={50}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                value={projectRequest.appName}\r\n                                required onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, appName: value })} />\r\n\r\n                            <TextField label=\"Description\" maxLength={140}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                multiline required autoAdjustHeight\r\n                                value={projectRequest.description}\r\n                                placeholder=\"Enter a brief description\"\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, description: value })} />\r\n\r\n                            <TextField label=\"Hero image\"\r\n                                type=\"url\"\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                required\r\n                                value={projectRequest.heroImage}\r\n                                placeholder=\"External link to an image of your app\"\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, heroImage: value })} />\r\n                        </Stack>\r\n                    </PivotItem>\r\n                    <PivotItem headerText=\"Project links\">\r\n                        <Stack tokens={{ childrenGap: 10 }}>\r\n                            <TextField label=\"Download Link:\"\r\n                                value={projectRequest.downloadLink}\r\n                                disabled={!props.editing && props.projectData.downloadLink !== undefined}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, downloadLink: value })} />\r\n\r\n                            <TextField label=\"Github Link:\"\r\n                                value={projectRequest.githubLink}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, githubLink: value })} />\r\n\r\n                            <TextField label=\"External link\"\r\n                                value={projectRequest.externalLink}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, externalLink: value })} />\r\n\r\n                        </Stack>\r\n                    </PivotItem>\r\n                    <PivotItem headerText=\"More info\">\r\n                        <Stack tokens={{ childrenGap: 10 }}>\r\n                            <ComboBox\r\n                                label=\"Category\"\r\n                                options={categoryOptions}\r\n                                defaultSelectedKey={projectRequest.category || categoryOptions[0].key}\r\n                                onChange={(e: FormEvent<IComboBox>, option: IComboBoxOption | undefined) => {\r\n                                    if (!option) return;\r\n                                    setProjectRequest({ ...projectRequest, category: option.text });\r\n                                }} />\r\n\r\n                            <Checkbox label=\"Project is private/secret\"\r\n                                checked={projectRequest.isPrivate}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, isPrivate: value })} />\r\n\r\n                            <Checkbox label=\"Partipation in Launch 2020\"\r\n                                checked={projectRequest.awaitingLaunchApproval}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, awaitingLaunchApproval: value })} />\r\n\r\n                            <Text style={{ display: projectRequest.awaitingLaunchApproval ? \"block\" : \"none\" }}>A moderator will contact you over Discord to help with the manual review process for Launch 2020</Text>\r\n                        </Stack>\r\n                    </PivotItem>\r\n                </Pivot>\r\n\r\n                <Text style={{ color: \"red\" }}>{submissionError}</Text>\r\n                <Stack horizontal tokens={{ childrenGap: 10 }} horizontalAlign=\"space-evenly\" style={{ marginTop: 20 }}>\r\n                    {\r\n                        props.onCancel ?\r\n                            <DefaultButton text=\"Cancel\" onClick={() => props.onCancel ? props.onCancel() : undefined} />\r\n                            : \"\"\r\n                    }\r\n                    <PrimaryButton text=\"Register\" onClick={submitParticipantRequest} />\r\n                </Stack>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n};","import { EditProjectDetailsForm, IEditProjectDetailsFormProps } from './EditProjectDetailsForm';\r\nimport React from \"react\";\r\nimport { IProject } from '../../common/services/projects';\r\nimport { Stack, Text, PrimaryButton, DefaultButton, TooltipHost, DirectionalHint, Link, TeachingBubble, TextField, FontIcon } from 'office-ui-fabric-react';\r\nimport { fetchBackend } from '../../common/helpers';\r\n\r\nexport interface ICreateProjectFormProps extends IEditProjectDetailsFormProps {\r\n\r\n};\r\n\r\nexport const CreateProjectForm = (props: ICreateProjectFormProps) => {\r\n    const [verified, setVerified] = React.useState(false);\r\n    const [codeVerificationDisplayed, setCodeVerificationDisplayed] = React.useState(false);\r\n    const [manualReviewMessageShown, setManualReviewMessageShown] = React.useState(true);\r\n    const [projectData, setProjectData] = React.useState<Partial<IProject>>({});\r\n\r\n    return (\r\n        codeVerificationDisplayed ? <ProjectCodeVerifier onCancel={() => { setCodeVerificationDisplayed(false) }} onSuccess={(projectDetails) => {\r\n            setProjectData(projectDetails);\r\n\r\n            setCodeVerificationDisplayed(false);\r\n            setVerified(true);\r\n            setManualReviewMessageShown(false);\r\n        }} />\r\n            :\r\n            verified ?\r\n                (manualReviewMessageShown ?\r\n                    <Stack tokens={{ childrenGap: 10 }}>\r\n                        <Text>Manual review is required after submitting your project. This could take anywhere from several hours to several days</Text>\r\n                        <Stack horizontal tokens={{ childrenGap: 10 }} horizontalAlign=\"space-evenly\" style={{ marginTop: 20 }}>\r\n                            <DefaultButton onClick={() => {\r\n                                setManualReviewMessageShown(false);\r\n                                setVerified(false);\r\n                            }}>Go back</DefaultButton>\r\n                            <PrimaryButton onClick={() => setManualReviewMessageShown(false)}>Continue</PrimaryButton>\r\n                        </Stack>\r\n                    </Stack>\r\n                    : <EditProjectDetailsForm {...props} projectData={projectData} />)\r\n                :\r\n                <Stack tokens={{ childrenGap: 10, padding: 5 }}>\r\n                    <Text variant=\"large\">Before we begin...</Text>\r\n                    <Stack horizontal tokens={{ childrenGap: 5 }}>\r\n                        <FontIcon iconName=\"ReceiptCheck\" style={{ fontSize: 25 }} />\r\n                        <Text variant=\"medium\">Is your app public and already in the store?</Text>\r\n                    </Stack>\r\n                    <Stack horizontal tokens={{ childrenGap: 5 }}>\r\n                        <FontIcon iconName=\"ReceiptCheck\" style={{ fontSize: 25 }} />\r\n                        <Text variant=\"medium\">Do you have a \"Publisher support\" email listed on your apps' MS Store page?</Text>\r\n                    </Stack>\r\n                    <Stack style={{ marginTop: 20 }} horizontal tokens={{ childrenGap: 15 }} horizontalAlign=\"space-evenly\">\r\n                        <DefaultButton onClick={() => { setProjectData({ ...props.projectData, ...projectData }); setVerified(true) }}>No</DefaultButton>\r\n                        <PrimaryButton onClick={() => { setProjectData({ ...props.projectData, ...projectData }); setCodeVerificationDisplayed(true) }}>Yes</PrimaryButton>\r\n                    </Stack>\r\n                </Stack>\r\n    );\r\n};\r\n\r\ninterface IProjectCodeVerifierProps {\r\n    onSuccess: (projectDetails: Partial<IProject>) => void;\r\n    onCancel: Function;\r\n    projectData?: Partial<IProject>;\r\n}\r\nexport const ProjectCodeVerifier = (props: IProjectCodeVerifierProps) => {\r\n    enum VerficationState {\r\n        \"PreInit\", \"WaitingForCode\", \"Verified\"\r\n    }\r\n\r\n    const [storeIdTeachingBubbleTarget, setStoreIdTeachingBubbleTarget] = React.useState<MouseEvent>();\r\n    const [storeId, setStoreId] = React.useState<string>();\r\n    const [verificationCodeText, setVerificationCodeText] = React.useState<string>();\r\n    const [verificationState, setVerificationState] = React.useState<VerficationState>(VerficationState.PreInit);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n    async function BeginVerification() {\r\n        if (!validateStoreIdField()) return;\r\n        const request = await fetchBackend(\"projects/verification\", \"POST\", {\r\n            storeId: storeId\r\n        });\r\n\r\n        if (request.status === 200) {\r\n            setVerificationState(VerficationState.WaitingForCode);\r\n        } else {\r\n            const response = await request.json();\r\n            console.error(response);\r\n            setErrorMessage(response.reason);\r\n        }\r\n    }\r\n\r\n    async function checkVerification() {\r\n        if (!validateStoreIdField()) return;\r\n        const request = await fetchBackend(`projects/verification?storeId=${storeId}&code=${verificationCodeText}`, \"GET\");\r\n\r\n        if (request.status === 200) {\r\n            setVerificationState(VerficationState.Verified);\r\n        } else {\r\n            const response = await request.json();\r\n            console.error(response);\r\n            setErrorMessage(response.reason);\r\n        }\r\n    }\r\n\r\n    function validateStoreIdField() {\r\n        if (!storeId || storeId.length < 12) {\r\n            setErrorMessage(\"Store ID is too short\");\r\n            return false;\r\n        }\r\n        setErrorMessage(\"\");\r\n        return true;\r\n    }\r\n\r\n    const hideStoreIdTeachingBubbleTimeout = {\r\n        tick: setTimeout(() => { }),\r\n        onTimeout: () => {\r\n            setStoreIdTeachingBubbleTarget(undefined);\r\n        },\r\n        init: () => {\r\n            hideStoreIdTeachingBubbleTimeout.clear();\r\n            hideStoreIdTeachingBubbleTimeout.cleared = false;\r\n            hideStoreIdTeachingBubbleTimeout.tick = setTimeout(hideStoreIdTeachingBubbleTimeout.onTimeout, 1000);\r\n        },\r\n        cleared: false,\r\n        clear: () => {\r\n            hideStoreIdTeachingBubbleTimeout.cleared = true;\r\n            clearTimeout(hideStoreIdTeachingBubbleTimeout.tick);\r\n        }\r\n    };\r\n\r\n    function showStoreIdTeachingButton(event: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n        hideStoreIdTeachingBubbleTimeout.clear();\r\n        setStoreIdTeachingBubbleTarget(event.nativeEvent);\r\n    }\r\n\r\n    function hideStoreIdTeachingButton(event: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n        hideStoreIdTeachingBubbleTimeout.init();\r\n    }\r\n\r\n    function onStoreIDTextFieldKeyPress(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n        if (event.key == \"Enter\") {\r\n            BeginVerification();\r\n        }\r\n    }\r\n\r\n    function onVerificationCodeTextFieldKeyPress(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n        if (event.key == \"Enter\") {\r\n            checkVerification();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stack>\r\n            {\r\n                (() => {\r\n                    switch (verificationState.valueOf()) {\r\n                        case VerficationState.PreInit:\r\n                            return <>\r\n                                {storeIdTeachingBubbleTarget !== undefined ?\r\n                                    <TeachingBubble calloutProps={{ directionalHintFixed: true, directionalHint: DirectionalHint.topAutoEdge }} target={storeIdTeachingBubbleTarget}>\r\n                                        <Stack onMouseLeave={hideStoreIdTeachingButton} onMouseOver={() => hideStoreIdTeachingBubbleTimeout.clear()} tokens={{ childrenGap: 10 }}>\r\n                                            <Text variant=\"mediumPlus\">This is the alphanumeric 12 character ID assigned to your app. It can be found in the URL for your app's store listing</Text>\r\n                                            <Text variant=\"small\"><DefaultButton target=\"_blank\" href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/view-app-identity-details#link-to-your-apps-listing\">More details</DefaultButton></Text>\r\n                                        </Stack>\r\n                                    </TeachingBubble>\r\n                                    : <></>}\r\n\r\n                                <Stack tokens={{ childrenGap: 13 }}>\r\n                                    <Text>Your project can be verified automatically, and will be immediately visible to the community</Text>\r\n                                    <Stack horizontal verticalAlign=\"end\" tokens={{ childrenGap: 10 }}>\r\n                                        <Text variant=\"mediumPlus\">Enter the Store ID for your app</Text>\r\n                                        <Text variant=\"small\" style={{ color: \"gray\" }} onMouseLeave={hideStoreIdTeachingButton} ><Link onClick={showStoreIdTeachingButton}>What's this?</Link></Text>\r\n                                    </Stack>\r\n                                    <Stack grow horizontal tokens={{ childrenGap: 5 }}>\r\n                                        <TextField onKeyPress={onStoreIDTextFieldKeyPress} styles={{ field: { width: 250 } }} placeholder=\"9p75w183m6qr\" onChange={(e: any, value: any) => setStoreId(value)} />\r\n                                        <PrimaryButton onClick={() => BeginVerification()} style={{ minWidth: 25 }} iconProps={{ iconName: \"Forward\" }} />\r\n                                    </Stack>\r\n                                </Stack>\r\n                            </>;\r\n                        case VerficationState.WaitingForCode:\r\n                            return <Stack tokens={{ childrenGap: 10 }}>\r\n                                <Stack grow horizontal tokens={{ childrenGap: 5 }} verticalAlign=\"end\">\r\n                                    <FontIcon iconName=\"InboxCheck\" style={{ fontSize: 24 }} />\r\n                                    <Text variant=\"xLarge\">Check your inbox / junk mail</Text>\r\n                                </Stack>\r\n                                <Text variant=\"mediumPlus\">Enter the code we sent you</Text>\r\n                                <Stack grow horizontal tokens={{ childrenGap: 5 }}>\r\n                                    <TextField onChange={(e: any, value: any) => setVerificationCodeText(value)} onKeyPress={onVerificationCodeTextFieldKeyPress} styles={{ field: { width: 250 } }} />\r\n                                    <PrimaryButton onClick={() => checkVerification()} style={{ minWidth: 25 }} iconProps={{ iconName: \"Forward\" }} />\r\n                                </Stack>\r\n                            </Stack>;\r\n                        case VerficationState.Verified:\r\n                            return <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 15, padding: 10 }}>\r\n                                <FontIcon style={{ fontSize: 38 }} iconName=\"ReminderPerson\" />\r\n                                <Text variant=\"xxLarge\">Identity verified!</Text>\r\n                                <div style={{ display: \"none\" }}>\r\n                                    {setTimeout(() => props.onSuccess({\r\n                                        ...props.projectData,\r\n                                        needsManualReview: false,\r\n                                        downloadLink: `http://microsoft.com/store/apps/${storeId}`\r\n                                    }), 1500)}\r\n                                </div>\r\n                            </Stack>\r\n                        default:\r\n                            return <></>\r\n                    }\r\n                })()\r\n            }\r\n            <Text style={{ color: \"red\" }}>{errorMessage}</Text>\r\n        </Stack >\r\n    );\r\n};\r\n\r\n","import { Text, Stack, Persona, PersonaSize, Icon, Link, Dialog, DialogType, Image, ImageFit, DefaultButton, PrimaryButton, FontIcon } from \"office-ui-fabric-react\";\r\nimport React from \"react\";\r\nimport { GetUserAvatar, GetCurrentDiscordUser, IDiscordUser, discordAuthEndpoint, GetUserRoles, AssignUserRole } from \"../common/services/discord\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { CreateProjectForm } from \"../components/forms/CreateProjectForm\";\r\nimport { GetProjectByDiscordId, IProject } from \"../common/services/projects\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\n\r\nconst DashboardHeader = styled.header`\r\nbackground: linear-gradient(to bottom,#005799 0,#0076d1);\r\nbox-shadow: 0 12px 45px -8px rgba(0,120,215,.35);\r\nwidth: 100vw;\r\nmargin: 0px;\r\npadding: 15px 0px;\r\n`;\r\n\r\nexport const Dashboard = () => {\r\n    const [welcomeMessage, setWelcomeMessage] = React.useState(\"Signing in...\");\r\n    const [userIcon, setUserIcon] = React.useState(\"\");\r\n\r\n    const [roles, setRoles] = React.useState<string[]>([]);\r\n\r\n    const [appRegistrationShown, setAppRegistrationShown] = React.useState(false);\r\n    const [devRegistrationShown, setDevRegistrationShown] = React.useState(false);\r\n\r\n    const [apps, setApps] = React.useState<IProject[]>();\r\n\r\n    React.useEffect(() => {\r\n        setupLoggedInUser();\r\n    }, []);\r\n\r\n    async function getUserApps(user: IDiscordUser) {\r\n        const projects = await GetProjectByDiscordId(user.id);\r\n        setApps(projects);\r\n    }\r\n\r\n    async function setupLoggedInUser() {\r\n        let user: IDiscordUser | undefined = await GetCurrentDiscordUser();\r\n        if (navigator.userAgent.includes(\"ReactSnap\")) return;\r\n        if (!user) {\r\n            window.location.href = discordAuthEndpoint;\r\n            return;\r\n        }\r\n        setWelcomeMessage(user.username);\r\n        setUserIcon(await GetUserAvatar(user) || \"\");\r\n\r\n        const roles = await GetUserRoles(user);\r\n        if (roles) setRoles(roles);\r\n\r\n        getUserApps(user);\r\n    }\r\n\r\n    async function onDevRegisterFormSuccess() {\r\n        setDevRegistrationShown(false);\r\n\r\n        AssignUserRole(\"Developer\");\r\n        setTimeout(() => {\r\n            setupLoggedInUser();\r\n        }, 1000);\r\n    }\r\n\r\n    async function onAppRegisterFormSuccess() {\r\n        setAppRegistrationShown(false);\r\n    }\r\n\r\n    const PersonaDark = styled(Persona)`\r\n    * {\r\n        :hover {\r\n            color: white;\r\n        }\r\n        color: #f7f7f7;\r\n        font-size: 22px;\r\n    }\r\n    `;\r\n\r\n    const SectionTitleIconFontSize = 34;\r\n\r\n    const DashboardColumnFiller = styled.div`\r\n    @media only screen and (max-width: 807px) {\r\n        display: none;\r\n    } \r\n    `;\r\n\r\n    return (\r\n        <Stack tokens={{ childrenGap: 25 }}>\r\n            <DashboardHeader>\r\n                <Stack horizontal wrap style={{ padding: \"15px 0px\", margin: 0 }} verticalAlign=\"center\" horizontalAlign=\"space-around\" tokens={{ childrenGap: 25 }}>\r\n                    <PersonaDark size={PersonaSize.extraLarge} text={welcomeMessage} imageUrl={userIcon} />\r\n\r\n                    <Stack horizontal wrap verticalAlign=\"end\" tokens={{ childrenGap: 10 }} style={{ marginLeft: 10 }}>\r\n\r\n                        {roles.includes(\"Developer\") ?\r\n                            <Link style={{ color: \"white\", width: \"150px\", textDecoration: \"none\" }} onClick={() => setAppRegistrationShown(true)}>\r\n                                <Stack verticalAlign=\"end\" horizontalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                                    <Icon style={{ fontSize: 35, userSelect: \"none\" }} iconName=\"AppIconDefaultAdd\"></Icon>\r\n                                    <Text variant=\"mediumPlus\">Register an app</Text>\r\n                                </Stack>\r\n                            </Link>\r\n                            :\r\n                            <Link style={{ color: \"white\", width: \"150px\", textDecoration: \"none\" }} onClick={() => setDevRegistrationShown(true)}>\r\n                                <Stack verticalAlign=\"end\" horizontalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                                    <Icon style={{ fontSize: 35, userSelect: \"none\" }} iconName=\"code\"></Icon>\r\n                                    <Text variant=\"mediumPlus\">Become a Developer</Text>\r\n                                </Stack>\r\n                            </Link>\r\n                        }\r\n                        <Link style={{ color: \"gray\", width: \"150px\", textDecoration: \"none\" }} to=\"/dashboard/registerapp\">\r\n                            <Stack verticalAlign=\"end\" horizontalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                                <Icon style={{ fontSize: 35, color: \"gray\", userSelect: \"none\" }} iconName=\"Robot\"></Icon>\r\n                                <Text style={{ color: \"gray\" }} variant=\"mediumPlus\">Manage your roles</Text>\r\n                            </Stack>\r\n                        </Link>\r\n\r\n                    </Stack>\r\n\r\n                    <DashboardColumnFiller style={{ width: 200 }} />\r\n                </Stack>\r\n            </DashboardHeader>\r\n\r\n            <Stack horizontalAlign=\"center\" wrap horizontal tokens={{ childrenGap: 20 }}>\r\n                {/* Todo: Hide this area if the user doesn't have Dev role, or no apps are registered */}\r\n                {\r\n                    roles.includes(\"Developer\") ?\r\n                        <Stack style={{ margin: 50 }} horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n                            <Stack horizontal tokens={{ childrenGap: 15 }}>\r\n                                <Icon iconName=\"AppIconDefaultList\" style={{ fontSize: SectionTitleIconFontSize }} />\r\n                                <Text variant=\"xLarge\" style={{ fontWeight: 600 }}>My apps</Text>\r\n                            </Stack>\r\n\r\n                            <Stack horizontal wrap tokens={{ childrenGap: 15 }}>\r\n                                {\r\n                                    (apps && apps.length > 0 ? apps.map(project =>\r\n                                        <ProjectCard /* onEditButtonClicked={() => {\r\n                                    \r\n                                }} */ project={project}></ProjectCard>\r\n                                    ) : <Text variant=\"large\">You don't have any registered apps</Text>)\r\n                                }\r\n                            </Stack>\r\n                        </Stack>\r\n                        :\r\n                        <Stack horizontalAlign=\"center\">\r\n                            <Icon iconName=\"BuildDefinition\" style={{ fontSize: 55 }} />\r\n                            <Text variant=\"xLarge\" style={{ fontWeight: 600 }}>Under construction</Text>\r\n                            <Text variant=\"large\">For now, this area is primarily for developers. Check back later for more</Text>\r\n                        </Stack>}\r\n\r\n                <Dialog hidden={!appRegistrationShown} dialogContentProps={{\r\n                    type: DialogType.largeHeader,\r\n                    title: 'Register an app',\r\n                }}>\r\n                    <CreateProjectForm projectData={{}} onSuccess={onAppRegisterFormSuccess} onCancel={() => setAppRegistrationShown(false)} />\r\n                </Dialog>\r\n\r\n                <Dialog hidden={!devRegistrationShown} dialogContentProps={{\r\n                    type: DialogType.largeHeader, title: \"Become a developer\"\r\n                }}>\r\n                    <Stack tokens={{ childrenGap: 10 }} horizontalAlign=\"center\">\r\n                        <FontIcon iconName=\"GiftboxOpen\" style={{ fontSize: 56 }} />\r\n                        <Text variant=\"xLarge\">Let's build something, together</Text>\r\n                        <Text variant=\"medium\">Everyone, from seasoned veterans to enthusiastic novices can become a developer with just a click</Text>\r\n                        <Text variant=\"medium\">You'll be given the Developer role in the UWP Community Discord server, and become eligible for app services exclusive to devs</Text>\r\n                        <Stack horizontal horizontalAlign=\"space-evenly\" tokens={{ childrenGap: 10 }}>\r\n                            <DefaultButton onClick={() => setDevRegistrationShown(false)}>Cancel</DefaultButton>\r\n                            <PrimaryButton onClick={onDevRegisterFormSuccess}>Register</PrimaryButton>\r\n                        </Stack>\r\n                    </Stack>\r\n                </Dialog>\r\n            </Stack>\r\n\r\n        </Stack >\r\n    )\r\n};","import * as React from \"react\";\r\nimport { Text, Stack } from \"office-ui-fabric-react\";\r\n\r\nexport const NotFound: React.StatelessComponent = () => {\r\n  return (\r\n    <Stack horizontal horizontalAlign=\"center\">\r\n      <Text variant=\"large\" style={{ padding: 10 }}>\r\n        404 Not Found\r\n      </Text>\r\n    </Stack>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { Stack, Text, Link } from 'office-ui-fabric-react';\r\nimport memoize from 'promise-memoize'\r\n\r\nconst renderers = {\r\n  heading: (props: { level: 1 | 2 | 3; children: any }) => {\r\n    const { level, children } = props\r\n\r\n    const size = {\r\n      1: 'mega',\r\n      2: 'xxLarge',\r\n      3: 'xLarge'\r\n    }\r\n\r\n    const variant: any = size[level]\r\n    const headerType: any = `h${level}`\r\n\r\n    return <Text as={headerType} variant={variant}>{children[0].props.value}</Text>\r\n  },\r\n  text: Text,\r\n  link: Link\r\n}\r\n\r\nconst getMarkdown = memoize(async (url: string) => {\r\n  const req = await fetch(url)\r\n  const markdown = await req.text()\r\n\r\n  return markdown\r\n})\r\n\r\nexport const createMarkdownPage = async (filename: string) => {\r\n  const markdown = await getMarkdown(filename)\r\n  return {\r\n    default: () => (\r\n      <Stack\r\n        verticalFill\r\n        styles={{\r\n          root: {\r\n            maxWidth: 960,\r\n            height: 'auto'\r\n          }\r\n        }}>\r\n        <ReactMarkdown renderers={renderers} source={markdown} />\r\n      </Stack>\r\n    )\r\n  }\r\n}","import * as React from \"react\";\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\n\r\nimport { Projects } from './views/Projects';\r\nimport { Home } from './views/Home';\r\nimport { AppHeader } from \"./components/AppHeader\";\r\nimport { Launch } from \"./views/Launch\";\r\nimport { Signin } from \"./views/signin\";\r\nimport { Dashboard } from \"./views/dashboard\";\r\n\r\nimport { Stack } from \"office-ui-fabric-react\";\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab, faDiscord, faMedium, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { fas, faGlobe, faArrowCircleDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { NotFound } from \"./views/NotFound\";\r\n\r\nimport { createMarkdownPage } from './components/markdown-loader'\r\nimport { prerenderedLoader } from './components/prerender-loader'\r\n\r\nlibrary.add(fab, faDiscord, faMedium, faGithub);\r\nlibrary.add(fab, fas, faGlobe, faArrowCircleDown, faDiscord, faMedium, faGithub);\r\n\r\nconst AppHeaderWithRouter = withRouter(props => <AppHeader {...props} />);\r\nconst PrivacyPolicy = prerenderedLoader(() => createMarkdownPage('/privacy-policy.md'));\r\n\r\nexport const App: React.StatelessComponent = () => {\r\n\r\n  return (\r\n    <BrowserRouter basename=\"/\">\r\n      <Stack horizontalAlign=\"center\">\r\n        <AppHeaderWithRouter />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/projects\" component={Projects} />\r\n          <Route exact path=\"/launch\" component={Launch} />\r\n          <Route exact path=\"/signin\" component={Signin} />\r\n          <Route exact path=\"/dashboard\" component={Dashboard} />\r\n          <Route exact path=\"/privacy-policy\" component={PrivacyPolicy} />\r\n          <Route component={NotFound} />}\r\n        </Switch>\r\n      </Stack>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nimport loadable from \"@loadable/component\";\r\nimport { PrerenderedComponent } from \"react-prerendered-component\";\r\n\r\nexport const prerenderedLoader = (dynamicImport: any) => {\r\n  const LoadableComponent = loadable(dynamicImport);\r\n  return React.memo(props => (\r\n    <PrerenderedComponent live={LoadableComponent.load()}>\r\n      <LoadableComponent {...props} />\r\n    </PrerenderedComponent>\r\n  ));\r\n};","import React from \"react\";\r\nimport { hydrate, render } from \"react-dom\";\r\nimport { initializeIcons } from \"@uifabric/icons\";\r\nimport {App} from './App';\r\n\r\n// Initializes the UI Fabric icons that we can use\r\n// Choose one from this list: https://developer.microsoft.com/en-us/fabric#/styles/icons\r\ninitializeIcons();\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nif (rootElement && rootElement.hasChildNodes()) {\r\n  hydrate(<App />, rootElement);\r\n} else {\r\n  render(<App />, rootElement);\r\n}"],"sourceRoot":""}