{"version":3,"sources":["common/const.ts","common/services/discord.ts","common/helpers.ts","common/services/projects.ts","components/forms/EditProjectDetailsForm.tsx","components/ProjectCard.tsx","views/Projects.tsx","components/HoverBox.tsx","views/Home.tsx","components/NavMenu.tsx","common/services/users.ts","components/forms/RegisterUser.tsx","components/AppHeader.tsx","views/Launch.tsx","views/signin.tsx","components/forms/CreateProjectForm.tsx","views/dashboard.tsx","views/NotFound.tsx","components/markdown-loader.tsx","App.tsx","components/prerender-loader.tsx","index.tsx"],"names":["Links","Images","getBackendHost","isLocalhost","CurrentUser","discordAuthEndpoint","AuthData","Get","authData","localStorage","getItem","JSON","parse","Set","SetDiscordAuthData","Clear","removeItem","data","setItem","stringify","RefreshTokenIfNeeded","a","UnixTime","Math","round","Date","getTime","auth","expires_at","fetch","refresh_token","json","refreshData","expires_in","IsUserInServer","Auth","Error","headers","access_token","Req","status","Response","filter","server","id","length","GetCurrentDiscordUser","GetUserRoles","user","fetchBackend","request","result","map","role","name","AssignUserRole","roleName","GetUserAvatar","avatar","window","location","host","includes","navigator","userAgent","isReactSnap","route","method","requestBody","push","url","body","match","toMatch","regex","m","exec","undefined","ObjectToPathQuery","queryString","Object","entries","key","value","charAt","slice","CreateProject","projectData","downloadLink","storeId","ModifyProject","queryData","DeleteProject","bodyData","GetProjectsByDiscordId","discordId","GetAllProjects","GetLaunchProjects","year","project","launchYear","awaitingLaunchApproval","useProjects","cache","initialState","isLoading","projects","useState","res","setRes","prevState","error","ButtonType","categoryOptions","category","index","text","EditProjectDetailsForm","props","React","isPrivate","projectRequest","setProjectRequest","submissionError","setSubmissionError","showSuccessIndicator","setShowSuccessIndicator","editing","appName","reason","setTimeout","onSuccess","Stack","horizontalAlign","style","display","height","src","alt","tokens","childrenGap","maxWidth","width","Pivot","PivotItem","headerText","TextField","label","maxLength","styles","root","required","onChange","e","multiline","autoAdjustHeight","description","placeholder","type","heroImage","disabled","githubLink","externalLink","ComboBox","options","defaultSelectedKey","option","Checkbox","checked","Text","color","horizontal","marginTop","onCancel","DefaultButton","onClick","PrimaryButton","FaIconStyle","ProjectCard","projectCardActions","setProjectCardActions","showEditDialog","setShowEditDialog","showDeleteProjectDialog","setShowDeleteProjectDialog","ViewModel","setProjectViewModel","onRenderIcon","buttonProps","buttonData","link","valueOf","Download","icon","External","Github","projectCardsData","href","DocumentCard","Dialog","hidden","title","dialogContentProps","padding","margin","DialogType","largeHeader","onDismiss","updatedProject","fontSize","subText","backgroundColor","borderColor","DocumentCardImage","imageFit","ImageFit","centerCover","imageSrc","DocumentCardDetails","DocumentCardTitle","overflowY","verticalAlign","editable","iconProps","iconName","minWidth","DocumentCardActions","actions","Projects","state","getProjects","wrap","Spinner","FontIcon","variant","i","ProgressIndicator","styled","div","Depths","depth8","depth16","LinkCard","section","Link","Img","img","LargeCard","Home","fontFamily","fontWeight","Image","className","coverStyle","ImageCoverStyle","landscape","cover","HoverBox","target","navLinkActiveStyle","borderBottom","MyNavLink","NavLink","NavText","NavMenu","to","exact","activeStyle","Component","CreateUser","userData","ModifyUser","GetUser","RegisterUserForm","userRequest","setUserRequest","modifying","defaultValue","email","paddingLeft","AppHeader","render","history","marginBottom","Helmet","path","getHeadTitle","pathname","PrivacyPolicyText","SignInButton","loggedIn","setLoggedIn","discordUser","setDiscordUser","setUser","userAvatar","setUserAvatar","joinServerAlertHidden","setJoinServerAlertHidden","registerUserShown","setRegisterUserShown","editProfileShown","setEditProfileShown","avatarUrl","setupLoggedInUser","LoggedInButtonDropdownItems","onItemClick","ev","item","LogOut","useTargetWidth","items","reload","normal","modalProps","isBlocking","main","DialogFooter","TooltipHost","content","username","delay","TooltipDelay","long","border","menuProps","Persona","size","PersonaSize","size40","imageUrl","calloutProps","gapSpace","closeDelay","Launch","useEffect","boxShadow","Signin","authResponse","URL","searchParams","get","atob","showRedirectLink","setShowRedirectLink","timer","clearTimeout","Label","ariaLive","visibility","CreateProjectForm","verified","setVerified","codeVerificationDisplayed","setCodeVerificationDisplayed","manualReviewMessageShown","setManualReviewMessageShown","setProjectData","projectDetails","ProjectCodeVerifier","VerficationState","storeIdTeachingBubbleTarget","setStoreIdTeachingBubbleTarget","setStoreId","verificationCodeText","setVerificationCodeText","PreInit","verificationState","setVerificationState","errorMessage","setErrorMessage","BeginVerification","validateStoreIdField","WaitingForCode","response","console","checkVerification","Verified","hideStoreIdTeachingBubbleTimeout","tick","onTimeout","init","clear","cleared","showStoreIdTeachingButton","event","nativeEvent","hideStoreIdTeachingButton","onStoreIDTextFieldKeyPress","onVerificationCodeTextFieldKeyPress","TeachingBubble","directionalHintFixed","directionalHint","DirectionalHint","topAutoEdge","onMouseLeave","onMouseOver","grow","onKeyPress","field","needsManualReview","DashboardHeader","header","Dashboard","welcomeMessage","setWelcomeMessage","userIcon","setUserIcon","roles","setRoles","appRegistrationShown","setAppRegistrationShown","devRegistrationShown","setDevRegistrationShown","apps","setApps","getUserApps","PersonaDark","DashboardColumnFiller","extraLarge","marginLeft","textDecoration","Icon","userSelect","NotFound","renderers","heading","level","children","1","2","3","headerType","as","getMarkdown","memoize","req","markdown","createMarkdownPage","filename","default","verticalFill","source","library","add","fab","faDiscord","faMedium","faGithub","fas","faGlobe","faArrowCircleDown","AppHeaderWithRouter","withRouter","PrivacyPolicy","dynamicImport","LoadableComponent","loadable","memo","PrerenderedComponent","live","load","prerenderedLoader","App","basename","component","initializeIcons","rootElement","document","getElementById","hasChildNodes","hydrate"],"mappings":"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","file":"static/js/main.20c43bda.chunk.js","sourcesContent":["import { isLocalhost } from \"./helpers\";\r\n\r\nexport const Links = {\r\n  thisSiteRepo: \"https://github.com/UWPCommunity/uwpcommunity.github.io/\",\r\n  launch2019Medium: \"https://medium.com/@Arlodottxt/launch-2019-7efd37cc0877\",\r\n  discordServerInvite: \"https://discord.gg/eBHZSKG\",\r\n  githubOrganization: \"https://github.com/UWPCommunity/\"\r\n};\r\n\r\nexport const Images = {\r\n  discordChatExample: \"/assets/img/discordchatexample.png\",\r\n  githubOrgScreenshot: \"/assets/img/githuborgscreenshot.png\",\r\n  launchHeroImage: \"/assets/img/LaunchHero.png\",\r\n  launchHeroImageHD: \"/assets/img/LaunchHeroHD.png\",\r\n  launchAppsHero: \"/assets/img/LaunchAppsHero.png\",\r\n\r\n  uwpCommunityLogo: \"/assets/img/uwpCommunityLogo.png\",\r\n  Badges: {\r\n    msstore: \"/assets/img/msstoreBadge.svg\",\r\n    github: \"/assets/img/githubBadge.svg\",\r\n    discord: \"/assets/img/discordBadge.svg\"\r\n  }\r\n};\r\n\r\nexport const MicrosoftStoreAppCategories = [\r\n  \"Books & reference\",\r\n  \"Business\",\r\n  \"Developer tools\",\r\n  \"Education\",\r\n  \"Entertainment\",\r\n  \"Food & dining\",\r\n  \"Government & politics\",\r\n  \"Kids & family\",\r\n  \"Lifestyle\",\r\n  \"Medical\",\r\n  \"Multimedia design\",\r\n  \"Music\",\r\n  \"Navigation & maps\",\r\n  \"News & weather\",\r\n  \"Personal finance\",\r\n  \"Personalization\",\r\n  \"Photo & video\",\r\n  \"Productivity\",\r\n  \"Security\",\r\n  \"Shopping\",\r\n  \"Social\",\r\n  \"Sports\",\r\n  \"Travel\",\r\n  \"Utilities & tools\"\r\n];\r\n\r\nexport function getBackendHost(): string {\r\n  return isLocalhost ? \"localhost:5000\" : \"uwpcommunity-site-backend.herokuapp.com\"\r\n}","import { getBackendHost } from \"../const\";\r\nimport { isLocalhost, fetchBackend } from \"../helpers\";\r\n\r\nexport const uwpCommunityGuildId = 372137812037730304;\r\nexport const developerRoleId = 372142246625017871;\r\n\r\nexport const discordAuthEndpoint = (\r\n    isLocalhost ?\r\n        `https://discordapp.com/api/oauth2/authorize?client_id=611491369470525463&redirect_uri=http%3A%2F%2Flocalhost%3A5000%2Fsignin%2Fredirect&response_type=code&scope=identify%20guilds`\r\n        :\r\n        `https://discordapp.com/api/oauth2/authorize?client_id=611491369470525463&redirect_uri=http%3A%2F%2Fuwpcommunity-site-backend.herokuapp.com%2Fsignin%2Fredirect&response_type=code&scope=identify%20guilds`\r\n);\r\n\r\nexport const AuthData = {\r\n    Get: GetDiscordAuthData,\r\n    Set: SetDiscordAuthData,\r\n    Clear: ClearDiscordAuthData\r\n};\r\n\r\nexport function GetDiscordAuthData(): IDiscordAuthResponse | undefined {\r\n    const authData = localStorage.getItem(\"discordAuthData\");\r\n    if (!authData) return;\r\n    return JSON.parse(authData);\r\n}\r\n\r\nexport function SetDiscordAuthData(data: IDiscordAuthResponse) {\r\n    if (!data) return;\r\n    localStorage.setItem(\"discordAuthData\", JSON.stringify(data));\r\n}\r\n\r\nexport function ClearDiscordAuthData() {\r\n    localStorage.removeItem(\"discordAuthData\");\r\n}\r\n\r\nexport async function RefreshTokenIfNeeded() {\r\n    const UnixTime: number = Math.round((new Date()).getTime() / 1000);\r\n    let auth = AuthData.Get();\r\n\r\n    if (!auth) return;\r\n\r\n    if (auth.expires_at && auth.expires_at < UnixTime) {\r\n        let refreshData: IDiscordAuthResponse = await (await fetch(`https://${getBackendHost()}/signin/refresh?refreshToken=${auth.refresh_token}`)).json();\r\n\r\n        if (refreshData.expires_in) refreshData.expires_at = UnixTime + refreshData.expires_in;\r\n\r\n        SetDiscordAuthData(refreshData);\r\n    }\r\n}\r\n\r\nexport async function IsUserInServer(): Promise<boolean> {\r\n    await RefreshTokenIfNeeded();\r\n\r\n    const Auth = AuthData.Get();\r\n    if (!Auth) throw new Error(\"No auth data found\");\r\n\r\n    const Req = await fetch(\"https://discordapp.com/api/v6/users/@me/guilds\", {\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + Auth.access_token\r\n        }\r\n    });\r\n    if (Req.status !== 200) return true; // If something goes wrong, give the benefit of the doubt\r\n\r\n    const Response: IDiscordGuild[] = await Req.json();\r\n\r\n    return Response.filter(server => server.id === \"372137812037730304\").length > 0;\r\n}\r\n\r\nexport let CurrentUser: IDiscordUser;\r\nexport async function GetCurrentDiscordUser(): Promise<IDiscordUser | undefined> {\r\n    if (CurrentUser) return CurrentUser;\r\n\r\n    const Auth = AuthData.Get();\r\n    if (!Auth) return;\r\n\r\n    const Req = await fetch(\"https://discordapp.com/api/v6/users/@me\", {\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + Auth.access_token\r\n        }\r\n    });\r\n    if (!Req || Req.status !== 200) return;\r\n    CurrentUser = await Req.json();\r\n    return CurrentUser;\r\n}\r\n\r\nexport async function GetUserRoles(user: IDiscordUser): Promise<string[] | undefined> {\r\n    user = user || await GetCurrentDiscordUser();\r\n\r\n    const request = await fetchBackend(\"bot/user/roles\", \"GET\");\r\n\r\n    if (request && request.status === 200) {\r\n        const result: IDiscordRoleData[] = await request.json();\r\n\r\n        return result.map(role => role.name);\r\n    }\r\n}\r\n\r\nexport async function AssignUserRole(roleName: string, user?: IDiscordUser) {\r\n    return await fetchBackend(\"bot/user/roles\", \"PUT\", { role: roleName });\r\n}\r\n\r\nexport async function GetUserAvatar(user?: IDiscordUser): Promise<string | undefined> {\r\n    user = user || await GetCurrentDiscordUser();\r\n    if (!user) return;\r\n    return `https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png`;\r\n}\r\n\r\nexport interface IDiscordUser {\r\n    \"username\": string;\r\n    \"locale\"?: string;\r\n    \"premium_type\"?: number;\r\n    \"mfa_enabled\": boolean;\r\n    \"flags\"?: number;\r\n    \"avatar\": string;\r\n    \"discriminator\": string;\r\n    \"id\": string;\r\n}\r\n\r\nexport interface IDiscordRoleData {\r\n    deleted: boolean;\r\n    id: string;\r\n    name: string;\r\n    color: number;\r\n    hoist: boolean;\r\n    position: number;\r\n    permissions: number;\r\n    managed: boolean;\r\n    mentionable: boolean;\r\n}\r\n\r\nexport interface IDiscordGuildMember {\r\n    /** @summary the user this guild member represents */\r\n    user: IDiscordUser;\r\n    /** @summary this users guild nickname (if one is set) */\r\n    nick?: string;\r\n    /** @summary array of role object ids @type Snowflake[] */\r\n    roles: string[];\r\n    /** @summary when the user joined the guild */\r\n    joined_at: string;\r\n    /** @summary when the user used their Nitro boost on the server */\r\n    premium_since?: string;\r\n    /** @summary whether the user is deafened in voice channels */\r\n    deaf: boolean;\r\n    /** @summary whether the user is muted in voice channels */\r\n    mute: boolean;\r\n};\r\n\r\nexport interface IDiscordGuild {\r\n    \"owner\": boolean,\r\n    \"permissions\": number,\r\n    \"icon\": string,\r\n    \"id\": string,\r\n    \"name\": string;\r\n}\r\n\r\nexport interface IDiscordAuthResponse {\r\n    \"access_token\": string;\r\n    \"token_type\": \"Bearer\";\r\n    \"expires_in\": number;\r\n    \"expires_at\"?: number;\r\n    \"refresh_token\": string;\r\n    \"scope\": string;\r\n}","import { AuthData } from \"./services/discord\";\r\nimport { getBackendHost } from \"./const\";\r\n\r\nexport const getStoreUrl = (id: string) => {\r\n    return `https://www.microsoft.com/store/apps/${id}`;\r\n}\r\n\r\nexport const getGithubUrl = (id: string) => {\r\n    return `https://www.github.com/${id}`;\r\n}\r\n\r\nexport const getDiscordUrl = (id: string) => {\r\n    return `https://www.discord.gg/${id}`;\r\n}\r\n\r\nexport const getHeadTitle = (path: string) => {\r\n    let title = \"UWP Community\"\r\n    switch (path) {\r\n        case \"/\":\r\n            title = title + \" // Home\"\r\n            break;\r\n        case \"/projects\":\r\n            title = title + \" // Projects\"\r\n            break;\r\n        case \"/launch\":\r\n            title = title + \" // Launch\"\r\n            break;\r\n        case \"/dashboard\":\r\n            title = title + \" // Dashboard\"\r\n            break;\r\n        case \"/signin\":\r\n            title = title + \" // Sign in\"\r\n            break;\r\n        default:\r\n            title = title + \" // 404\"\r\n            break;\r\n    }\r\n    return title\r\n}\r\nexport const isLocalhost = window.location.host.includes(\"localhost\") || navigator.userAgent.includes(\"ReactSnap\");\r\n\r\nexport const isReactSnap = navigator.userAgent.includes(\"ReactSnap\");\r\n\r\nexport async function fetchBackend(route: string, method: (\"GET\" | \"POST\" | \"PUT\" | \"DELETE\"), requestBody?: any): Promise<Response> {\r\n    let headers: string[][] = [[\"Content-Type\", \"application/json\"]];\r\n\r\n    let authData = await AuthData.Get();\r\n    if (authData) headers.push([\"authorization\", authData.access_token])\r\n\r\n    let protocol = isLocalhost ? \"http\" : \"https\";\r\n    let url = `${protocol}://${getBackendHost()}/${route}`;\r\n\r\n    return await fetch(url, {\r\n        headers: headers,\r\n        method: method,\r\n        body: JSON.stringify(requestBody)\r\n    });\r\n}\r\n/**\r\n * @summary Get the first matching regex group, instead of an array with the full string and all matches\r\n * @param {string} toMatch  \r\n * @param {regex} regex \r\n * @returns {string} First matching regex group\r\n */\r\nexport function match(toMatch: string, regex: RegExp) {\r\n    let m = regex.exec(toMatch);\r\n    return (m && m[1]) ? m[1] : undefined;\r\n}\r\nexport function ObjectToPathQuery(data: object) {\r\n    let queryString: string = \"\";\r\n    for (let [key, value] of Object.entries(data)) {\r\n        queryString += `${key}=${value}&`;\r\n    }\r\n    // If the last character is an \"&\", remove it\r\n    if (queryString.charAt(queryString.length - 1) === \"&\") queryString = queryString.slice(0, -1);\r\n    return queryString;\r\n}\r\nexport default {\r\n    getDiscordUrl, getGithubUrl, getStoreUrl\r\n}","import { IUser } from \"./users\";\r\nimport { fetchBackend, ObjectToPathQuery, match, isReactSnap } from \"../helpers\";\r\nimport { useState } from \"react\";\r\n\r\nexport async function CreateProject(projectData: ICreateProjectsRequestBody): Promise<Response> {\r\n    // Reformat microsoft store links to an international format\r\n    if (projectData.downloadLink) {\r\n        const storeId = match(projectData.downloadLink, /http.*microsoft\\..*([\\w\\d]{12})[\\/|?]?/);\r\n        if (storeId) {\r\n            projectData.downloadLink = `https://www.microsoft.com/store/apps/${storeId}`;\r\n        }\r\n    }\r\n    return await fetchBackend(\"projects\", \"POST\", projectData);\r\n}\r\nexport interface ICreateProjectsRequestBody {\r\n    role: \"Developer\" | \"Other\"; // Only a developer or \"Other\" (manager, etc) can create a new project\r\n    appName: string;\r\n    category: string;\r\n    description: string;\r\n    isPrivate: boolean;\r\n    downloadLink?: string;\r\n    githubLink?: string;\r\n    externalLink?: string;\r\n    launchYear: number;\r\n    awaitingLaunchApproval: boolean;\r\n    needsManualReview: boolean;\r\n    heroImage: string;\r\n    lookingForRoles: string[];\r\n}\r\n\r\n\r\nexport async function ModifyProject(projectData: IModifyProjectsRequestBody, queryData: IModifyProjectRequestQuery) {\r\n    // Reformat microsoft store links to an international format\r\n    if (projectData.downloadLink) {\r\n        const storeId = match(projectData.downloadLink, /http.*microsoft\\..*([\\w\\d]{12})[\\/|?]?/);\r\n        if (storeId) {\r\n            projectData.downloadLink = `https://www.microsoft.com/store/apps/${storeId}`;\r\n        }\r\n    }\r\n\r\n    return await fetchBackend(`projects?${ObjectToPathQuery(queryData)}`, \"PUT\", projectData);\r\n}\r\n\r\nexport async function DeleteProject(bodyData: IDeleteProjectRequestBody) {\r\n    return await fetchBackend(`projects`, \"DELETE\", bodyData);\r\n}\r\n\r\nexport async function GetProjectsByDiscordId(discordId: string): Promise<IProject[]> {\r\n    return (await fetchBackend(`projects?discordId=${discordId}`, \"GET\")).json();\r\n}\r\n\r\nexport async function GetAllProjects(): Promise<IProject[]> {\r\n    return (await fetchBackend(`projects`, \"GET\")).json();\r\n}\r\n\r\nexport async function GetLaunchProjects(year: number): Promise<IProject[]> {\r\n    return (await (await fetchBackend(`projects`, \"GET\")).json()).filter((project: IProject) => project.launchYear == year && project.awaitingLaunchApproval == false);\r\n}\r\n\r\nexport interface IProjectsState {\r\n    projects?: IProject[]\r\n    error?: Error\r\n    isLoading: boolean\r\n}\r\n\r\nexport function useProjects(year?: number): [IProjectsState, () => Promise<void>] {\r\n    const cacheKey = 'loadedProjects' + (year || '')\r\n    const cache: IProject[] = (window as any)[cacheKey]\r\n    const initialState: IProjectsState = { isLoading: false }\r\n\r\n    if (!isReactSnap && cache && cache.length) {\r\n        initialState.projects = cache\r\n    }\r\n\r\n    const [res, setRes] = useState<IProjectsState>(initialState)\r\n\r\n    const getProjects = async () => {\r\n        setRes(prevState => ({ ...prevState, isLoading: true }))\r\n\r\n        let projects: IProject[]\r\n        try {\r\n            if (!year) {\r\n                projects = await GetAllProjects()\r\n            } else {\r\n                projects = await GetLaunchProjects(year)\r\n            }\r\n            setRes(prevState => ({ ...prevState, isLoading: false, projects }))\r\n\r\n            /* if (isReactSnap) {\r\n                var script = document.createElement(\"script\");\r\n                script.type = \"text/javascript\";\r\n                script.innerHTML = `window['${cacheKey}'] = ${JSON.stringify(projects)}`;\r\n                document.getElementsByTagName('head')[0].appendChild(script);\r\n            } */\r\n        } catch (error) {\r\n            setRes(prevState => ({ ...prevState, isLoading: false, error }))\r\n        }\r\n    }\r\n\r\n    return [res, getProjects]\r\n}\r\n\r\nexport interface IModifyProjectsRequestBody {\r\n    appName: string;\r\n    description?: string;\r\n    isPrivate: boolean;\r\n    category?: string;\r\n\r\n    downloadLink?: string;\r\n    githubLink?: string;\r\n    externalLink?: string;\r\n\r\n    collaborators?: IUser[];\r\n\r\n    launchYear?: number;\r\n    awaitingLaunchApproval: boolean;\r\n}\r\n\r\nexport interface IModifyProjectRequestQuery {\r\n    /** @summary The app name that's being modified */\r\n    appName: string;\r\n}\r\n\r\nexport interface IDeleteProjectRequestBody {\r\n    /** @summary The app name that's being deleted */\r\n    appName: string;\r\n}\r\n\r\nexport interface IProjectCollaborator extends IUser {\r\n    role: \"Developer\" | \"Translator\" | \"Beta Tester\" | \"Other\";\r\n}\r\nexport interface IProject {\r\n    id?: number;\r\n\r\n    appName: string;\r\n    description: string;\r\n    isPrivate: boolean;\r\n    downloadLink?: string;\r\n    githubLink?: string;\r\n    externalLink?: string;\r\n\r\n    heroImage: string;\r\n\r\n    awaitingLaunchApproval: boolean;\r\n    needsManualReview: boolean;\r\n    lookingForRoles?: string[];\r\n\r\n    collaborators: IProjectCollaborator[];\r\n\r\n    launchYear?: number;\r\n    category?: string;\r\n};\r\n","import { Text, Stack, PrimaryButton, Checkbox, TextField, DefaultButton, IComboBoxOption, ComboBox, MaskedTextField, Pivot, PivotItem, IComboBox } from \"office-ui-fabric-react\";\r\nimport React, { FormEvent } from \"react\";\r\nimport { IBackendReponseError } from \"../../common/interfaces\";\r\nimport { CreateProject, ICreateProjectsRequestBody, IProject, ModifyProject, IModifyProjectsRequestBody, GetProjectsByDiscordId } from \"../../common/services/projects\";\r\nimport { MicrosoftStoreAppCategories } from \"../../common/const\";\r\n\r\nexport interface IEditProjectDetailsFormProps {\r\n    onCancel?: Function;\r\n    onSuccess: (updatedProject?: IProject) => void;\r\n    projectData: Partial<IProject>;\r\n    editing?: boolean;\r\n};\r\n\r\nconst roleOptions: IComboBoxOption[] = [\r\n    { key: 1, text: 'Developer', selected: true },\r\n    { key: 2, text: 'Beta tester' },\r\n    { key: 3, text: 'Translator' },\r\n    { key: 4, text: 'Other' }\r\n];\r\n\r\nconst categoryOptions: IComboBoxOption[] = MicrosoftStoreAppCategories.map((category, index) => {\r\n    return { key: category, text: category }\r\n});\r\n\r\nexport const EditProjectDetailsForm = (props: IEditProjectDetailsFormProps) => {\r\n    let [projectRequest, setProjectRequest] = React.useState<Partial<ICreateProjectsRequestBody>>({\r\n        isPrivate: false, awaitingLaunchApproval: false, role: \"Developer\", ...props.projectData\r\n    });\r\n\r\n    let [submissionError, setSubmissionError] = React.useState<string>(\"\");\r\n    let [showSuccessIndicator, setShowSuccessIndicator] = React.useState(false);\r\n\r\n    async function submitParticipantRequest() {\r\n        let request;\r\n        if (props.editing) {\r\n            if (!props.projectData.appName) {\r\n                throw new Error(\"Unable to modify project details. Missing app name prop\");\r\n            }\r\n            request = await ModifyProject(projectRequest as IModifyProjectsRequestBody, { appName: props.projectData.appName });\r\n        } else {\r\n            request = await CreateProject(projectRequest as ICreateProjectsRequestBody);\r\n        }\r\n\r\n        let success = request.status === 200;\r\n\r\n        if (!success) {\r\n            let error: IBackendReponseError = await request.json();\r\n            if (error.error && error.reason) {\r\n                setSubmissionError(error.reason);\r\n            }\r\n        } else {\r\n            setShowSuccessIndicator(true);\r\n            setTimeout(() => {\r\n                // TODO. Make a new request to get new project details, the below only is only a temporary solution\r\n                props.onSuccess(projectRequest as IProject);\r\n            }, 2500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stack horizontalAlign=\"center\">\r\n            {/* Need to toggle both src and display so it trigger the animation, and space is taken up during the transition (while the svg loads) */}\r\n            <img style={{ display: (showSuccessIndicator ? \"block\" : \"none\"), height: \"200px\" }} src={showSuccessIndicator ? \"/assets/img/checkanimated.svg\" : \"\"} alt=\"Check\" />\r\n            <Stack horizontalAlign=\"start\" tokens={{ childrenGap: 10 }} style={{ maxWidth: \"100%\", width: \"300px\", display: (!showSuccessIndicator ? \"block\" : \"none\") }}>\r\n                <Pivot>\r\n                    <PivotItem headerText=\"Basic info\">\r\n                        <Stack tokens={{ childrenGap: 10 }}>\r\n                            <TextField label=\"Project name:\" maxLength={50}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                value={projectRequest.appName}\r\n                                required onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, appName: value })} />\r\n\r\n                            <TextField label=\"Description\" maxLength={140}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                multiline required autoAdjustHeight\r\n                                value={projectRequest.description}\r\n                                placeholder=\"Enter a brief description\"\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, description: value })} />\r\n\r\n                            <TextField label=\"Hero image\"\r\n                                type=\"url\"\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                required\r\n                                value={projectRequest.heroImage}\r\n                                placeholder=\"External link to an image of your app\"\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, heroImage: value })} />\r\n                        </Stack>\r\n                    </PivotItem>\r\n                    <PivotItem headerText=\"Project links\">\r\n                        <Stack tokens={{ childrenGap: 10 }}>\r\n                            <TextField label=\"Download Link:\"\r\n                                value={projectRequest.downloadLink}\r\n                                disabled={!props.editing && props.projectData.downloadLink !== undefined}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, downloadLink: value })} />\r\n\r\n                            <TextField label=\"Github Link:\"\r\n                                value={projectRequest.githubLink}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, githubLink: value })} />\r\n\r\n                            <TextField label=\"External link\"\r\n                                value={projectRequest.externalLink}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, externalLink: value })} />\r\n\r\n                        </Stack>\r\n                    </PivotItem>\r\n                    <PivotItem headerText=\"More info\">\r\n                        <Stack tokens={{ childrenGap: 10 }}>\r\n                            <ComboBox\r\n                                label=\"Category\"\r\n                                options={categoryOptions}\r\n                                defaultSelectedKey={projectRequest.category || categoryOptions[0].key}\r\n                                onChange={(e: FormEvent<IComboBox>, option: IComboBoxOption | undefined) => {\r\n                                    if (!option) return;\r\n                                    setProjectRequest({ ...projectRequest, category: option.text });\r\n                                }} />\r\n\r\n                            <Checkbox label=\"Project is private/secret\"\r\n                                checked={projectRequest.isPrivate}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, isPrivate: value })} />\r\n\r\n                            <Checkbox label=\"Partipation in Launch 2020\"\r\n                                checked={projectRequest.awaitingLaunchApproval}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, awaitingLaunchApproval: value })} />\r\n\r\n                            <Text style={{ display: projectRequest.awaitingLaunchApproval ? \"block\" : \"none\" }}>A moderator will contact you over Discord to help with the manual review process for Launch 2020</Text>\r\n                        </Stack>\r\n                    </PivotItem>\r\n                </Pivot>\r\n\r\n                <Text style={{ color: \"red\" }}>{submissionError}</Text>\r\n                <Stack horizontal tokens={{ childrenGap: 10 }} horizontalAlign=\"space-evenly\" style={{ marginTop: 20 }}>\r\n                    {\r\n                        props.onCancel ?\r\n                            <DefaultButton text=\"Cancel\" onClick={() => props.onCancel ? props.onCancel() : undefined} />\r\n                            : \"\"\r\n                    }\r\n                    <PrimaryButton text={props.editing ? \"Update\" : \"Register\"} onClick={submitParticipantRequest} />\r\n                </Stack>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n};","import { IProject, DeleteProject } from \"../common/services/projects\";\r\nimport { DocumentCard, DocumentCardImage, ImageFit, DocumentCardDetails, DocumentCardTitle, Text, Stack, DocumentCardActions, IButtonProps, PrimaryButton, Dialog, FontIcon, DefaultButton, DialogType, DialogFooter } from \"office-ui-fabric-react\";\r\nimport * as React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { EditProjectDetailsForm } from \"./forms/EditProjectDetailsForm\";\r\n\r\nenum ButtonType {\r\n  Github, Download, External\r\n}\r\n\r\ninterface ICustomButtonRenderProps {\r\n  type: ButtonType;\r\n  link: string;\r\n}\r\nconst FaIconStyle: React.CSSProperties = {\r\n  color: \"black\",\r\n  height: \"25px\",\r\n  width: \"25px\"\r\n};\r\n\r\nexport interface IProjectCard {\r\n  project: IProject;\r\n  editable?: boolean;\r\n}\r\n\r\nexport const ProjectCard = (props: IProjectCard) => {\r\n  const [projectCardActions, setProjectCardActions] = React.useState<IButtonProps[]>([]);\r\n  const [showEditDialog, setShowEditDialog] = React.useState<boolean>(false);\r\n  const [showDeleteProjectDialog, setShowDeleteProjectDialog] = React.useState(false);\r\n  const [ViewModel, setProjectViewModel] = React.useState<IProject>(props.project);\r\n\r\n  React.useEffect(() => {\r\n    const projectCardsData: IButtonProps[] = [];\r\n\r\n    if (ViewModel.downloadLink) {\r\n      projectCardsData.push({\r\n        data: {\r\n          type: ButtonType.Download,\r\n          link: ViewModel.downloadLink\r\n        },\r\n        href: ViewModel.downloadLink,\r\n        onRenderIcon: onRenderIcon\r\n      });\r\n    }\r\n\r\n    if (ViewModel.githubLink) {\r\n      projectCardsData.push({\r\n        data: {\r\n          type: ButtonType.Github,\r\n          link: ViewModel.githubLink\r\n        },\r\n        href: ViewModel.githubLink,\r\n        onRenderIcon: onRenderIcon\r\n      });\r\n    }\r\n\r\n    if (ViewModel.externalLink) {\r\n      projectCardsData.push({\r\n        data: {\r\n          type: ButtonType.External,\r\n          link: ViewModel.externalLink\r\n        },\r\n        href: ViewModel.externalLink,\r\n        onRenderIcon: onRenderIcon\r\n      });\r\n    }\r\n\r\n    setProjectCardActions(projectCardsData);\r\n\r\n  }, [ViewModel.githubLink, ViewModel.externalLink, ViewModel.downloadLink]);\r\n\r\n  function onRenderIcon(buttonProps: IButtonProps | undefined) {\r\n    if (!buttonProps) return null;\r\n    const buttonData: ICustomButtonRenderProps = buttonProps.data;\r\n    if (!buttonData.link) return null;\r\n\r\n    switch (buttonData.type.valueOf()) {\r\n      case ButtonType.Download:\r\n        if (buttonData.link && buttonData.link.includes(\"microsoft.com\")) {\r\n          return <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"microsoft\"]} />\r\n        } else {\r\n          return <FontAwesomeIcon style={FaIconStyle} icon=\"arrow-circle-down\" />\r\n        }\r\n      case ButtonType.External:\r\n        return <FontAwesomeIcon style={FaIconStyle} icon={[\"fas\", \"globe\"]} />\r\n      case ButtonType.Github:\r\n        return <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"github\"]} />\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DocumentCard style={{ width: 275 }}>\r\n\r\n      <Dialog hidden={!showEditDialog} title={`Edit ${ViewModel.appName}`}\r\n        dialogContentProps={{\r\n          styles: { title: { padding: \"16px 16px 5px 24px\", margin: 0 } },\r\n          type: DialogType.largeHeader\r\n        }}\r\n        onDismiss={() => {\r\n          setShowEditDialog(false)\r\n        }}>\r\n        <EditProjectDetailsForm editing projectData={ViewModel} onSuccess={(updatedProject) => {\r\n          setShowEditDialog(false);\r\n          if (updatedProject) setProjectViewModel(updatedProject);\r\n        }} />\r\n      </Dialog>\r\n      <Dialog hidden={!showDeleteProjectDialog}\r\n        dialogContentProps={{\r\n          styles: { title: { padding: \"16px 16px 8px 24px\", fontSize: 20 }, subText: { fontSize: 16 } },\r\n          type: DialogType.largeHeader,\r\n          title: `Are you sure?`,\r\n          subText: `This action can't be undone`\r\n        }}\r\n        onDismiss={() => { setShowDeleteProjectDialog(false) }}>\r\n        <Stack horizontal tokens={{ childrenGap: 7 }}>\r\n          <DefaultButton style={{ backgroundColor: \"#cc0000\", color: \"#fff\", borderColor: \"#cc0000\" }} text={`Yes, delete`}\r\n            onClick={async () => {\r\n              await DeleteProject({ appName: ViewModel.appName }); setShowDeleteProjectDialog(false);\r\n            }} />\r\n          <PrimaryButton onClick={() => { setShowDeleteProjectDialog(false); }} text=\"Cancel\" />\r\n        </Stack>\r\n      </Dialog>\r\n\r\n      <DocumentCardImage height={150} imageFit={ImageFit.centerCover} imageSrc={ViewModel.heroImage} />\r\n      <DocumentCardDetails>\r\n        <DocumentCardTitle styles={{ root: { padding: 5, height: \"auto\" } }} title={ViewModel.appName} />\r\n        <Stack tokens={{ padding: 10 }}>\r\n          <Text style={{ overflowY: \"auto\", height: 60 }}>{ViewModel.description}</Text>\r\n        </Stack>\r\n        <Stack horizontal tokens={{ childrenGap: 5, padding: 5 }} verticalAlign=\"center\">\r\n          {props.editable !== undefined ? (<>\r\n            <PrimaryButton iconProps={{ iconName: \"edit\", style: { fontSize: 18 } }} style={{ minWidth: 45, padding: 0 }} onClick={() => { setShowEditDialog(true) }} />\r\n            <PrimaryButton iconProps={{ iconName: \"delete\", style: { fontSize: 18 } }} style={{ minWidth: 45, padding: 0 }} onClick={() => { setShowDeleteProjectDialog(true) }} />\r\n          </>)\r\n            : <></>}\r\n\r\n          <DocumentCardActions styles={{ root: { padding: 0 } }} actions={projectCardActions} />\r\n        </Stack>\r\n      </DocumentCardDetails>\r\n    </DocumentCard>\r\n  )\r\n}\r\n","import * as React from \"react\";\r\nimport { Stack, Text, FontIcon, Spinner, ProgressIndicator } from \"office-ui-fabric-react\";\r\nimport { useProjects } from \"../common/services/projects\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\n\r\nexport const Projects: React.StatelessComponent = () => {\r\n  const [state, getProjects] = useProjects();\r\n\r\n  React.useEffect(() => {\r\n    getProjects();\r\n  }, []);\r\n\r\n  return (\r\n    /* Todo: Add a header with brief explanation of the below */\r\n    <>\r\n      <Stack horizontalAlign=\"center\" horizontal wrap tokens={{ childrenGap: 10 }}>\r\n        {!state.projects && state.isLoading &&\r\n          <Stack horizontalAlign=\"center\" style={{ marginTop: \"25vh\" }}>\r\n            <Spinner label=\"Loading Projects...\" />\r\n          </Stack>\r\n        }\r\n        {state.error && (\r\n          <Stack horizontalAlign=\"center\" style={{ marginTop: \"25vh\" }}>\r\n            <FontIcon iconName=\"sad\" style={{ fontSize: 55 }}></FontIcon>\r\n            <Text variant=\"xLarge\">An error occured getting projects</Text>\r\n          </Stack>      \r\n        )}\r\n        {state.projects && (\r\n          state.projects.length > 0 ? state.projects.map((project, i) => (\r\n            <ProjectCard key={i} project={project}></ProjectCard>\r\n          )) : (\r\n            <Stack horizontalAlign=\"center\" style={{ marginTop: \"25vh\" }}>\r\n              <FontIcon iconName=\"sad\" style={{ fontSize: 55 }}></FontIcon>\r\n              <Text variant=\"xLarge\">No projects, yet</Text>\r\n            </Stack>\r\n          )\r\n        )}\r\n      </Stack>\r\n      \r\n      {state.projects && state.isLoading && (\r\n        <ProgressIndicator />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\n\r\nexport default styled.div`\r\n    box-shadow: ${Depths.depth8};\r\n    :hover {\r\n      box-shadow: ${Depths.depth16};\r\n    };\r\n    transition: 150ms all;\r\n`;","import React, { CSSProperties } from \"react\";\r\nimport { Stack, Text, PrimaryButton, Image, ImageFit, ImageCoverStyle } from \"office-ui-fabric-react\";\r\nimport { Links, Images } from \"../common/const\";\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport HoverBox from '../components/HoverBox';\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\n\r\nconst FaIconStyle: CSSProperties = {\r\n  color: \"black\",\r\n  height: \"65px\",\r\n  width: \"65px\"\r\n};\r\n\r\nconst LinkCard = styled.section`\r\n    font-family: Segoe UI, sans-serif;\r\n    padding: 7px;\r\n    max-width: 400px;\r\n`;\r\n\r\nlet Link = styled.a`\r\n    color: blue;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    :hover {\r\n      text-decoration: underline;\r\n    };\r\n`;\r\n\r\nlet Img = styled.img`\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n`;\r\n\r\nconst LargeCard = styled.div`\r\nbox-shadow: ${Depths.depth16};\r\n.heroImage, .heroImage img {\r\n  width: 720px;\r\n  height: 350px;\r\n}\r\n\r\n@media screen and (max-width: 1479px) {\r\n  width: min-content;\r\n  .heroImage, .heroImage img {\r\n      width: 850px;\r\n      height: 350px;\r\n  }\r\n}\r\n`;\r\n\r\nexport const Home: React.StatelessComponent = () => {\r\n  return (\r\n    <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n      <p style={{ fontFamily: \"Segoe UI, Sans-Serif\", fontWeight: \"lighter\", fontSize: \"24px\", margin: 0 }}>The homepage for the unofficial Discord server </p>\r\n\r\n      <Stack wrap horizontal horizontalAlign=\"space-around\" tokens={{ childrenGap: 25 }}>\r\n\r\n        <LargeCard>\r\n          <Stack horizontal wrap maxWidth=\"1400px\" horizontalAlign=\"space-evenly\">\r\n            <Image className=\"heroImage\" coverStyle={ImageCoverStyle.landscape} imageFit={ImageFit.cover} src={Images.launchAppsHero} />\r\n\r\n            <Stack style={{ margin: \"15px\" }} verticalAlign=\"center\">\r\n              <Text variant=\"xLargePlus\">Project registration now open!</Text>\r\n              <Text variant=\"mediumPlus\">Register your apps/projects to showcase on our website and participate in Launch 2020!</Text>\r\n              <PrimaryButton href=\"/dashboard\" style={{ marginTop: \"15px\", width: 150 }} text=\"Get started\" />\r\n            </Stack>\r\n          </Stack>\r\n        </LargeCard>\r\n\r\n        <Stack wrap horizontal horizontalAlign=\"space-around\" tokens={{ childrenGap: 15 }}>\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.discordChatExample} />\r\n\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>Discuss the platform with other enthusiasts, get help as a developer, and interact with the devs of your favorite apps</Text>\r\n                    <Link href={Links.discordServerInvite} target=\"_blank\"> Join our discord server </Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"discord\"]} />\r\n                </Stack>\r\n\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.githubOrgScreenshot} />\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>Many of our projects are open source, so others can learn or build with them</Text>\r\n                    <Link href={Links.githubOrganization} target=\"_blank\">See our open source projects</Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"github\"]} />\r\n                </Stack>\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.launchHeroImage} />\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>As a community of talented developers, each year we Launch our projects together in an annual event known as <code>Launch</code></Text>\r\n                    <Link href={Links.launch2019Medium} target=\"_blank\">Read about Launch 2019</Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"medium\"]} />\r\n                </Stack>\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n","import React, { CSSProperties } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Text, Stack } from \"office-ui-fabric-react\";\r\n\r\nconst navLinkActiveStyle: CSSProperties = {\r\n  borderBottom: \"3px solid #5e5eff\",\r\n};\r\n\r\nconst MyNavLink = styled(NavLink)`     \r\n   color: black;\r\n   padding: 10px 12px 5px 12px;\r\n   text-align: center;\r\n   display: inline-block;\r\n   text-decoration: none;\r\n   margin: 7px;\r\n   border-bottom: 3px solid #c9c9c9;\r\n\r\n  :hover  {\r\n    text-decoration: none;    \r\n    border-bottom: 3px solid #9e9e9e;\r\n  };\r\n`;\r\n\r\nconst NavText = styled(Text)`\r\n  font-size: 18px;\r\n`;\r\n\r\nexport class NavMenu extends React.Component<any, any> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <nav>\r\n        <Stack horizontal wrap style={{ maxWidth: \"100%\" }}>\r\n          <MyNavLink to=\"/\" exact activeStyle={navLinkActiveStyle}>\r\n            <NavText>Home</NavText>\r\n          </MyNavLink>\r\n          <MyNavLink to=\"/projects\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Projects</NavText>\r\n          </MyNavLink>\r\n          <MyNavLink to=\"/launch\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Launch</NavText>\r\n          </MyNavLink>\r\n          {/* Present but not shown, so it gets crawled */}\r\n          <MyNavLink style={{ display: \"none\" }} to=\"/dashboard\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Dashboard</NavText>\r\n          </MyNavLink>\r\n        </Stack>\r\n      </nav>\r\n    );\r\n  }\r\n}","import { fetchBackend } from \"../helpers\";\r\n\r\nexport async function CreateUser(userData: IUser): Promise<Response> {\r\n    return await fetchBackend(\"user\", \"POST\", userData);\r\n}\r\n\r\nexport async function ModifyUser(userData: IUser) {\r\n    return await fetchBackend(\"user\", \"PUT\", userData);\r\n}\r\n\r\nexport async function GetUser(discordId: string) {\r\n    return await fetchBackend(`user?discordId=${discordId}`, \"GET\");\r\n}\r\n\r\nexport interface IUser {\r\n    name: string;\r\n    discordId: string;\r\n    email?: string; // This is a contact email supplied by the user, and is safe to be public \r\n}","import { Text, Stack, PrimaryButton, TextField, DefaultButton } from \"office-ui-fabric-react\";\r\nimport React from \"react\";\r\nimport { IBackendReponseError } from \"../../common/interfaces\";\r\nimport { CreateUser, IUser, ModifyUser } from \"../../common/services/users\";\r\nimport { CurrentUser } from \"../../common/services/discord\";\r\n\r\nexport interface IRegisterDevProps {\r\n    onCancel?: Function;\r\n    onSuccess: Function;\r\n    userData?: Partial<IUser>;\r\n};\r\n\r\nexport const RegisterUserForm = (props: IRegisterDevProps) => {\r\n    let [userRequest, setUserRequest] = React.useState<IUser>({\r\n        discordId: CurrentUser.id,\r\n        name: \"\"\r\n    });\r\n\r\n    let [submissionError, setSubmissionError] = React.useState<string>(\"\");\r\n    let [showSuccessIndicator, setShowSuccessIndicator] = React.useState(false);\r\n\r\n    /* Todo: Attempt to find an existing user in the DB and set this according, then prepopulate the fields below */\r\n    let [modifying] = React.useState(false);\r\n\r\n    async function addUser() {\r\n        if (!userRequest) return;\r\n\r\n        let request = modifying ? await ModifyUser(userRequest)\r\n            : await CreateUser(userRequest);\r\n\r\n        let success = await request.status === 200;\r\n\r\n        if (!success) {\r\n            let error: IBackendReponseError = await request.json();\r\n            if (error.error && error.reason) {\r\n                setSubmissionError(error.reason);\r\n            }\r\n        } else {\r\n            setShowSuccessIndicator(true);\r\n            setTimeout(() => {\r\n                props.onSuccess();\r\n            }, 2500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n            {/* Need to toggle both src and display so it trigger the animation, and space is taken up during the transition (while the svg loads) */}\r\n            <img style={{ display: (showSuccessIndicator ? \"block\" : \"none\"), height: \"200px\" }} src={showSuccessIndicator ? \"/assets/img/checkanimated.svg\" : \"\"} alt=\"Check\" />\r\n            <Stack horizontalAlign=\"start\" tokens={{ childrenGap: 10 }} style={{ maxWidth: \"100%\", width: \"300px\", display: (!showSuccessIndicator ? \"block\" : \"none\") }}>\r\n                <TextField label=\"Name:\"\r\n                    description=\"Friendly name for other users/devs to see\"\r\n                    defaultValue={props.userData ? props.userData.name : \"\"}\r\n                    styles={{ root: { width: \"100%\" } }}\r\n                    required\r\n                    onChange={(e: any, value: any) => setUserRequest({ ...userRequest, name: value })} />\r\n\r\n                <TextField label=\"Contact email:\"\r\n                    description=\"Optional\"\r\n                    defaultValue={props.userData ? props.userData.email : \"\"}\r\n                    styles={{ root: { width: \"100%\" } }}\r\n                    onChange={(e: any, value: any) => setUserRequest({ ...userRequest, email: value })} />\r\n\r\n                <Text style={{ color: \"red\" }}>{submissionError}</Text>\r\n                <Stack horizontal tokens={{ childrenGap: 10 }}>\r\n                    <PrimaryButton text=\"Register\"\r\n                        onClick={addUser} />\r\n                    {\r\n                        props.onCancel ?\r\n                            <DefaultButton text=\"Cancel\" onClick={() => props.onCancel ? props.onCancel() : undefined} />\r\n                            : \"\"\r\n                    }\r\n                </Stack>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n};","import * as React from \"react\";\r\nimport { Stack, Link, Text, PrimaryButton, Persona, TooltipHost, TooltipDelay, DefaultButton, IContextualMenuProps, IContextualMenuItem, PersonaSize, Dialog, DialogFooter, DialogType } from \"office-ui-fabric-react\";\r\nimport { Images, Links } from \"../common/const\";\r\nimport { NavMenu } from \"./NavMenu\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CSSProperties } from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { GetUserAvatar, GetCurrentDiscordUser, IDiscordUser, AuthData, IsUserInServer, discordAuthEndpoint } from \"../common/services/discord\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getHeadTitle } from \"../common/helpers\";\r\nimport { History } from \"history\";\r\nimport { RegisterUserForm } from \"./forms/RegisterUser\";\r\nimport { GetUser, IUser } from \"../common/services/users\";\r\n\r\nconst FaIconStyle: CSSProperties = {\r\n  color: \"white\",\r\n  height: \"20px\",\r\n  width: \"20px\",\r\n  paddingLeft: \"10px\"\r\n};\r\n\r\nexport const AppHeader: React.StatelessComponent = (props: any) => {\r\n  return (\r\n    <Route render={({ history }) => (\r\n      <header style={{ marginBottom: \"10px\", maxWidth: \"98vw\" }}>\r\n        <Stack style={{ width: \"100vw\", margin: \"0px\" }} horizontal wrap tokens={{ childrenGap: 10 }} verticalAlign='end' horizontalAlign=\"space-around\">\r\n          <Helmet>\r\n            <title>{getHeadTitle(props.location.pathname)}</title>\r\n          </Helmet>\r\n          <Link href=\"/\">\r\n            {/* This is an img and not an Image from FabricUI because when rendered on the live server, the image randomly doesn't show */}\r\n            <img style={{ maxWidth: \"100vw\" }} src={Images.uwpCommunityLogo} alt=\"Uwp Community Logo\" />\r\n          </Link>\r\n\r\n          <NavMenu />\r\n\r\n          <SignInButton history={history} />\r\n        </Stack>\r\n\r\n      </header>\r\n    )} />\r\n  );\r\n};\r\n\r\nconst PrivacyPolicyText: React.StatelessComponent = () => <p>Make sure you've read the <NavLink to=\"/privacy-policy\">Privacy Policy</NavLink> first -- by logging in, you agree to accept this policy.</p>\r\n\r\nexport const SignInButton: React.FC<{ history: History }> = ({ history }) => {\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n  const [discordUser, setDiscordUser] = React.useState<IDiscordUser>();\r\n  const [user, setUser] = React.useState<IUser>();\r\n  const [userAvatar, setUserAvatar] = React.useState<string>();\r\n  const [joinServerAlertHidden, setJoinServerAlertHidden] = React.useState(true);\r\n  const [registerUserShown, setRegisterUserShown] = React.useState(false);\r\n  const [editProfileShown, setEditProfileShown] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setupLoggedInUser();\r\n  }, []);\r\n\r\n  async function setupLoggedInUser() {\r\n    const discordUser = await GetCurrentDiscordUser();\r\n    const avatarUrl = await GetUserAvatar(discordUser);\r\n\r\n    if (!discordUser || !avatarUrl) return;\r\n    setLoggedIn(true);\r\n    setDiscordUser(discordUser);\r\n\r\n    let userIsInServer = await IsUserInServer();\r\n    if (!userIsInServer) {\r\n      setJoinServerAlertHidden(false);\r\n      return;\r\n    }\r\n\r\n    const userRequest = await GetUser(discordUser.id);\r\n    if (userRequest.status === 404) {\r\n      // User isn't registered\r\n      setRegisterUserShown(true);\r\n      return;\r\n    }\r\n    if (userRequest && userRequest.status !== 200) throw new Error(await userRequest.text());\r\n\r\n    let user: IUser = await userRequest.json();\r\n\r\n    setUser(user);\r\n    setUserAvatar(avatarUrl);\r\n  }\r\n\r\n  const LoggedInButtonDropdownItems: IContextualMenuProps = {\r\n    onItemClick: OnMenuItemClick,\r\n    useTargetWidth: true,\r\n    items: [{\r\n      key: \"dashboard\",\r\n      text: \"Dashboard\",\r\n      iconProps: { iconName: \"ViewDashboard\" }\r\n    }, {\r\n      /* Todo: Only show this button if the user HAS a profile to edit */\r\n      key: \"editProfile\",\r\n      text: \"Edit Profile\",\r\n      iconProps: { iconName: \"EditContact\" }\r\n    }, {\r\n      key: \"logOut\",\r\n      text: \"Log out\",\r\n      iconProps: { iconName: \"SignOut\" }\r\n    }]\r\n  }\r\n\r\n  function OnMenuItemClick(ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined, item?: IContextualMenuItem | undefined) {\r\n    if (!item) return;\r\n\r\n    switch (item.key) {\r\n      case \"logOut\":\r\n        LogOut();\r\n        break;\r\n      case \"dashboard\":\r\n        history.push(\"/dashboard\");\r\n        break;\r\n      case \"editProfile\":\r\n        setEditProfileShown(true);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function LogOut() {\r\n    AuthData.Clear();\r\n    history.push(\"/\");\r\n    window.location.reload();\r\n  }\r\n\r\n  function CloseJoinServerDialog() {\r\n    setJoinServerAlertHidden(true);\r\n    LogOut();\r\n  }\r\n\r\n\r\n  return (\r\n    loggedIn && discordUser ?\r\n      <Stack>\r\n        <Dialog\r\n          hidden={joinServerAlertHidden}\r\n          dialogContentProps={{\r\n            type: DialogType.normal,\r\n            title: \"Join the Community to continue\",\r\n            subText: \"Looks like you aren't part of the UWP Community. To sign in, you'll need to join the server first\"\r\n          }}\r\n          modalProps={{\r\n            isBlocking: true,\r\n            styles: { main: { maxWidth: 450 } }\r\n          }}\r\n        >\r\n          <DialogFooter>\r\n            <PrimaryButton href={Links.discordServerInvite} text=\"Join the server\" />\r\n            <DefaultButton onClick={CloseJoinServerDialog} text=\"Sign out\" />\r\n          </DialogFooter>\r\n        </Dialog>\r\n        <TooltipHost content={`Logged in as ${discordUser.username}`} delay={TooltipDelay.long}>\r\n          <DefaultButton style={{ padding: \"25px\", border: \"0px solid black\" }} menuProps={LoggedInButtonDropdownItems}>\r\n            <Persona size={PersonaSize.size40} text={discordUser.username} imageUrl={userAvatar} />\r\n          </DefaultButton>\r\n        </TooltipHost>\r\n\r\n        <Dialog hidden={!editProfileShown && !registerUserShown} dialogContentProps={{ type: DialogType.largeHeader, title: registerUserShown ? \"One more step\" : \"Edit profile\" }}>\r\n          {registerUserShown ?\r\n            <Text variant=\"large\">Complete your profile to get started</Text>\r\n            : <></>}\r\n          <RegisterUserForm userData={user} onSuccess={() => { setRegisterUserShown(false); setEditProfileShown(false) }} onCancel={!registerUserShown ? () => setEditProfileShown(false) : undefined} />\r\n        </Dialog>\r\n      </Stack>\r\n      :\r\n      <Stack verticalAlign=\"start\" style={{ marginBottom: \"22px\" }}>\r\n        <TooltipHost\r\n          content={<PrivacyPolicyText />}\r\n          id={'privacyPolicyHost'}\r\n          calloutProps={{ gapSpace: 0 }}\r\n          closeDelay={500}\r\n          delay={0}\r\n          styles={{ root: { display: 'inline-block' } }}\r\n        >\r\n          <PrimaryButton href={discordAuthEndpoint} style={{ padding: \"18px\" }}>\r\n            <Text>Sign in</Text>\r\n            <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"discord\"]} />\r\n          </PrimaryButton>\r\n      </TooltipHost>\r\n    </Stack>\r\n  );\r\n};","import React, { useState, CSSProperties } from \"react\";\r\nimport { Text, Stack, FontIcon, Spinner, Image, ImageCoverStyle, ImageFit, ProgressIndicator } from \"office-ui-fabric-react\";\r\nimport styled from 'styled-components';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport HoverBox from '../components/HoverBox';\r\nimport { Images } from \"../common/const\";\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\nimport { useProjects, IProject } from \"../common/services/projects\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\nimport { GetCurrentDiscordUser, IDiscordUser } from \"../common/services/discord\";\r\n\r\nexport const Launch = () => {\r\n    const [state, getProjects] = useProjects(2020);\r\n    const [user, setUser] = React.useState<IDiscordUser>();\r\n\r\n    React.useEffect(()=>{\r\n        getProjects();\r\n        (async () => {\r\n            setUser(await GetCurrentDiscordUser());\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <Stack tokens={{childrenGap: 25}}>\r\n            <Stack horizontal wrap style={{ boxShadow: Depths.depth16 }} maxWidth=\"1200px\">\r\n                <Image width=\"100%\" height=\"400px\" src={Images.launchAppsHero} coverStyle={ImageCoverStyle.landscape} imageFit={ImageFit.cover} />\r\n                <Stack style={{margin: \"20px\"}}>\r\n\r\n                    <Text style={{fontFamily: \"Segoe UI\", fontSize: \"30px\", fontWeight: \"lighter\"}}>// Launch</Text>\r\n\r\n                    <Text style={{marginTop: \"10px\", fontWeight: 500}} variant=\"xLarge\">Learn, develop, and Launch together</Text>\r\n                    <Text style={{marginTop: \"10px\"}} variant=\"mediumPlus\">Once a year, our community of Windows App developers join together to release their UWP-related projects. If you’re a developer, new or veteran, then we HIGHLY encourage you to join the server and register your app for the next Launch event!</Text>\r\n                    <Text style={{marginTop: \"10px\"}} variant=\"large\">{ user ? \"Go to your dashboard to get started\" : \"\"}</Text>\r\n                </Stack>\r\n            </Stack>\r\n\r\n            {state.projects && state.projects.length ? <Text variant=\"xLarge\">Launch 2020 Participants</Text> : <></>}\r\n            <Stack horizontal wrap horizontalAlign=\"center\" tokens={{childrenGap: 25}}>\r\n                {/* Todo: Add launch 2019 summary */}\r\n                {state.projects && state.projects.length && state.projects.map((project, i) => <ProjectCard key={i} project={project} />)}\r\n                {!state.projects && state.isLoading && <Spinner label=\"Checking for Launch 2020 Participants\" />}\r\n                {state.error && (\r\n                    <Stack horizontalAlign=\"center\">\r\n                        <FontIcon iconName=\"sad\" style={{ fontSize: 55 }}></FontIcon>\r\n                        <Text variant=\"xLarge\">An error occured getting launch participants</Text>\r\n                    </Stack>\r\n                )}\r\n            </Stack>\r\n\r\n            {state.projects && state.isLoading && (\r\n                <ProgressIndicator />\r\n            )}\r\n        </Stack>\r\n    );\r\n};\r\n\r\ninterface ILaunchCardProps {\r\n    header: string;\r\n    description: string;\r\n    path: string;\r\n    buttonText?: string;\r\n    buttonDisabled?: boolean;\r\n    buttonStyle?: CSSProperties;\r\n};\r\n\r\nconst LaunchCardStyle = styled(HoverBox)`\r\n    max-height: 500px;\r\n    max-width: 350px;\r\n    padding: 50px;\r\n    :hover {\r\n                pointer: cursor;\r\n        };\r\n    `;\r\n\r\n","import { Text, Stack, Label, Spinner } from \"office-ui-fabric-react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { AuthData } from \"../common/services/discord\";\r\n\r\nexport const Signin: React.FC<any> = () => {\r\n\r\n    let authResponse: string | null = (new URL(window.location.href)).searchParams.get(\"authResponse\");\r\n\r\n    if (authResponse) {\r\n        authResponse = atob(authResponse);\r\n        AuthData.Set(JSON.parse(authResponse));\r\n\r\n        window.location.href = \"/dashboard\";\r\n    }\r\n\r\n    const [showRedirectLink, setShowRedirectLink] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setShowRedirectLink(true);\r\n        }, 7000);\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Stack>\r\n                <Stack horizontalAlign=\"center\">\r\n                    <Label>Signing in...</Label>\r\n                    <Spinner label=\"Hold on tight\" ariaLive=\"assertive\" />\r\n                    <Text style={{ visibility: showRedirectLink ? \"visible\" : \"hidden\" }}>If not redirected automatically, <a href=\"/dashboard\">click here</a></Text>\r\n                </Stack>\r\n            </Stack>\r\n        </div>\r\n    )\r\n};\r\n","import { EditProjectDetailsForm, IEditProjectDetailsFormProps } from './EditProjectDetailsForm';\r\nimport React from \"react\";\r\nimport { IProject } from '../../common/services/projects';\r\nimport { Stack, Text, PrimaryButton, DefaultButton, TooltipHost, DirectionalHint, Link, TeachingBubble, TextField, FontIcon } from 'office-ui-fabric-react';\r\nimport { fetchBackend } from '../../common/helpers';\r\n\r\nexport interface ICreateProjectFormProps extends IEditProjectDetailsFormProps {\r\n\r\n};\r\n\r\nexport const CreateProjectForm = (props: ICreateProjectFormProps) => {\r\n    const [verified, setVerified] = React.useState(false);\r\n    const [codeVerificationDisplayed, setCodeVerificationDisplayed] = React.useState(false);\r\n    const [manualReviewMessageShown, setManualReviewMessageShown] = React.useState(true);\r\n    const [projectData, setProjectData] = React.useState<Partial<IProject>>({});\r\n\r\n    return (\r\n        codeVerificationDisplayed ? <ProjectCodeVerifier onCancel={() => { setCodeVerificationDisplayed(false) }} onSuccess={(projectDetails) => {\r\n            setProjectData(projectDetails);\r\n\r\n            setCodeVerificationDisplayed(false);\r\n            setVerified(true);\r\n            setManualReviewMessageShown(false);\r\n        }} />\r\n            :\r\n            verified ?\r\n                (manualReviewMessageShown ?\r\n                    <Stack tokens={{ childrenGap: 10 }}>\r\n                        <Text>Manual review is required after submitting your project. This could take anywhere from several hours to several days</Text>\r\n                        <Stack horizontal tokens={{ childrenGap: 10 }} horizontalAlign=\"space-evenly\" style={{ marginTop: 20 }}>\r\n                            <DefaultButton onClick={() => {\r\n                                setManualReviewMessageShown(false);\r\n                                setVerified(false);\r\n                            }}>Go back</DefaultButton>\r\n                            <PrimaryButton onClick={() => setManualReviewMessageShown(false)}>Continue</PrimaryButton>\r\n                        </Stack>\r\n                    </Stack>\r\n                    : <EditProjectDetailsForm {...props} projectData={projectData} />)\r\n                :\r\n                <Stack tokens={{ childrenGap: 10, padding: 5 }}>\r\n                    <Text variant=\"large\">Before we begin...</Text>\r\n                    <Stack horizontal tokens={{ childrenGap: 5 }}>\r\n                        <FontIcon iconName=\"ReceiptCheck\" style={{ fontSize: 25 }} />\r\n                        <Text variant=\"medium\">Is your app public and already in the store?</Text>\r\n                    </Stack>\r\n                    <Stack horizontal tokens={{ childrenGap: 5 }}>\r\n                        <FontIcon iconName=\"ReceiptCheck\" style={{ fontSize: 25 }} />\r\n                        <Text variant=\"medium\">Do you have a \"Publisher support\" email listed on your apps' MS Store page?</Text>\r\n                    </Stack>\r\n                    <Stack style={{ marginTop: 20 }} horizontal tokens={{ childrenGap: 15 }} horizontalAlign=\"space-evenly\">\r\n                        <DefaultButton onClick={() => { setProjectData({ ...props.projectData, ...projectData }); setVerified(true) }}>No</DefaultButton>\r\n                        <PrimaryButton onClick={() => { setProjectData({ ...props.projectData, ...projectData }); setCodeVerificationDisplayed(true) }}>Yes</PrimaryButton>\r\n                    </Stack>\r\n                </Stack>\r\n    );\r\n};\r\n\r\ninterface IProjectCodeVerifierProps {\r\n    onSuccess: (projectDetails: Partial<IProject>) => void;\r\n    onCancel: Function;\r\n    projectData?: Partial<IProject>;\r\n}\r\nexport const ProjectCodeVerifier = (props: IProjectCodeVerifierProps) => {\r\n    enum VerficationState {\r\n        \"PreInit\", \"WaitingForCode\", \"Verified\"\r\n    }\r\n\r\n    const [storeIdTeachingBubbleTarget, setStoreIdTeachingBubbleTarget] = React.useState<MouseEvent>();\r\n    const [storeId, setStoreId] = React.useState<string>();\r\n    const [verificationCodeText, setVerificationCodeText] = React.useState<string>();\r\n    const [verificationState, setVerificationState] = React.useState<VerficationState>(VerficationState.PreInit);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n    async function BeginVerification() {\r\n        if (!validateStoreIdField()) return;\r\n        const request = await fetchBackend(\"projects/verification\", \"POST\", {\r\n            storeId: storeId\r\n        });\r\n\r\n        if (request.status === 200) {\r\n            setVerificationState(VerficationState.WaitingForCode);\r\n        } else {\r\n            const response = await request.json();\r\n            console.error(response);\r\n            setErrorMessage(response.reason);\r\n        }\r\n    }\r\n\r\n    async function checkVerification() {\r\n        if (!validateStoreIdField()) return;\r\n        const request = await fetchBackend(`projects/verification?storeId=${storeId}&code=${verificationCodeText}`, \"GET\");\r\n\r\n        if (request.status === 200) {\r\n            setVerificationState(VerficationState.Verified);\r\n        } else {\r\n            const response = await request.json();\r\n            console.error(response);\r\n            setErrorMessage(response.reason);\r\n        }\r\n    }\r\n\r\n    function validateStoreIdField() {\r\n        if (!storeId || storeId.length < 12) {\r\n            setErrorMessage(\"Store ID is too short\");\r\n            return false;\r\n        }\r\n        setErrorMessage(\"\");\r\n        return true;\r\n    }\r\n\r\n    const hideStoreIdTeachingBubbleTimeout = {\r\n        tick: setTimeout(() => { }),\r\n        onTimeout: () => {\r\n            setStoreIdTeachingBubbleTarget(undefined);\r\n        },\r\n        init: () => {\r\n            hideStoreIdTeachingBubbleTimeout.clear();\r\n            hideStoreIdTeachingBubbleTimeout.cleared = false;\r\n            hideStoreIdTeachingBubbleTimeout.tick = setTimeout(hideStoreIdTeachingBubbleTimeout.onTimeout, 1000);\r\n        },\r\n        cleared: false,\r\n        clear: () => {\r\n            hideStoreIdTeachingBubbleTimeout.cleared = true;\r\n            clearTimeout(hideStoreIdTeachingBubbleTimeout.tick);\r\n        }\r\n    };\r\n\r\n    function showStoreIdTeachingButton(event: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n        hideStoreIdTeachingBubbleTimeout.clear();\r\n        setStoreIdTeachingBubbleTarget(event.nativeEvent);\r\n    }\r\n\r\n    function hideStoreIdTeachingButton(event: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n        hideStoreIdTeachingBubbleTimeout.init();\r\n    }\r\n\r\n    function onStoreIDTextFieldKeyPress(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n        if (event.key == \"Enter\") {\r\n            BeginVerification();\r\n        }\r\n    }\r\n\r\n    function onVerificationCodeTextFieldKeyPress(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n        if (event.key == \"Enter\") {\r\n            checkVerification();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stack>\r\n            {\r\n                (() => {\r\n                    switch (verificationState.valueOf()) {\r\n                        case VerficationState.PreInit:\r\n                            return <>\r\n                                {storeIdTeachingBubbleTarget !== undefined ?\r\n                                    <TeachingBubble calloutProps={{ directionalHintFixed: true, directionalHint: DirectionalHint.topAutoEdge }} target={storeIdTeachingBubbleTarget}>\r\n                                        <Stack onMouseLeave={hideStoreIdTeachingButton} onMouseOver={() => hideStoreIdTeachingBubbleTimeout.clear()} tokens={{ childrenGap: 10 }}>\r\n                                            <Text variant=\"mediumPlus\">This is the alphanumeric 12 character ID assigned to your app. It can be found in the URL for your app's store listing</Text>\r\n                                            <Text variant=\"small\"><DefaultButton target=\"_blank\" href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/view-app-identity-details#link-to-your-apps-listing\">More details</DefaultButton></Text>\r\n                                        </Stack>\r\n                                    </TeachingBubble>\r\n                                    : <></>}\r\n\r\n                                <Stack tokens={{ childrenGap: 13 }}>\r\n                                    <Text>Your project can be verified automatically, and will be immediately visible to the community</Text>\r\n                                    <Stack horizontal verticalAlign=\"end\" tokens={{ childrenGap: 10 }}>\r\n                                        <Text variant=\"mediumPlus\">Enter the Store ID for your app</Text>\r\n                                        <Text variant=\"small\" style={{ color: \"gray\" }} onMouseLeave={hideStoreIdTeachingButton} ><Link onClick={showStoreIdTeachingButton}>What's this?</Link></Text>\r\n                                    </Stack>\r\n                                    <Stack grow horizontal tokens={{ childrenGap: 5 }}>\r\n                                        <TextField onKeyPress={onStoreIDTextFieldKeyPress} styles={{ field: { width: 250 } }} placeholder=\"9p75w183m6qr\" onChange={(e: any, value: any) => setStoreId(value)} />\r\n                                        <PrimaryButton onClick={() => BeginVerification()} style={{ minWidth: 25 }} iconProps={{ iconName: \"Forward\" }} />\r\n                                    </Stack>\r\n                                </Stack>\r\n                            </>;\r\n                        case VerficationState.WaitingForCode:\r\n                            return <Stack tokens={{ childrenGap: 10 }}>\r\n                                <Stack grow horizontal tokens={{ childrenGap: 5 }} verticalAlign=\"end\">\r\n                                    <FontIcon iconName=\"InboxCheck\" style={{ fontSize: 24 }} />\r\n                                    <Text variant=\"xLarge\">Check your inbox / junk mail</Text>\r\n                                </Stack>\r\n                                <Text variant=\"mediumPlus\">Enter the code we sent you</Text>\r\n                                <Stack grow horizontal tokens={{ childrenGap: 5 }}>\r\n                                    <TextField onChange={(e: any, value: any) => setVerificationCodeText(value)} onKeyPress={onVerificationCodeTextFieldKeyPress} styles={{ field: { width: 250 } }} />\r\n                                    <PrimaryButton onClick={() => checkVerification()} style={{ minWidth: 25 }} iconProps={{ iconName: \"Forward\" }} />\r\n                                </Stack>\r\n                            </Stack>;\r\n                        case VerficationState.Verified:\r\n                            return <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 15, padding: 10 }}>\r\n                                <FontIcon style={{ fontSize: 38 }} iconName=\"ReminderPerson\" />\r\n                                <Text variant=\"xxLarge\">Identity verified!</Text>\r\n                                <div style={{ display: \"none\" }}>\r\n                                    {setTimeout(() => props.onSuccess({\r\n                                        ...props.projectData,\r\n                                        needsManualReview: false,\r\n                                        downloadLink: `http://microsoft.com/store/apps/${storeId}`\r\n                                    }), 1500)}\r\n                                </div>\r\n                            </Stack>\r\n                        default:\r\n                            return <></>\r\n                    }\r\n                })()\r\n            }\r\n            <Text style={{ color: \"red\" }}>{errorMessage}</Text>\r\n        </Stack >\r\n    );\r\n};\r\n\r\n","import { Text, Stack, Persona, PersonaSize, Icon, Link, Dialog, DialogType, Image, ImageFit, DefaultButton, PrimaryButton, FontIcon } from \"office-ui-fabric-react\";\r\nimport React from \"react\";\r\nimport { GetUserAvatar, GetCurrentDiscordUser, IDiscordUser, discordAuthEndpoint, GetUserRoles, AssignUserRole } from \"../common/services/discord\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { CreateProjectForm } from \"../components/forms/CreateProjectForm\";\r\nimport { GetProjectsByDiscordId, IProject } from \"../common/services/projects\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\n\r\nconst DashboardHeader = styled.header`\r\nbackground: linear-gradient(to bottom,#005799 0,#0076d1);\r\nbox-shadow: 0 12px 45px -8px rgba(0,120,215,.35);\r\nwidth: 100vw;\r\nmargin: 0px;\r\npadding: 15px 0px;\r\n`;\r\n\r\nexport const Dashboard = () => {\r\n    const [welcomeMessage, setWelcomeMessage] = React.useState(\"Signing in...\");\r\n    const [userIcon, setUserIcon] = React.useState(\"\");\r\n\r\n    const [roles, setRoles] = React.useState<string[]>([]);\r\n\r\n    const [appRegistrationShown, setAppRegistrationShown] = React.useState(false);\r\n    const [devRegistrationShown, setDevRegistrationShown] = React.useState(false);\r\n\r\n    const [apps, setApps] = React.useState<IProject[]>();\r\n\r\n    React.useEffect(() => {\r\n        setupLoggedInUser();\r\n    }, []);\r\n\r\n    async function getUserApps(user: IDiscordUser) {\r\n        const projects = await GetProjectsByDiscordId(user.id);\r\n        setApps(projects);\r\n    }\r\n\r\n    async function setupLoggedInUser() {\r\n        let user: IDiscordUser | undefined = await GetCurrentDiscordUser();\r\n        if (navigator.userAgent.includes(\"ReactSnap\")) return;\r\n        if (!user) {\r\n            window.location.href = discordAuthEndpoint;\r\n            return;\r\n        }\r\n        setWelcomeMessage(user.username);\r\n        setUserIcon(await GetUserAvatar(user) || \"\");\r\n\r\n        const roles = await GetUserRoles(user);\r\n        if (roles) setRoles(roles);\r\n\r\n        getUserApps(user);\r\n    }\r\n\r\n    async function onDevRegisterFormSuccess() {\r\n        setDevRegistrationShown(false);\r\n\r\n        AssignUserRole(\"Developer\");\r\n        setTimeout(() => {\r\n            setupLoggedInUser();\r\n        }, 1000);\r\n    }\r\n\r\n    async function onAppRegisterFormSuccess() {\r\n        setAppRegistrationShown(false);\r\n    }\r\n\r\n    const PersonaDark = styled(Persona)`\r\n    * {\r\n        :hover {\r\n            color: white;\r\n        }\r\n        color: #f7f7f7;\r\n        font-size: 22px;\r\n    }\r\n    `;\r\n\r\n    const SectionTitleIconFontSize = 34;\r\n\r\n    const DashboardColumnFiller = styled.div`\r\n    @media only screen and (max-width: 807px) {\r\n        display: none;\r\n    } \r\n    `;\r\n\r\n    return (\r\n        <Stack tokens={{ childrenGap: 25 }}>\r\n            <DashboardHeader>\r\n                <Stack horizontal wrap style={{ padding: \"15px 0px\", margin: 0 }} verticalAlign=\"center\" horizontalAlign=\"space-around\" tokens={{ childrenGap: 25 }}>\r\n                    <PersonaDark size={PersonaSize.extraLarge} text={welcomeMessage} imageUrl={userIcon} />\r\n\r\n                    <Stack horizontal wrap verticalAlign=\"end\" tokens={{ childrenGap: 10 }} style={{ marginLeft: 10 }}>\r\n\r\n                        {roles.includes(\"Developer\") ?\r\n                            <Link style={{ color: \"white\", width: \"150px\", textDecoration: \"none\" }} onClick={() => setAppRegistrationShown(true)}>\r\n                                <Stack verticalAlign=\"end\" horizontalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                                    <Icon style={{ fontSize: 35, userSelect: \"none\" }} iconName=\"AppIconDefaultAdd\"></Icon>\r\n                                    <Text variant=\"mediumPlus\">Register an app</Text>\r\n                                </Stack>\r\n                            </Link>\r\n                            :\r\n                            <Link style={{ color: \"white\", width: \"150px\", textDecoration: \"none\" }} onClick={() => setDevRegistrationShown(true)}>\r\n                                <Stack verticalAlign=\"end\" horizontalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                                    <Icon style={{ fontSize: 35, userSelect: \"none\" }} iconName=\"code\"></Icon>\r\n                                    <Text variant=\"mediumPlus\">Become a Developer</Text>\r\n                                </Stack>\r\n                            </Link>\r\n                        }\r\n                        <Link style={{ color: \"gray\", width: \"150px\", textDecoration: \"none\" }} to=\"/dashboard/registerapp\">\r\n                            <Stack verticalAlign=\"end\" horizontalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                                <Icon style={{ fontSize: 35, color: \"gray\", userSelect: \"none\" }} iconName=\"Robot\"></Icon>\r\n                                <Text style={{ color: \"gray\" }} variant=\"mediumPlus\">Manage your roles</Text>\r\n                            </Stack>\r\n                        </Link>\r\n\r\n                    </Stack>\r\n\r\n                    <DashboardColumnFiller style={{ width: 200 }} />\r\n                </Stack>\r\n            </DashboardHeader>\r\n\r\n            <Stack horizontalAlign=\"center\" wrap horizontal tokens={{ childrenGap: 20 }}>\r\n                {/* Todo: Hide this area if the user doesn't have Dev role, or no apps are registered */}\r\n                {\r\n                    roles.includes(\"Developer\") ?\r\n                        <Stack style={{ margin: 50 }} horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n                            <Stack horizontal tokens={{ childrenGap: 15 }}>\r\n                                <Icon iconName=\"AppIconDefaultList\" style={{ fontSize: SectionTitleIconFontSize }} />\r\n                                <Text variant=\"xLarge\" style={{ fontWeight: 600 }}>My apps</Text>\r\n                            </Stack>\r\n\r\n                            <Stack horizontal wrap tokens={{ childrenGap: 15 }}>\r\n                                {\r\n                                    (apps && apps.length > 0 ? apps.map(project =>\r\n                                        <ProjectCard editable={true} project={project}></ProjectCard>\r\n                                    ) : <Text variant=\"large\">You don't have any registered apps</Text>)\r\n                                }\r\n                            </Stack>\r\n                        </Stack>\r\n                        :\r\n                        <Stack horizontalAlign=\"center\">\r\n                            <Icon iconName=\"BuildDefinition\" style={{ fontSize: 55 }} />\r\n                            <Text variant=\"xLarge\" style={{ fontWeight: 600 }}>Under construction</Text>\r\n                            <Text variant=\"large\">For now, this area is primarily for developers. Check back later for more</Text>\r\n                        </Stack>}\r\n\r\n                <Dialog hidden={!appRegistrationShown}\r\n                    dialogContentProps={{\r\n                        type: DialogType.largeHeader,\r\n                        title: 'Register an app',\r\n                    }}>\r\n                    <CreateProjectForm projectData={{}} onSuccess={onAppRegisterFormSuccess} onCancel={() => setAppRegistrationShown(false)} />\r\n                </Dialog>\r\n\r\n                <Dialog hidden={!devRegistrationShown} dialogContentProps={{\r\n                    type: DialogType.largeHeader, title: \"Become a developer\"\r\n                }}>\r\n                    <Stack tokens={{ childrenGap: 10 }} horizontalAlign=\"center\">\r\n                        <FontIcon iconName=\"GiftboxOpen\" style={{ fontSize: 56 }} />\r\n                        <Text variant=\"xLarge\">Let's build something, together</Text>\r\n                        <Text variant=\"medium\">Everyone, from seasoned veterans to enthusiastic novices can become a developer with just a click</Text>\r\n                        <Text variant=\"medium\">You'll be given the Developer role in the UWP Community Discord server, and become eligible for app services exclusive to devs</Text>\r\n                        <Stack horizontal horizontalAlign=\"space-evenly\" tokens={{ childrenGap: 10 }}>\r\n                            <DefaultButton onClick={() => setDevRegistrationShown(false)}>Cancel</DefaultButton>\r\n                            <PrimaryButton onClick={onDevRegisterFormSuccess}>Register</PrimaryButton>\r\n                        </Stack>\r\n                    </Stack>\r\n                </Dialog>\r\n            </Stack>\r\n\r\n        </Stack >\r\n    )\r\n};","import * as React from \"react\";\r\nimport { Text, Stack } from \"office-ui-fabric-react\";\r\n\r\nexport const NotFound: React.StatelessComponent = () => {\r\n  return (\r\n    <Stack horizontal horizontalAlign=\"center\">\r\n      <Text variant=\"large\" style={{ padding: 10 }}>\r\n        404 Not Found\r\n      </Text>\r\n    </Stack>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { Stack, Text, Link } from 'office-ui-fabric-react';\r\nimport memoize from 'promise-memoize'\r\n\r\nconst renderers = {\r\n  heading: (props: { level: 1 | 2 | 3; children: any }) => {\r\n    const { level, children } = props\r\n\r\n    const size = {\r\n      1: 'mega',\r\n      2: 'xxLarge',\r\n      3: 'xLarge'\r\n    }\r\n\r\n    const variant: any = size[level]\r\n    const headerType: any = `h${level}`\r\n\r\n    return <Text as={headerType} variant={variant}>{children[0].props.value}</Text>\r\n  },\r\n  text: Text,\r\n  link: Link\r\n}\r\n\r\nconst getMarkdown = memoize(async (url: string) => {\r\n  const req = await fetch(url)\r\n  const markdown = await req.text()\r\n\r\n  return markdown\r\n})\r\n\r\nexport const createMarkdownPage = async (filename: string) => {\r\n  const markdown = await getMarkdown(filename)\r\n  return {\r\n    default: () => (\r\n      <Stack\r\n        verticalFill\r\n        styles={{\r\n          root: {\r\n            maxWidth: 960,\r\n            height: 'auto'\r\n          }\r\n        }}>\r\n        <ReactMarkdown renderers={renderers} source={markdown} />\r\n      </Stack>\r\n    )\r\n  }\r\n}","import * as React from \"react\";\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\n\r\nimport { Projects } from './views/Projects';\r\nimport { Home } from './views/Home';\r\nimport { AppHeader } from \"./components/AppHeader\";\r\nimport { Launch } from \"./views/Launch\";\r\nimport { Signin } from \"./views/signin\";\r\nimport { Dashboard } from \"./views/dashboard\";\r\n\r\nimport { Stack } from \"office-ui-fabric-react\";\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab, faDiscord, faMedium, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { fas, faGlobe, faArrowCircleDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { NotFound } from \"./views/NotFound\";\r\n\r\nimport { createMarkdownPage } from './components/markdown-loader'\r\nimport { prerenderedLoader } from './components/prerender-loader'\r\n\r\nlibrary.add(fab, faDiscord, faMedium, faGithub);\r\nlibrary.add(fab, fas, faGlobe, faArrowCircleDown, faDiscord, faMedium, faGithub);\r\n\r\nconst AppHeaderWithRouter = withRouter(props => <AppHeader {...props} />);\r\nconst PrivacyPolicy = prerenderedLoader(() => createMarkdownPage('/privacy-policy.md'));\r\n\r\nexport const App: React.StatelessComponent = () => {\r\n\r\n  return (\r\n    <BrowserRouter basename=\"/\">\r\n      <Stack horizontalAlign=\"center\">\r\n        <AppHeaderWithRouter />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/projects\" component={Projects} />\r\n          <Route exact path=\"/launch\" component={Launch} />\r\n          <Route exact path=\"/signin\" component={Signin} />\r\n          <Route exact path=\"/dashboard\" component={Dashboard} />\r\n          <Route exact path=\"/privacy-policy\" component={PrivacyPolicy} />\r\n          <Route component={NotFound} />}\r\n        </Switch>\r\n      </Stack>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nimport loadable from \"@loadable/component\";\r\nimport { PrerenderedComponent } from \"react-prerendered-component\";\r\n\r\nexport const prerenderedLoader = (dynamicImport: any) => {\r\n  const LoadableComponent = loadable(dynamicImport);\r\n  return React.memo(props => (\r\n    <PrerenderedComponent live={LoadableComponent.load()}>\r\n      <LoadableComponent {...props} />\r\n    </PrerenderedComponent>\r\n  ));\r\n};","import React from \"react\";\r\nimport { hydrate, render } from \"react-dom\";\r\nimport { initializeIcons } from \"@uifabric/icons\";\r\nimport {App} from './App';\r\n\r\n// Initializes the UI Fabric icons that we can use\r\n// Choose one from this list: https://developer.microsoft.com/en-us/fabric#/styles/icons\r\ninitializeIcons();\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nif (rootElement && rootElement.hasChildNodes()) {\r\n  hydrate(<App />, rootElement);\r\n} else {\r\n  render(<App />, rootElement);\r\n}"],"sourceRoot":""}