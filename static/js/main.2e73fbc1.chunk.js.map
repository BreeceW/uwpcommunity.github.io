{"version":3,"sources":["common/const.ts","common/services/discord.ts","common/helpers.ts","common/services/projects.ts","components/ProjectCard.tsx","components/forms/EditProjectDetailsForm.tsx","components/PromiseVisualizer.tsx","views/Projects.tsx","components/HoverBox.tsx","views/Home.tsx","components/NavMenu.tsx","common/services/users.ts","components/forms/RegisterUser.tsx","components/AppHeader.tsx","views/Launch.tsx","components/ProjectReviewPanel.tsx","views/signin.tsx","components/forms/CreateProjectForm.tsx","views/dashboard.tsx","views/NotFound.tsx","components/markdown-loader.tsx","App.tsx","components/prerender-loader.tsx","index.tsx"],"names":["Links","Images","getBackendHost","isLocalhost","CurrentUser","discordAuthEndpoint","window","location","host","includes","AuthData","Get","authData","localStorage","getItem","JSON","parse","Set","SetDiscordAuthData","Clear","removeItem","data","setItem","stringify","RefreshTokenIfNeeded","a","UnixTime","Math","round","Date","getTime","auth","expires_at","fetch","refresh_token","json","refreshData","expires_in","IsUserInServer","Auth","Error","headers","access_token","Req","status","Response","filter","server","id","length","GetCurrentDiscordUser","GetUserRoles","user","fetchBackend","request","result","map","role","name","GetDiscordUser","discordId","AssignUserRole","roleName","GetUserAvatar","avatar","navigator","userAgent","route","method","requestBody","push","url","body","match","toMatch","regex","m","exec","undefined","ObjectToPathQuery","queryString","Object","entries","key","value","charAt","slice","CreateProject","projectData","downloadLink","storeId","ModifyProject","queryData","DeleteProject","bodyData","GetAllProjects","GetAllProjects_Unfiltered","GetLaunchProjects","year","project","launchYear","awaitingLaunchApproval","ButtonType","categoryOptions","category","index","text","EditProjectDetailsForm","props","React","useState","isPrivate","projectRequest","setProjectRequest","submissionError","setSubmissionError","showSuccessIndicator","setShowSuccessIndicator","editing","appName","error","reason","setTimeout","onSuccess","Stack","horizontalAlign","style","display","height","src","alt","tokens","childrenGap","maxWidth","width","Pivot","PivotItem","headerText","TextField","label","maxLength","styles","root","required","onChange","e","multiline","autoAdjustHeight","description","placeholder","type","heroImage","disabled","githubLink","externalLink","ComboBox","options","defaultSelectedKey","option","Checkbox","checked","Text","color","horizontal","marginTop","onCancel","DefaultButton","onClick","PrimaryButton","FaIconStyle","PointerOnHover","styled","span","ProjectCard","projectCardActions","setProjectCardActions","showEditDialog","setShowEditDialog","showDeleteProjectDialog","setShowDeleteProjectDialog","showManualApproveProjectDialog","setShowManualApproveProjectDialog","showManualApproveProjectDialogErrorMessage","setShowManualApproveProjectDialogErrorMessage","showLaunchApprovalDialog","setShowLaunchApprovalDialog","showLaunchApproveProjectDialogErrorMessage","setShowLaunchApproveProjectDialogErrorMessage","showProjectDetailsModal","setShowProjectDetailsModal","ViewModel","setProjectViewModel","projectOwner","setProjectOwner","onRenderIcon","buttonProps","buttonData","link","valueOf","Download","icon","External","Github","ManuallyApproveProject","needsManualReview","req","ApproveLaunchSubmission","AssignLaunchParticipantRole","collaborators","p","isOwner","roleAssignReq","ok","projectCardsData","href","target","DocumentCard","Modal","onDismiss","isOpen","padding","marginBottom","variant","fontWeight","verticalAlign","i","username","discriminator","Link","margin","FontIcon","fontSize","iconName","Image","borderTop","imageFit","ImageFit","contain","Dialog","hidden","title","dialogContentProps","DialogType","largeHeader","updatedProject","subText","backgroundColor","borderColor","onProjectRemove","collaborator","then","owner","centerCover","DocumentCardDetails","TooltipHost","content","delay","TooltipDelay","zero","modOptions","DocumentCardTitle","overflowY","editable","iconProps","minWidth","DocumentCardActions","actions","PromiseVisualizer","promiseState","promise","isLoading","visualState","setVisualState","useEffect","results","prevState","catch","usePromise","loadingStyle","Spinner","loadingMessage","errorStyle","onResolve","children","Projects","state","setState","wrap","sort","b","localeCompare","div","Depths","depth8","depth16","LinkCard","section","Img","img","LargeCard","Home","fontFamily","className","coverStyle","ImageCoverStyle","landscape","HomeViewData","main","subtitle","details","HoverBox","navLinkActiveStyle","borderBottom","MyNavLink","NavLink","NavText","NavMenu","to","exact","activeStyle","Component","CreateUser","userData","ModifyUser","GetUser","GetUserProjects","RegisterUserForm","userRequest","setUserRequest","modifying","defaultValue","email","paddingLeft","AppHeader","render","history","Helmet","path","endsWith","getHeadTitle","pathname","SignInButton","loggedIn","setLoggedIn","discordUser","setDiscordUser","setUser","userAvatar","setUserAvatar","joinServerAlertHidden","setJoinServerAlertHidden","registerUserShown","setRegisterUserShown","editProfileShown","setEditProfileShown","policyConfirmationShown","setPolicyConfirmationShown","avatarUrl","setupLoggedInUser","LoggedInButtonDropdownItems","onItemClick","ev","item","LogOut","useTargetWidth","items","reload","normal","modalProps","isBlocking","DialogFooter","long","border","menuProps","Persona","size","PersonaSize","size40","imageUrl","showCloseButton","ReviewType","PaddedProjectHolder","Launch","launchProjects","setLaunchProjects","LaunchViewData","Signin","authResponse","URL","searchParams","get","atob","showRedirectLink","setShowRedirectLink","timer","clearTimeout","Label","ariaLive","visibility","CreateProjectForm","verified","setVerified","codeVerificationDisplayed","setCodeVerificationDisplayed","manualReviewMessageShown","setManualReviewMessageShown","setProjectData","projectDetails","ProjectCodeVerifier","VerficationState","storeIdTeachingBubbleTarget","setStoreIdTeachingBubbleTarget","setStoreId","verificationCodeText","setVerificationCodeText","PreInit","verificationState","setVerificationState","errorMessage","setErrorMessage","BeginVerification","validateStoreIdField","WaitingForCode","response","console","checkVerification","Verified","hideStoreIdTeachingBubbleTimeout","tick","onTimeout","init","clear","cleared","showStoreIdTeachingButton","event","nativeEvent","hideStoreIdTeachingButton","onStoreIDTextFieldKeyPress","onVerificationCodeTextFieldKeyPress","TeachingBubble","calloutProps","directionalHintFixed","directionalHint","DirectionalHint","topAutoEdge","onMouseLeave","onMouseOver","grow","onKeyPress","field","ProjectReviewPanel","proj","ManualReview","DashboardHeader","header","Dashboard","welcomeMessage","setWelcomeMessage","userIcon","setUserIcon","roles","setRoles","appRegistrationShown","setAppRegistrationShown","devRegistrationShown","setDevRegistrationShown","apps","setApps","getUserApps","projects","userRoles","PersonaDark","DashboardColumnFiller","large","primaryText","marginLeft","textDecoration","Icon","userSelect","paddingBottom","justifyContent","itemContainer","NotFound","renderers","heading","level","1","2","3","headerType","as","getMarkdown","memoize","markdown","createMarkdownPage","filename","default","verticalFill","source","library","add","fab","faDiscord","faMedium","faGithub","fas","faGlobe","faArrowCircleDown","AppHeaderWithRouter","withRouter","PrivacyPolicy","dynamicImport","LoadableComponent","loadable","memo","PrerenderedComponent","live","load","prerenderedLoader","App","basename","component","initializeIcons","rootElement","document","getElementById","hasChildNodes","hydrate"],"mappings":"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","file":"static/js/main.2e73fbc1.chunk.js","sourcesContent":["import { isLocalhost } from \"./helpers\";\r\n\r\nexport const Links = {\r\n  thisSiteRepo: \"https://github.com/UWPCommunity/uwpcommunity.github.io/\",\r\n  launch2019Medium: \"https://medium.com/@Arlodottxt/launch-2019-7efd37cc0877\",\r\n  launch2020Medium: \"https://medium.com/@Arlodottxt/uwp-community-launch-2020-1772efb1e382\",\r\n  discordServerInvite: \"https://discord.gg/eBHZSKG\",\r\n  githubOrganization: \"https://github.com/UWPCommunity/\"\r\n};\r\n\r\nexport const Images = {\r\n  discordChatExample: \"/assets/img/discordchatexample.jpg\",\r\n  githubOrgScreenshot: \"/assets/img/githuborgscreenshot.jpg\",\r\n  launchHeroImage: \"/assets/img/LaunchHero.jpg\",\r\n  launchHeroImageHD: \"/assets/img/LaunchHeroHD.jpg\",\r\n  launchAppsHero: \"/assets/img/LaunchAppsHero.png\",\r\n\r\n  uwpCommunityLogo: \"/assets/img/uwpCommunityLogo.png\",\r\n  Badges: {\r\n    msstore: \"/assets/img/msstoreBadge.svg\",\r\n    github: \"/assets/img/githubBadge.svg\",\r\n    discord: \"/assets/img/discordBadge.svg\"\r\n  }\r\n};\r\n\r\nexport const MicrosoftStoreAppCategories = [\r\n  \"Books & reference\",\r\n  \"Business\",\r\n  \"Developer tools\",\r\n  \"Education\",\r\n  \"Entertainment\",\r\n  \"Food & dining\",\r\n  \"Government & politics\",\r\n  \"Kids & family\",\r\n  \"Lifestyle\",\r\n  \"Medical\",\r\n  \"Multimedia design\",\r\n  \"Music\",\r\n  \"Navigation & maps\",\r\n  \"News & weather\",\r\n  \"Personal finance\",\r\n  \"Personalization\",\r\n  \"Photo & video\",\r\n  \"Productivity\",\r\n  \"Security\",\r\n  \"Shopping\",\r\n  \"Social\",\r\n  \"Sports\",\r\n  \"Travel\",\r\n  \"Utilities & tools\"\r\n];\r\n\r\nexport function getBackendHost(): string {\r\n  return isLocalhost ? \"localhost:5000\" : \"uwpcommunity-site-backend.herokuapp.com\"\r\n}","import { getBackendHost } from \"../const\";\r\nimport { isLocalhost, fetchBackend } from \"../helpers\";\r\n\r\nexport const uwpCommunityGuildId = 372137812037730304;\r\nexport const developerRoleId = 372142246625017871;\r\n\r\nexport const discordAuthEndpoint = (\r\n    window.location.host.includes(\"localhost\") ?\r\n        `https://discordapp.com/api/oauth2/authorize?client_id=611491369470525463&redirect_uri=http%3A%2F%2Flocalhost%3A5000%2Fsignin%2Fredirect&response_type=code&scope=identify%20guilds`\r\n        :\r\n        `https://discordapp.com/api/oauth2/authorize?client_id=611491369470525463&redirect_uri=http%3A%2F%2Fuwpcommunity-site-backend.herokuapp.com%2Fsignin%2Fredirect&response_type=code&scope=identify%20guilds`\r\n);\r\n\r\nexport const AuthData = {\r\n    Get: GetDiscordAuthData,\r\n    Set: SetDiscordAuthData,\r\n    Clear: ClearDiscordAuthData\r\n};\r\n\r\nexport function GetDiscordAuthData(): IDiscordAuthResponse | undefined {\r\n    const authData = localStorage.getItem(\"discordAuthData\");\r\n    if (!authData) return;\r\n    return JSON.parse(authData);\r\n}\r\n\r\nexport function SetDiscordAuthData(data: IDiscordAuthResponse) {\r\n    if (!data) return;\r\n    localStorage.setItem(\"discordAuthData\", JSON.stringify(data));\r\n}\r\n\r\nexport function ClearDiscordAuthData() {\r\n    localStorage.removeItem(\"discordAuthData\");\r\n}\r\n\r\nexport async function RefreshTokenIfNeeded() {\r\n    const UnixTime: number = Math.round((new Date()).getTime() / 1000);\r\n    let auth = AuthData.Get();\r\n\r\n    if (!auth) return;\r\n\r\n    if (auth.expires_at && auth.expires_at < UnixTime) {\r\n        let refreshData: IDiscordAuthResponse = await (await fetch(`https://${getBackendHost()}/signin/refresh?refreshToken=${auth.refresh_token}`)).json();\r\n\r\n        if (refreshData.expires_in) refreshData.expires_at = UnixTime + refreshData.expires_in;\r\n\r\n        SetDiscordAuthData(refreshData);\r\n    }\r\n}\r\n\r\nexport async function IsUserInServer(): Promise<boolean> {\r\n    await RefreshTokenIfNeeded();\r\n\r\n    const Auth = AuthData.Get();\r\n    if (!Auth) throw new Error(\"No auth data found\");\r\n\r\n    const Req = await fetch(\"https://discordapp.com/api/v6/users/@me/guilds\", {\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + Auth.access_token\r\n        }\r\n    });\r\n    if (Req.status !== 200) return true; // If something goes wrong, give the benefit of the doubt\r\n\r\n    const Response: IDiscordGuild[] = await Req.json();\r\n\r\n    return Response.filter(server => server.id === \"372137812037730304\").length > 0;\r\n}\r\n\r\nexport let CurrentUser: IDiscordUser;\r\nexport async function GetCurrentDiscordUser(): Promise<IDiscordUser | undefined> {\r\n    if (CurrentUser) return CurrentUser;\r\n\r\n    const Auth = AuthData.Get();\r\n    if (!Auth) return;\r\n\r\n    const Req = await fetch(\"https://discordapp.com/api/v6/users/@me\", {\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + Auth.access_token\r\n        }\r\n    });\r\n    if (!Req || Req.status !== 200) return;\r\n\r\n    CurrentUser = await Req.json();\r\n    return CurrentUser;\r\n}\r\n\r\nexport async function GetUserRoles(user?: IDiscordUser): Promise<string[] | undefined> {\r\n    user = user || await GetCurrentDiscordUser();\r\n    if (!user) return;\r\n\r\n    const request = await fetchBackend(`bot/user/${user.id}/roles`, \"GET\");\r\n\r\n    if (request && request.status === 200) {\r\n        const result: IDiscordRoleData[] = await request.json();\r\n\r\n        return result.map(role => role.name);\r\n    }\r\n}\r\n\r\nexport async function GetDiscordUser(discordId: string): Promise<IDiscordUser | undefined> {\r\n    return (await fetchBackend(`bot/user/${discordId}`, \"GET\")).json();\r\n}\r\n\r\nexport async function AssignUserRole(roleName: string, discordId?: string) {\r\n    discordId = discordId || CurrentUser.id;\r\n    if (!discordId) return;\r\n\r\n    return await fetchBackend(`bot/user/${discordId}/roles`, \"PUT\", { role: roleName });\r\n}\r\n\r\nexport async function GetUserAvatar(user?: IDiscordUser): Promise<string | undefined> {\r\n    user = user || await GetCurrentDiscordUser();\r\n    if (!user) return;\r\n    return `https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png`;\r\n}\r\n\r\n/**\r\n * @summary Discord API user object\r\n */\r\nexport interface IDiscordUser {\r\n    /** @summary the user's id */\r\n    id: string;\r\n    /** @summary the user's username, not unique across the platform */\r\n    username: string;\r\n    /** @summary the user's 4-digit discord-tag */\r\n    discriminator: string;\r\n    /** @summary the user's avatar hash */\r\n    avatar: string;\r\n    /** @summary whether the user belongs to an OAuth2 application */\r\n    bot?: boolean;\r\n    /** @summary the user's id */\r\n    mfa_enabled?: boolean;\r\n    /** @summary whether the user has two factor enabled on their account */\r\n    locale?: string;\r\n    /** @summary the user's chosen language option */\r\n    verified?: string;\r\n    /** @summary whether the email on this account has been verified */\r\n    email?: string;\r\n    /** @summary the flags on a user's account */\r\n    flags?: number;\r\n    /** @summary the type of Nitro subscription on a user's account\t */\r\n    premium_type?: number;\r\n}\r\n\r\nexport interface IDiscordRoleData {\r\n    deleted: boolean;\r\n    id: string;\r\n    name: string;\r\n    color: number;\r\n    hoist: boolean;\r\n    position: number;\r\n    permissions: number;\r\n    managed: boolean;\r\n    mentionable: boolean;\r\n}\r\n\r\nexport interface IDiscordGuildMember {\r\n    /** @summary the user this guild member represents */\r\n    user: IDiscordUser;\r\n    /** @summary this users guild nickname (if one is set) */\r\n    nick?: string;\r\n    /** @summary array of role object ids @type Snowflake[] */\r\n    roles: string[];\r\n    /** @summary when the user joined the guild */\r\n    joined_at: string;\r\n    /** @summary when the user used their Nitro boost on the server */\r\n    premium_since?: string;\r\n    /** @summary whether the user is deafened in voice channels */\r\n    deaf: boolean;\r\n    /** @summary whether the user is muted in voice channels */\r\n    mute: boolean;\r\n};\r\n\r\nexport interface IDiscordGuild {\r\n    \"owner\": boolean,\r\n    \"permissions\": number,\r\n    \"icon\": string,\r\n    \"id\": string,\r\n    \"name\": string;\r\n}\r\n\r\nexport interface IDiscordAuthResponse {\r\n    \"access_token\": string;\r\n    \"token_type\": \"Bearer\";\r\n    \"expires_in\": number;\r\n    \"expires_at\"?: number;\r\n    \"refresh_token\": string;\r\n    \"scope\": string;\r\n}","import { AuthData } from \"./services/discord\";\r\nimport { getBackendHost } from \"./const\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const getStoreUrl = (id: string) => {\r\n    return `https://www.microsoft.com/store/apps/${id}`;\r\n}\r\n\r\nexport const getGithubUrl = (id: string) => {\r\n    return `https://www.github.com/${id}`;\r\n}\r\n\r\nexport const getDiscordUrl = (id: string) => {\r\n    return `https://www.discord.gg/${id}`;\r\n}\r\n\r\nexport const getHeadTitle = (path: string) => {\r\n    let title = \"UWP Community\"\r\n    if (path.endsWith(\"/\")) {\r\n        path = path.slice(0, path.length - 1)\r\n    }\r\n    switch (path) {\r\n        case \"\":\r\n            title = title + \" // Home\"\r\n            break;\r\n        case \"/projects\":\r\n            title = title + \" // Projects\"\r\n            break;\r\n        case \"/launch\":\r\n            title = title + \" // Launch\"\r\n            break;\r\n        case \"/dashboard\":\r\n            title = title + \" // Dashboard\"\r\n            break;\r\n        case \"/signin\":\r\n            title = title + \" // Sign in\"\r\n            break;\r\n        default:\r\n            title = title + \" // 404\"\r\n            break;\r\n    }\r\n    return title\r\n}\r\nexport const isLocalhost = window.location.host.includes(\"localhost\") || navigator.userAgent.includes(\"ReactSnap\");\r\n\r\nexport const isReactSnap = navigator.userAgent.includes(\"ReactSnap\");\r\n\r\nexport async function fetchBackend(route: string, method: (\"GET\" | \"POST\" | \"PUT\" | \"DELETE\"), requestBody?: any): Promise<Response> {\r\n    let headers: string[][] = [[\"Content-Type\", \"application/json\"]];\r\n\r\n    let authData = await AuthData.Get();\r\n    if (authData) headers.push([\"authorization\", authData.access_token])\r\n\r\n    let protocol = isLocalhost ? \"http\" : \"https\";\r\n    let url = `${protocol}://${getBackendHost()}/${route}`;\r\n\r\n    return await fetch(url, {\r\n        headers: headers,\r\n        method: method,\r\n        body: JSON.stringify(requestBody)\r\n    });\r\n}\r\n\r\n\r\nexport interface IUsePromiseState<T> {\r\n    results?: T\r\n    error?: Error\r\n    isLoading: boolean\r\n}\r\n\r\nexport function usePromise<T>(promise?: (Promise<T>)): IUsePromiseState<T> {\r\n    const [visualState, setVisualState] = useState<IUsePromiseState<T>>({ isLoading: true });\r\n\r\n    useEffect(() => {\r\n        if (promise && !visualState.results) promise.then(results => {\r\n            setVisualState(prevState => ({ ...prevState, isLoading: false, results }));\r\n        }).catch(error => {\r\n            setVisualState(prevState => ({ ...prevState, isLoading: false, error }));\r\n        });\r\n    }, [visualState, promise]);\r\n\r\n    return visualState;\r\n};\r\n\r\n/**\r\n * @summary Get the first matching regex group, instead of an array with the full string and all matches\r\n * @param {string} toMatch  \r\n * @param {regex} regex \r\n * @returns {string} First matching regex group\r\n */\r\nexport function match(toMatch: string, regex: RegExp) {\r\n    let m = regex.exec(toMatch);\r\n    return (m && m[1]) ? m[1] : undefined;\r\n}\r\nexport function ObjectToPathQuery(data: object) {\r\n    let queryString: string = \"\";\r\n    for (let [key, value] of Object.entries(data)) {\r\n        queryString += `${key}=${value}&`;\r\n    }\r\n    // If the last character is an \"&\", remove it\r\n    if (queryString.charAt(queryString.length - 1) === \"&\") queryString = queryString.slice(0, -1);\r\n    return queryString;\r\n}\r\n\r\nexport default {\r\n    getDiscordUrl, getGithubUrl, getStoreUrl\r\n}","import { IUser } from \"./users\";\r\nimport { fetchBackend, ObjectToPathQuery, match } from \"../helpers\";\r\n\r\nexport async function CreateProject(projectData: ICreateProjectsRequestBody): Promise<Response> {\r\n    // Reformat microsoft store links to an international format\r\n    if (projectData.downloadLink) {\r\n        const storeId = match(projectData.downloadLink, /http.*microsoft\\..*([\\w\\d]{12})[/|?]?/);\r\n        if (storeId) {\r\n            projectData.downloadLink = `https://www.microsoft.com/store/apps/${storeId}`;\r\n        }\r\n    }\r\n    return await fetchBackend(\"projects\", \"POST\", projectData);\r\n}\r\nexport interface ICreateProjectsRequestBody {\r\n    role: \"Developer\" | \"Other\"; // Only a developer or \"Other\" (manager, etc) can create a new project\r\n    appName: string;\r\n    category: string;\r\n    description: string;\r\n    isPrivate: boolean;\r\n    downloadLink?: string;\r\n    githubLink?: string;\r\n    externalLink?: string;\r\n    launchYear: number;\r\n    awaitingLaunchApproval: boolean;\r\n    needsManualReview: boolean;\r\n    heroImage: string;\r\n    lookingForRoles: string[];\r\n}\r\n\r\n\r\nexport async function ModifyProject(projectData: IModifyProjectsRequestBody, queryData: IModifyProjectRequestQuery) {\r\n    // Reformat microsoft store links to an international format\r\n    if (projectData.downloadLink) {\r\n        const storeId = match(projectData.downloadLink, /http.*microsoft\\..*([\\w\\d]{12})[/|?]?/);\r\n        if (storeId) {\r\n            projectData.downloadLink = `https://www.microsoft.com/store/apps/${storeId}`;\r\n        }\r\n    }\r\n\r\n    return await fetchBackend(`projects?${ObjectToPathQuery(queryData)}`, \"PUT\", projectData);\r\n}\r\n\r\nexport async function DeleteProject(bodyData: IDeleteProjectRequestBody) {\r\n    return await fetchBackend(`projects`, \"DELETE\", bodyData);\r\n}\r\n\r\nexport async function GetAllProjects(): Promise<IProject[]> {\r\n    return (await fetchBackend(`projects`, \"GET\")).json();\r\n}\r\n\r\nexport async function GetAllProjects_Unfiltered(): Promise<IProject[]> {\r\n    return (await fetchBackend(`projects?all=true`, \"GET\")).json();\r\n}\r\n\r\nexport async function GetLaunchProjects(year: number): Promise<IProject[]> {\r\n    return (await (await fetchBackend(`projects`, \"GET\")).json()).filter((project: IProject) => project.launchYear === year && project.awaitingLaunchApproval === false);\r\n}\r\n\r\nexport interface IModifyProjectsRequestBody {\r\n    appName: string;\r\n    description?: string;\r\n    isPrivate: boolean;\r\n\r\n    downloadLink?: string;\r\n    githubLink?: string;\r\n    externalLink?: string;\r\n\r\n    heroImage: string;\r\n    awaitingLaunchApproval: boolean;\r\n    needsManualReview: boolean;\r\n    lookingForRoles?: string[];\r\n    launchYear?: number;\r\n    category?: string;\r\n}\r\n\r\nexport interface IModifyProjectRequestQuery {\r\n    /** @summary The app name that's being modified */\r\n    appName: string;\r\n}\r\n\r\nexport interface IDeleteProjectRequestBody {\r\n    /** @summary The app name that's being deleted */\r\n    appName: string;\r\n}\r\n\r\nexport interface IProjectCollaborator extends IUser {\r\n    role: \"Developer\" | \"Translator\" | \"Beta Tester\" | \"Other\";\r\n    isOwner: boolean;\r\n}\r\nexport interface IProject {\r\n    id?: number;\r\n\r\n    appName: string;\r\n    description: string;\r\n    isPrivate: boolean;\r\n    downloadLink?: string;\r\n    githubLink?: string;\r\n    externalLink?: string;\r\n\r\n    heroImage: string;\r\n\r\n    awaitingLaunchApproval: boolean;\r\n    needsManualReview: boolean;\r\n    lookingForRoles?: string[];\r\n\r\n    collaborators: IProjectCollaborator[];\r\n\r\n    launchYear?: number;\r\n    category?: string;\r\n};\r\n","import { IProject, DeleteProject, ModifyProject, IModifyProjectsRequestBody, IProjectCollaborator } from \"../common/services/projects\";\r\nimport { DocumentCard, ImageFit, DocumentCardDetails, DocumentCardTitle, Text, Stack, DocumentCardActions, IButtonProps, PrimaryButton, Dialog, FontIcon, DefaultButton, DialogType, TooltipHost, TooltipDelay, Modal, Image, Link } from \"office-ui-fabric-react\";\r\nimport * as React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { EditProjectDetailsForm } from \"./forms/EditProjectDetailsForm\";\r\nimport { IDiscordUser, GetDiscordUser, AssignUserRole } from \"../common/services/discord\";\r\nimport styled from \"styled-components\";\r\n\r\nenum ButtonType {\r\n  Github, Download, External\r\n}\r\n\r\ninterface ICustomButtonRenderProps {\r\n  type: ButtonType;\r\n  link: string;\r\n}\r\nconst FaIconStyle: React.CSSProperties = {\r\n  color: \"black\",\r\n  height: \"25px\",\r\n  width: \"25px\"\r\n};\r\n\r\nconst PointerOnHover = styled.span`\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport interface IProjectCard {\r\n  project: IProject;\r\n  editable?: boolean;\r\n  onProjectRemove?: (project: IProject) => void;\r\n  modOptions?: boolean;\r\n}\r\n\r\nexport const ProjectCard = (props: IProjectCard) => {\r\n  const [projectCardActions, setProjectCardActions] = React.useState<IButtonProps[]>([]);\r\n  const [showEditDialog, setShowEditDialog] = React.useState<boolean>(false);\r\n  const [showDeleteProjectDialog, setShowDeleteProjectDialog] = React.useState(false);\r\n\r\n  const [showManualApproveProjectDialog, setShowManualApproveProjectDialog] = React.useState(false);\r\n  const [showManualApproveProjectDialogErrorMessage, setShowManualApproveProjectDialogErrorMessage] = React.useState<string>(\"\");\r\n\r\n  const [showLaunchApprovalDialog, setShowLaunchApprovalDialog] = React.useState(false);\r\n  const [showLaunchApproveProjectDialogErrorMessage, setShowLaunchApproveProjectDialogErrorMessage] = React.useState<string>(\"\");\r\n\r\n  const [showProjectDetailsModal, setShowProjectDetailsModal] = React.useState(false);\r\n\r\n  const [ViewModel, setProjectViewModel] = React.useState<IProject>(props.project);\r\n  const [projectOwner, setProjectOwner] = React.useState<IDiscordUser>();\r\n\r\n  React.useEffect(() => {\r\n    const projectCardsData: IButtonProps[] = [];\r\n\r\n    if (ViewModel.downloadLink) {\r\n      projectCardsData.push({\r\n        data: {\r\n          type: ButtonType.Download,\r\n          link: ViewModel.downloadLink\r\n        },\r\n        href: ViewModel.downloadLink,\r\n        target: \"_blank\",\r\n        onRenderIcon: onRenderIcon\r\n      });\r\n    }\r\n\r\n    if (ViewModel.githubLink) {\r\n      projectCardsData.push({\r\n        data: {\r\n          type: ButtonType.Github,\r\n          link: ViewModel.githubLink\r\n        },\r\n        href: ViewModel.githubLink,\r\n        target: \"_blank\",\r\n        onRenderIcon: onRenderIcon\r\n      });\r\n    }\r\n\r\n    if (ViewModel.externalLink) {\r\n      projectCardsData.push({\r\n        data: {\r\n          type: ButtonType.External,\r\n          link: ViewModel.externalLink\r\n        },\r\n        href: ViewModel.externalLink,\r\n        target: \"_blank\",\r\n        onRenderIcon: onRenderIcon\r\n      });\r\n    }\r\n\r\n    setProjectCardActions(projectCardsData);\r\n\r\n  }, [ViewModel.githubLink, ViewModel.externalLink, ViewModel.downloadLink]);\r\n\r\n  function onRenderIcon(buttonProps: IButtonProps | undefined) {\r\n    if (!buttonProps) return null;\r\n    const buttonData: ICustomButtonRenderProps = buttonProps.data;\r\n    if (!buttonData.link) return null;\r\n\r\n    switch (buttonData.type.valueOf()) {\r\n      case ButtonType.Download:\r\n        if (buttonData.link && buttonData.link.includes(\"microsoft.com\")) {\r\n          return <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"microsoft\"]} />\r\n        } else {\r\n          return <FontAwesomeIcon style={FaIconStyle} icon=\"arrow-circle-down\" />\r\n        }\r\n      case ButtonType.External:\r\n        return <FontAwesomeIcon style={FaIconStyle} icon={[\"fas\", \"globe\"]} />\r\n      case ButtonType.Github:\r\n        return <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"github\"]} />\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  async function ManuallyApproveProject() {\r\n    const data: IModifyProjectsRequestBody = {\r\n      needsManualReview: false,\r\n      appName: ViewModel.appName,\r\n      description: ViewModel.description,\r\n      heroImage: ViewModel.heroImage,\r\n      awaitingLaunchApproval: ViewModel.awaitingLaunchApproval,\r\n      isPrivate: ViewModel.isPrivate\r\n    };\r\n    setProjectViewModel({ ...ViewModel, ...data });\r\n\r\n    const req = await ModifyProject(data, { appName: ViewModel.appName });\r\n    if (req.status !== 200) {\r\n      setShowManualApproveProjectDialogErrorMessage((await req.json()).reason);\r\n    } else {\r\n      setShowManualApproveProjectDialog(false);\r\n    }\r\n  }\r\n\r\n  async function ApproveLaunchSubmission(launchYear: number) {\r\n    const data: IModifyProjectsRequestBody = {\r\n      appName: ViewModel.appName,\r\n      description: ViewModel.description,\r\n      needsManualReview: ViewModel.needsManualReview,\r\n      isPrivate: ViewModel.isPrivate,\r\n      heroImage: ViewModel.heroImage,\r\n      awaitingLaunchApproval: false,\r\n      launchYear\r\n    };\r\n    setProjectViewModel({ ...ViewModel, ...data });\r\n\r\n    const req = await ModifyProject(data, { appName: ViewModel.appName });\r\n    if (req.status !== 200) {\r\n      setShowLaunchApproveProjectDialogErrorMessage((await req.json()).reason);\r\n    } else {\r\n      await AssignLaunchParticipantRole(ViewModel.collaborators.filter(p => p.isOwner)[0]);\r\n      setShowLaunchApprovalDialog(false);\r\n    }\r\n  }\r\n\r\n  async function AssignLaunchParticipantRole(user: IProjectCollaborator) {\r\n    const roleAssignReq = await AssignUserRole(\"Launch Participant\", user.discordId);\r\n    if (roleAssignReq && roleAssignReq.ok === false) {\r\n      setShowLaunchApproveProjectDialogErrorMessage(`Project was approved, but the user couldn't be assigned the Launch Participant role. (Error: ${(await roleAssignReq.json()).reason})`);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DocumentCard style={{ width: 275 }}>\r\n\r\n      <Modal styles={{ root: { maxWidth: \"100vw\" } }} onDismiss={() => setShowProjectDetailsModal(false)} isOpen={showProjectDetailsModal}>\r\n        <Stack>\r\n          <Stack tokens={{ padding: \"7px 10px\" }}>\r\n            <Stack horizontal horizontalAlign=\"space-between\" style={{ padding: \"0px 0px 2px 0px\", marginBottom: \"10px\" }}>\r\n              <Text variant=\"xxLarge\" style={{ fontWeight: 400 }}>{ViewModel.appName}</Text>\r\n\r\n              <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                {projectOwner ?\r\n                  (<>\r\n                    <Text variant=\"smallPlus\">{ViewModel.collaborators.filter(i => i.isOwner)[0].name}</Text>\r\n                    <Text> | </Text>\r\n                    <Text variant=\"smallPlus\">{projectOwner.username}#{projectOwner.discriminator}</Text>\r\n                  </>) : <>No owner data</>}\r\n                <Link style={{ margin: 10 }} onClick={() => setShowProjectDetailsModal(false)}>\r\n                  <FontIcon style={{ fontSize: 16, color: \"black\" }} iconName=\"ChromeClose\" />\r\n                </Link>\r\n              </Stack>\r\n            </Stack>\r\n\r\n            <Text style={{ maxWidth: 1190 }} variant=\"medium\">{ViewModel.description}</Text>\r\n\r\n          </Stack>\r\n          <div>\r\n            <Image style={{ borderTop: \"2px solid midnightblue\", width: \"auto\" }} width={1200} height={675} src={ViewModel.heroImage} imageFit={ImageFit.contain} />\r\n          </div>\r\n        </Stack>\r\n      </Modal>\r\n\r\n      <Dialog hidden={!showEditDialog} title={`Edit ${ViewModel.appName}`}\r\n        dialogContentProps={{\r\n          styles: { title: { padding: \"16px 16px 5px 24px\", margin: 0 } },\r\n          type: DialogType.largeHeader\r\n        }}\r\n        onDismiss={() => {\r\n          setShowEditDialog(false)\r\n        }}>\r\n        <EditProjectDetailsForm editing projectData={ViewModel} onSuccess={(updatedProject) => {\r\n          setShowEditDialog(false);\r\n          if (updatedProject) setProjectViewModel(updatedProject);\r\n        }} />\r\n      </Dialog>\r\n\r\n      <Dialog hidden={!showDeleteProjectDialog}\r\n        dialogContentProps={{\r\n          styles: { title: { padding: \"16px 16px 8px 24px\", fontSize: 20 }, subText: { fontSize: 16 } },\r\n          type: DialogType.largeHeader,\r\n          title: `Are you sure?`,\r\n          subText: `This action can't be undone`\r\n        }}\r\n        onDismiss={() => { setShowDeleteProjectDialog(false) }}>\r\n        <Stack horizontal tokens={{ childrenGap: 7 }}>\r\n          <DefaultButton style={{ backgroundColor: \"#cc0000\", color: \"#fff\", borderColor: \"#cc0000\" }} text={`Yes, delete`}\r\n            onClick={async () => {\r\n              await DeleteProject({ appName: ViewModel.appName });\r\n              setShowDeleteProjectDialog(false);\r\n              if (props.onProjectRemove) props.onProjectRemove(ViewModel);\r\n            }} />\r\n          <PrimaryButton onClick={() => { setShowDeleteProjectDialog(false); }} text=\"Cancel\" />\r\n        </Stack>\r\n      </Dialog>\r\n\r\n      <Dialog hidden={!showManualApproveProjectDialog}\r\n        dialogContentProps={{\r\n          styles: { title: { padding: \"16px 16px 8px 24px\", fontSize: 20 }, subText: { fontSize: 16 } },\r\n          type: DialogType.largeHeader,\r\n          title: `Approve this project?`,\r\n          subText: projectOwner ? `${ViewModel.appName} belongs to ${projectOwner.username}#${projectOwner.discriminator}` : \"Project owner info not avilable\"\r\n        }}\r\n        onDismiss={() => { setShowManualApproveProjectDialog(false) }}>\r\n        <Stack>\r\n          <Text style={{ color: \"red\" }}>{showManualApproveProjectDialogErrorMessage}</Text>\r\n          <Stack horizontal tokens={{ childrenGap: 7 }}>\r\n            <PrimaryButton text={`Confirm`}\r\n              onClick={async () => {\r\n                await ManuallyApproveProject();\r\n              }} />\r\n            <DefaultButton onClick={() => { setShowManualApproveProjectDialog(false); }} text=\"Cancel\" />\r\n          </Stack>\r\n        </Stack>\r\n      </Dialog>\r\n\r\n      <Dialog hidden={!showLaunchApprovalDialog}\r\n        dialogContentProps={{\r\n          styles: { title: { padding: \"16px 16px 8px 24px\", fontSize: 20 }, subText: { fontSize: 16 } },\r\n          type: DialogType.largeHeader,\r\n          title: `Approve launch submission?`,\r\n          subText: projectOwner ?\r\n            `${ViewModel.appName} belongs to ${projectOwner.username}#${projectOwner.discriminator}. Follow up with them to ensure the project is eligible for the Launch event` : \"Project owner info not avilable\"\r\n        }}\r\n        onDismiss={() => { setShowLaunchApprovalDialog(false) }}>\r\n        <Stack>\r\n          <Text style={{ color: \"red\" }}>{showLaunchApproveProjectDialogErrorMessage}</Text>\r\n          <Stack horizontal tokens={{ childrenGap: 7 }}>\r\n            <PrimaryButton text={`Confirm`}\r\n              onClick={async () => {\r\n                await ApproveLaunchSubmission(2020);\r\n              }} />\r\n            <DefaultButton onClick={() => { setShowLaunchApprovalDialog(false); }} text=\"Cancel\" />\r\n          </Stack>\r\n        </Stack>\r\n      </Dialog>\r\n\r\n      <PointerOnHover>\r\n        <Image onClick={() => {\r\n          GetDiscordUser(ViewModel.collaborators.filter(collaborator => collaborator.isOwner)[0].discordId)\r\n            .then(owner => {\r\n              setProjectOwner(owner);\r\n              setShowProjectDetailsModal(true)\r\n            });\r\n        }}\r\n          height={150} imageFit={ImageFit.centerCover} src={ViewModel.heroImage} />\r\n      </PointerOnHover>\r\n\r\n      <DocumentCardDetails>\r\n        <Stack horizontal tokens={{ padding: 5 }} verticalAlign=\"center\">\r\n          {ViewModel.needsManualReview ?\r\n            <TooltipHost content=\"Waiting for approval\" delay={TooltipDelay.zero}>\r\n              <FontIcon style={{ fontSize: 26, padding: \"0px 5px\" }} iconName=\"Manufacturing\" />\r\n            </TooltipHost>\r\n            : <></>}\r\n          {(ViewModel.awaitingLaunchApproval && props.modOptions) || ViewModel.launchYear ?\r\n            <TooltipHost content={ViewModel.launchYear ? `Launch ${ViewModel.launchYear} participant` : \"Awaiting Launch approval\"} delay={TooltipDelay.zero}>\r\n              <FontIcon style={{ fontSize: 24, padding: \"0px 5px\" }} iconName=\"Rocket\" />\r\n            </TooltipHost>\r\n            : <></>}\r\n          <DocumentCardTitle styles={{ root: { padding: \"5px 5px\", height: \"auto\", fontWeight: 600 } }} title={ViewModel.appName} />\r\n        </Stack>\r\n        <Stack tokens={{ padding: \"0px 10px 10px 10px\" }}>\r\n          <Text style={{ overflowY: \"auto\", height: 60 }}>{ViewModel.description}</Text>\r\n        </Stack>\r\n        <Stack horizontal tokens={{ childrenGap: 5, padding: 5 }} verticalAlign=\"center\">\r\n          {props.editable !== undefined ? (<>\r\n            <PrimaryButton iconProps={{ iconName: \"edit\", style: { fontSize: 18 } }} style={{ minWidth: 45, padding: 0 }} onClick={() => { setShowEditDialog(true) }} />\r\n            <PrimaryButton iconProps={{ iconName: \"delete\", style: { fontSize: 18 } }} style={{ minWidth: 45, padding: 0 }} onClick={() => { setShowDeleteProjectDialog(true) }} />\r\n          </>) : <></>}\r\n\r\n          {props.modOptions !== undefined && ViewModel.needsManualReview ? (<>\r\n            <PrimaryButton iconProps={{ iconName: \"Ferry\", style: { fontSize: 20 } }} style={{ minWidth: 35, padding: 0 }} onClick={() => {\r\n              GetDiscordUser(ViewModel.collaborators.filter(collaborator => collaborator.isOwner)[0].discordId)\r\n                .then(owner => {\r\n                  setProjectOwner(owner);\r\n                  setShowManualApproveProjectDialog(true);\r\n                });\r\n            }} />\r\n          </>) : <></>}\r\n\r\n          {props.modOptions !== undefined && ViewModel.awaitingLaunchApproval && !ViewModel.needsManualReview ? (<>\r\n            <PrimaryButton iconProps={{ iconName: \"Rocket\", style: { fontSize: 20 } }} style={{ minWidth: 35, padding: 0 }} onClick={() => {\r\n              GetDiscordUser(ViewModel.collaborators.filter(collaborator => collaborator.isOwner)[0].discordId)\r\n                .then(owner => {\r\n                  setProjectOwner(owner);\r\n                  setShowLaunchApprovalDialog(true);\r\n                });\r\n            }} />\r\n          </>) : <></>}\r\n\r\n          <DocumentCardActions styles={{ root: { padding: 0 } }} actions={projectCardActions} />\r\n        </Stack>\r\n      </DocumentCardDetails>\r\n    </DocumentCard>\r\n  )\r\n}\r\n","import { Text, Stack, PrimaryButton, Checkbox, TextField, DefaultButton, IComboBoxOption, ComboBox, Pivot, PivotItem, IComboBox } from \"office-ui-fabric-react\";\r\nimport React, { FormEvent } from \"react\";\r\nimport { IBackendReponseError } from \"../../common/interfaces\";\r\nimport { CreateProject, ICreateProjectsRequestBody, IProject, ModifyProject, IModifyProjectsRequestBody } from \"../../common/services/projects\";\r\nimport { MicrosoftStoreAppCategories } from \"../../common/const\";\r\n\r\nexport interface IEditProjectDetailsFormProps {\r\n    onCancel?: Function;\r\n    onSuccess: (updatedProject?: IProject) => void;\r\n    projectData: Partial<IProject>;\r\n    editing?: boolean;\r\n};\r\n\r\n/* const roleOptions: IComboBoxOption[] = [\r\n    { key: 1, text: 'Developer', selected: true },\r\n    { key: 2, text: 'Beta tester' },\r\n    { key: 3, text: 'Translator' },\r\n    { key: 4, text: 'Other' }\r\n]; */\r\n\r\nconst categoryOptions: IComboBoxOption[] = MicrosoftStoreAppCategories.map((category, index) => {\r\n    return { key: category, text: category }\r\n});\r\n\r\nexport const EditProjectDetailsForm = (props: IEditProjectDetailsFormProps) => {\r\n    let [projectRequest, setProjectRequest] = React.useState<Partial<ICreateProjectsRequestBody>>({\r\n        isPrivate: false, awaitingLaunchApproval: false, role: \"Developer\", ...props.projectData\r\n    });\r\n\r\n    let [submissionError, setSubmissionError] = React.useState<string>(\"\");\r\n    let [showSuccessIndicator, setShowSuccessIndicator] = React.useState(false);\r\n\r\n    async function submitParticipantRequest() {\r\n        let request;\r\n        if (props.editing) {\r\n            if (!props.projectData.appName) {\r\n                throw new Error(\"Unable to modify project details. Missing app name prop\");\r\n            }\r\n            request = await ModifyProject(projectRequest as IModifyProjectsRequestBody, { appName: props.projectData.appName });\r\n        } else {\r\n            request = await CreateProject(projectRequest as ICreateProjectsRequestBody);\r\n        }\r\n\r\n        let success = request.status === 200;\r\n\r\n        if (!success) {\r\n            let error: IBackendReponseError = await request.json();\r\n            if (error.error && error.reason) {\r\n                setSubmissionError(error.reason);\r\n            }\r\n        } else {\r\n            setShowSuccessIndicator(true);\r\n            setTimeout(() => {\r\n                // TODO. Make a new request to get new project details, the below only is only a temporary solution\r\n                props.onSuccess(projectRequest as IProject);\r\n            }, 2500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stack horizontalAlign=\"center\">\r\n            {/* Need to toggle both src and display so it trigger the animation, and space is taken up during the transition (while the svg loads) */}\r\n            <img style={{ display: (showSuccessIndicator ? \"block\" : \"none\"), height: \"200px\" }} src={showSuccessIndicator ? \"/assets/img/checkanimated.svg\" : \"\"} alt=\"Check\" />\r\n            <Stack horizontalAlign=\"start\" tokens={{ childrenGap: 10 }} style={{ maxWidth: \"100%\", width: \"300px\", display: (!showSuccessIndicator ? \"block\" : \"none\") }}>\r\n                <Pivot>\r\n                    <PivotItem headerText=\"Basic info\">\r\n                        <Stack tokens={{ childrenGap: 10 }}>\r\n                            <TextField label=\"Project name:\" maxLength={75}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                value={projectRequest.appName}\r\n                                required onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, appName: value })} />\r\n\r\n                            <TextField label=\"Description\" maxLength={240}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                multiline required autoAdjustHeight\r\n                                value={projectRequest.description}\r\n                                placeholder=\"Enter a brief description\"\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, description: value })} />\r\n\r\n                            <TextField label=\"Hero image\"\r\n                                type=\"url\"\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                required\r\n                                value={projectRequest.heroImage}\r\n                                placeholder=\"External link to an image of your app\"\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, heroImage: value })} />\r\n                        </Stack>\r\n                    </PivotItem>\r\n                    <PivotItem headerText=\"Project links\">\r\n                        <Stack tokens={{ childrenGap: 10 }}>\r\n                            <TextField label=\"Download Link:\"\r\n                                value={projectRequest.downloadLink}\r\n                                disabled={!props.editing && props.projectData.downloadLink !== undefined}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, downloadLink: value })} />\r\n\r\n                            <TextField label=\"Github Link:\"\r\n                                value={projectRequest.githubLink}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, githubLink: value })} />\r\n\r\n                            <TextField label=\"External link\"\r\n                                value={projectRequest.externalLink}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, externalLink: value })} />\r\n\r\n                        </Stack>\r\n                    </PivotItem>\r\n                    <PivotItem headerText=\"More info\">\r\n                        <Stack tokens={{ childrenGap: 10 }}>\r\n                            <ComboBox\r\n                                label=\"Category\"\r\n                                options={categoryOptions}\r\n                                defaultSelectedKey={projectRequest.category || categoryOptions[0].key}\r\n                                onChange={(e: FormEvent<IComboBox>, option: IComboBoxOption | undefined) => {\r\n                                    if (!option) return;\r\n                                    setProjectRequest({ ...projectRequest, category: option.text });\r\n                                }} />\r\n\r\n                            <Checkbox label=\"Project is private/secret\"\r\n                                checked={projectRequest.isPrivate}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, isPrivate: value })} />\r\n\r\n                            <Checkbox label=\"Partipation in Launch 2020\"\r\n                                disabled\r\n                                checked={projectRequest.awaitingLaunchApproval}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, awaitingLaunchApproval: value })} />\r\n\r\n                            <Text style={{ display: projectRequest.awaitingLaunchApproval ? \"block\" : \"none\" }}>A moderator will contact you over Discord to help with the manual review process for Launch 2020</Text>\r\n                        </Stack>\r\n                    </PivotItem>\r\n                </Pivot>\r\n\r\n                <Text style={{ color: \"red\" }}>{submissionError}</Text>\r\n                <Stack horizontal tokens={{ childrenGap: 10 }} horizontalAlign=\"space-evenly\" style={{ marginTop: 20 }}>\r\n                    {\r\n                        props.onCancel ?\r\n                            <DefaultButton text=\"Cancel\" onClick={() => props.onCancel ? props.onCancel() : undefined} />\r\n                            : \"\"\r\n                    }\r\n                    <PrimaryButton text={props.editing ? \"Update\" : \"Register\"} onClick={submitParticipantRequest} />\r\n                </Stack>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n};","import * as React from \"react\";\r\nimport { Stack, Spinner, FontIcon, Text } from \"office-ui-fabric-react\";\r\nimport { usePromise } from \"../common/helpers\";\r\n\r\ninterface IPromiseVisualizerProps<T> {\r\n    loadingMessage?: string\r\n    loadingStyle?: React.CSSProperties\r\n    errorStyle?: React.CSSProperties\r\n    onResolve: (result: T) => void\r\n    promise: Promise<T>\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport function PromiseVisualizer<T>(props: IPromiseVisualizerProps<T>) {\r\n    const promiseState = usePromise(props.promise);\r\n\r\n    if (promiseState.isLoading) {\r\n        return (\r\n            <Stack horizontalAlign=\"center\" style={props.loadingStyle}>\r\n                <Spinner label={props.loadingMessage} />\r\n            </Stack>\r\n        )\r\n    }\r\n\r\n    if (promiseState.error) {\r\n        return (\r\n            <Stack horizontalAlign=\"center\" style={props.errorStyle}>\r\n                <FontIcon iconName=\"sad\" style={{ fontSize: 55 }}></FontIcon>\r\n                <Text variant=\"xLarge\">Something went wrong</Text>\r\n            </Stack>\r\n        )\r\n    }\r\n\r\n    if (promiseState.results) {\r\n        props.onResolve(promiseState.results);\r\n        return <>{props.children}</>\r\n    }\r\n    return <></>\r\n}","import * as React from \"react\";\r\nimport { Stack, Text, FontIcon } from \"office-ui-fabric-react\";\r\nimport { GetAllProjects, IProject } from \"../common/services/projects\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\nimport { PromiseVisualizer } from \"../components/PromiseVisualizer\";\r\n\r\nexport const Projects: React.StatelessComponent = () => {\r\n  const [state, setState] = React.useState<IProject[]>();\r\n\r\n  return (\r\n    /* Todo: Add a header with brief explanation of the below */\r\n    <Stack horizontalAlign=\"center\" horizontal wrap tokens={{ childrenGap: 10 }}>\r\n      <PromiseVisualizer promise={GetAllProjects()} onResolve={setState} loadingMessage='Loading Projects...' loadingStyle={{ padding: 25 }} errorStyle={{ padding: 25 }}>\r\n        {state && (\r\n          state.length > 0 ? state.sort((a, b) => a.appName.localeCompare(b.appName)).map((project, i) => (\r\n            <ProjectCard key={i} onProjectRemove={project => setState(state.filter(p => p.appName !== project.appName))} project={project}></ProjectCard>\r\n          )) : (\r\n              <Stack horizontalAlign=\"center\" >\r\n                <FontIcon iconName=\"sad\" style={{ fontSize: 55 }}></FontIcon>\r\n                <Text variant=\"xLarge\">No projects, yet</Text>\r\n              </Stack>\r\n            )\r\n        )}\r\n      </PromiseVisualizer>\r\n    </Stack>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\n\r\nexport default styled.div`\r\n    box-shadow: ${Depths.depth8};\r\n    :hover {\r\n      box-shadow: ${Depths.depth16};\r\n    };\r\n    transition: 150ms all;\r\n`;","import React, { CSSProperties } from \"react\";\r\nimport { Stack, Text, PrimaryButton, Image, ImageFit, ImageCoverStyle } from \"office-ui-fabric-react\";\r\nimport { Links, Images } from \"../common/const\";\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport HoverBox from '../components/HoverBox';\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\nimport HomeViewData from '../assets/views/home.json';\r\n\r\nconst FaIconStyle: CSSProperties = {\r\n  color: \"black\",\r\n  height: \"65px\",\r\n  width: \"65px\"\r\n};\r\n\r\nconst LinkCard = styled.section`\r\n    font-family: Segoe UI, sans-serif;\r\n    padding: 7px;\r\n    max-width: 400px;\r\n`;\r\n\r\nlet Link = styled.a`\r\n    color: blue;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    :hover {\r\n      text-decoration: underline;\r\n    };\r\n`;\r\n\r\nlet Img = styled.img`\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n`;\r\n\r\nconst LargeCard = styled.div`\r\nbox-shadow: ${Depths.depth16};\r\nheight: min-content;\r\n.heroImage, .heroImage img {\r\n  border: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 350px;\r\n}\r\n\r\n@media screen and (max-width: 1479px) {\r\n  width: min-content;\r\n  .heroImage, .heroImage img {\r\n      width: 700px;\r\n      height: 350px;\r\n  }\r\n}\r\n`;\r\n\r\nexport const Home: React.StatelessComponent = () => {\r\n  return (\r\n    <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n      <p style={{ fontFamily: \"Segoe UI, Sans-Serif\", fontWeight: \"lighter\", fontSize: \"24px\", margin: 5 }}>The homepage for the unofficial Discord server </p>\r\n\r\n      <Stack horizontalAlign=\"space-around\" tokens={{ childrenGap: 25 }}>\r\n\r\n        <LargeCard>\r\n          <Stack horizontal wrap horizontalAlign=\"space-evenly\">\r\n            <Image className=\"heroImage\" height=\"350\" coverStyle={ImageCoverStyle.landscape} src={Images.launchAppsHero} />\r\n\r\n            <Stack style={{ margin: 30, width: 350 }} tokens={{ childrenGap: 5 }} verticalAlign=\"center\">\r\n              <Text variant=\"xLarge\">{HomeViewData.main.subtitle}</Text>\r\n              <Text variant=\"mediumPlus\">{HomeViewData.main.details}</Text>\r\n              <PrimaryButton href=\"https://medium.com/@Arlodottxt/uwp-community-launch-2020-1772efb1e382\" style={{ marginTop: \"15px\", width: 150, height: 40 }} text=\"Take a look\" />\r\n            </Stack>\r\n          </Stack>\r\n        </LargeCard>\r\n\r\n        <Stack wrap horizontal horizontalAlign=\"space-around\" tokens={{ childrenGap: 15 }}>\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.discordChatExample} />\r\n\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>Discuss the platform with other enthusiasts, get help as a developer, and interact with the devs of your favorite apps</Text>\r\n                    <Link href={Links.discordServerInvite} target=\"_blank\"> Join our discord server </Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"discord\"]} />\r\n                </Stack>\r\n\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.githubOrgScreenshot} />\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>Many of our projects are open source, so others can learn or build with them</Text>\r\n                    <Link href={Links.githubOrganization} target=\"_blank\">See our open source projects</Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"github\"]} />\r\n                </Stack>\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.launchHeroImage} />\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>As a community of talented developers, each year we Launch our projects together in an annual event known as <code>Launch</code></Text>\r\n                    <Link href={Links.launch2019Medium} target=\"_blank\">Read about Launch 2020</Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"medium\"]} />\r\n                </Stack>\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n","import React, { CSSProperties } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Text, Stack } from \"office-ui-fabric-react\";\r\n\r\nconst navLinkActiveStyle: CSSProperties = {\r\n  borderBottom: \"3px solid #5e5eff\",\r\n};\r\n\r\nconst MyNavLink = styled(NavLink)`     \r\n   color: black;\r\n   padding: 10px 12px 5px 12px;\r\n   text-align: center;\r\n   display: inline-block;\r\n   text-decoration: none;\r\n   margin: 7px;\r\n   border-bottom: 3px solid #c9c9c9;\r\n\r\n  :hover  {\r\n    text-decoration: none;    \r\n    border-bottom: 3px solid #9e9e9e;\r\n  };\r\n`;\r\n\r\nconst NavText = styled(Text)`\r\n  font-size: 18px;\r\n`;\r\n\r\nexport class NavMenu extends React.Component<any, any> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <nav>\r\n        <Stack horizontal wrap style={{ maxWidth: \"100%\" }}>\r\n          <MyNavLink to=\"/\" exact activeStyle={navLinkActiveStyle}>\r\n            <NavText>Home</NavText>\r\n          </MyNavLink>\r\n          <MyNavLink to=\"/projects\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Projects</NavText>\r\n          </MyNavLink>\r\n          <MyNavLink to=\"/launch\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Launch</NavText>\r\n          </MyNavLink>\r\n          {/* Present but not shown, so it gets crawled */}\r\n          <MyNavLink style={{ display: \"none\" }} to=\"/dashboard\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Dashboard</NavText>\r\n          </MyNavLink>\r\n        </Stack>\r\n      </nav>\r\n    );\r\n  }\r\n}","import { fetchBackend } from \"../helpers\";\r\nimport { IProject } from \"./projects\";\r\n\r\nexport async function CreateUser(userData: IUser): Promise<Response> {\r\n    return await fetchBackend(\"user\", \"POST\", userData);\r\n}\r\n\r\nexport async function ModifyUser(userData: IUser) {\r\n    return await fetchBackend(\"user\", \"PUT\", userData);\r\n}\r\n\r\nexport async function GetUser(discordId: string) {\r\n    return await fetchBackend(`user/${discordId}`, \"GET\");\r\n}\r\n\r\nexport async function GetUserProjects(discordId: string): Promise<IProject[]> {\r\n    return (await fetchBackend(`user/${discordId}/projects`, \"GET\")).json();\r\n}\r\nexport interface IUser {\r\n    id?: number;\r\n    name: string;\r\n    discordId: string;\r\n    email?: string; // This is a contact email supplied by the user, and is safe to be public \r\n}","import { Text, Stack, PrimaryButton, TextField, DefaultButton } from \"office-ui-fabric-react\";\r\nimport React from \"react\";\r\nimport { IBackendReponseError } from \"../../common/interfaces\";\r\nimport { CreateUser, IUser, ModifyUser } from \"../../common/services/users\";\r\nimport { CurrentUser } from \"../../common/services/discord\";\r\n\r\nexport interface IRegisterDevProps {\r\n    onCancel?: Function;\r\n    onSuccess: (user: IUser) => void;\r\n    userData?: IUser;\r\n    modifying?: boolean;\r\n};\r\n\r\nexport const RegisterUserForm = (props: IRegisterDevProps) => {\r\n    let [userRequest, setUserRequest] = React.useState<IUser>(props.userData ? props.userData : {\r\n        discordId: CurrentUser.id,\r\n        name: \"\"\r\n    });\r\n\r\n    let [submissionError, setSubmissionError] = React.useState<string>(\"\");\r\n    let [showSuccessIndicator, setShowSuccessIndicator] = React.useState(false);\r\n\r\n    async function addUser() {\r\n        if (!userRequest) return;\r\n\r\n        let request = props.modifying ? await ModifyUser(userRequest)\r\n            : await CreateUser(userRequest);\r\n\r\n        let success = request.status === 200;\r\n\r\n        if (!success) {\r\n            let error: IBackendReponseError = await request.json();\r\n            if (error.error && error.reason) {\r\n                setSubmissionError(error.reason);\r\n            }\r\n        } else {\r\n            setShowSuccessIndicator(true);\r\n            setTimeout(() => {\r\n                props.onSuccess(userRequest);\r\n            }, 2500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n            {/* Need to toggle both src and display so it trigger the animation, and space is taken up during the transition (while the svg loads) */}\r\n            <img style={{ display: (showSuccessIndicator ? \"block\" : \"none\"), height: \"200px\" }} src={showSuccessIndicator ? \"/assets/img/checkanimated.svg\" : \"\"} alt=\"Check\" />\r\n            <Stack horizontalAlign=\"start\" tokens={{ childrenGap: 7 }} style={{ maxWidth: \"100%\", width: \"300px\", display: (!showSuccessIndicator ? \"block\" : \"none\") }}>\r\n                <Stack>\r\n                    <TextField label=\"Name:\"\r\n                        description=\"Friendly name for other users/devs to see\"\r\n                        defaultValue={props.userData ? props.userData.name : \"\"}\r\n                        styles={{ root: { width: \"100%\" } }}\r\n                        required\r\n                        onChange={(e: any, value: any) => setUserRequest({ ...userRequest, name: value })} />\r\n\r\n                    <TextField label=\"Contact email:\"\r\n                        description=\"Optional\"\r\n                        defaultValue={props.userData ? props.userData.email : \"\"}\r\n                        styles={{ root: { width: \"100%\" } }}\r\n                        onChange={(e: any, value: any) => setUserRequest({ ...userRequest, email: value })} />\r\n\r\n                    <Text variant=\"small\" style={{ marginTop: 10 }}>When you leave the Discord server, any data or projects you register with us will be removed automatically.</Text>\r\n\r\n                    <Text style={{ color: \"red\" }}>{submissionError}</Text>\r\n                </Stack>\r\n\r\n                <Stack horizontal tokens={{ childrenGap: 10 }}>\r\n                    <PrimaryButton text={props.modifying ? \"Update\" : \"Register\"}\r\n                        onClick={addUser} />\r\n                    {\r\n                        props.onCancel ?\r\n                            <DefaultButton text=\"Cancel\" onClick={() => props.onCancel ? props.onCancel() : undefined} />\r\n                            : \"\"\r\n                    }\r\n                </Stack>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n};","import * as React from \"react\";\r\nimport { Stack, Link, Text, PrimaryButton, Persona, TooltipHost, TooltipDelay, DefaultButton, IContextualMenuProps, IContextualMenuItem, PersonaSize, Dialog, DialogFooter, DialogType } from \"office-ui-fabric-react\";\r\nimport { Images, Links } from \"../common/const\";\r\nimport { NavMenu } from \"./NavMenu\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CSSProperties } from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { GetUserAvatar, GetCurrentDiscordUser, IDiscordUser, AuthData, IsUserInServer, discordAuthEndpoint } from \"../common/services/discord\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getHeadTitle } from \"../common/helpers\";\r\nimport { History } from \"history\";\r\nimport { RegisterUserForm } from \"./forms/RegisterUser\";\r\nimport { GetUser, IUser } from \"../common/services/users\";\r\n\r\nconst FaIconStyle: CSSProperties = {\r\n  color: \"white\",\r\n  height: \"20px\",\r\n  width: \"20px\",\r\n  paddingLeft: \"10px\"\r\n};\r\n\r\nexport const AppHeader: React.StatelessComponent = (props: any) => {\r\n  return (\r\n    <Route render={({ history }) => (\r\n      <header style={{ marginBottom: \"10px\", maxWidth: \"98vw\" }}>\r\n        <Stack style={{ width: \"100vw\", margin: \"0px\" }} horizontal wrap tokens={{ childrenGap: 10 }} verticalAlign='end' horizontalAlign=\"space-around\">\r\n          <Helmet>\r\n            <title>{getHeadTitle(props.location.pathname)}</title>\r\n          </Helmet>\r\n          <Link href=\"/\">\r\n            {/* This is an img and not an Image from FabricUI because when rendered on the live server, the image randomly doesn't show */}\r\n            <img style={{ maxWidth: \"100vw\" }} src={Images.uwpCommunityLogo} alt=\"Uwp Community Logo\" />\r\n          </Link>\r\n\r\n          <NavMenu />\r\n\r\n          <SignInButton history={history} />\r\n        </Stack>\r\n\r\n      </header>\r\n    )} />\r\n  );\r\n};\r\n\r\nexport const SignInButton: React.FC<{ history: History }> = ({ history }) => {\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n  const [discordUser, setDiscordUser] = React.useState<IDiscordUser>();\r\n  const [user, setUser] = React.useState<IUser>();\r\n  const [userAvatar, setUserAvatar] = React.useState<string>();\r\n  const [joinServerAlertHidden, setJoinServerAlertHidden] = React.useState(true);\r\n  const [registerUserShown, setRegisterUserShown] = React.useState(false);\r\n  const [editProfileShown, setEditProfileShown] = React.useState(false);\r\n  const [policyConfirmationShown, setPolicyConfirmationShown] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setupLoggedInUser();\r\n  }, []);\r\n\r\n  async function setupLoggedInUser() {\r\n    const discordUser = await GetCurrentDiscordUser();\r\n    const avatarUrl = await GetUserAvatar(discordUser);\r\n\r\n    if (!discordUser || !avatarUrl) return;\r\n    setLoggedIn(true);\r\n    setDiscordUser(discordUser);\r\n\r\n    let userIsInServer = await IsUserInServer();\r\n    if (!userIsInServer) {\r\n      setJoinServerAlertHidden(false);\r\n      return;\r\n    }\r\n\r\n    const userRequest = await GetUser(discordUser.id);\r\n    if (userRequest.status === 404) {\r\n      // User isn't registered\r\n      setRegisterUserShown(true);\r\n      return;\r\n    }\r\n    if (userRequest && userRequest.status !== 200) throw new Error(await userRequest.text());\r\n\r\n    let user: IUser = await userRequest.json();\r\n\r\n    setUser(user);\r\n    setUserAvatar(avatarUrl);\r\n  }\r\n\r\n  const LoggedInButtonDropdownItems: IContextualMenuProps = {\r\n    onItemClick: OnMenuItemClick,\r\n    useTargetWidth: true,\r\n    items: [{\r\n      key: \"dashboard\",\r\n      text: \"Dashboard\",\r\n      iconProps: { iconName: \"ViewDashboard\" }\r\n    }, {\r\n      /* Todo: Only show this button if the user HAS a profile to edit */\r\n      key: \"editProfile\",\r\n      text: \"Edit Profile\",\r\n      iconProps: { iconName: \"EditContact\" }\r\n    }, {\r\n      key: \"logOut\",\r\n      text: \"Log out\",\r\n      iconProps: { iconName: \"SignOut\" }\r\n    }]\r\n  }\r\n\r\n  function OnMenuItemClick(ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined, item?: IContextualMenuItem | undefined) {\r\n    if (!item) return;\r\n\r\n    switch (item.key) {\r\n      case \"logOut\":\r\n        LogOut();\r\n        break;\r\n      case \"dashboard\":\r\n        history.push(\"/dashboard\");\r\n        break;\r\n      case \"editProfile\":\r\n        setEditProfileShown(true);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function LogOut() {\r\n    AuthData.Clear();\r\n    history.push(\"/\");\r\n    window.location.reload();\r\n  }\r\n\r\n  function CloseJoinServerDialog() {\r\n    setJoinServerAlertHidden(true);\r\n    LogOut();\r\n  }\r\n\r\n\r\n  return (\r\n    loggedIn && discordUser ?\r\n      <Stack>\r\n        <Dialog\r\n          hidden={joinServerAlertHidden}\r\n          dialogContentProps={{\r\n            type: DialogType.normal,\r\n            title: \"Join the Community to continue\",\r\n            subText: \"Looks like you aren't part of the UWP Community. To sign in, you'll need to join the server first\"\r\n          }}\r\n          modalProps={{\r\n            isBlocking: true,\r\n            styles: { main: { maxWidth: 450 } }\r\n          }}\r\n        >\r\n          <DialogFooter>\r\n            <PrimaryButton href={Links.discordServerInvite} text=\"Join the server\" />\r\n            <DefaultButton onClick={CloseJoinServerDialog} text=\"Sign out\" />\r\n          </DialogFooter>\r\n        </Dialog>\r\n        <TooltipHost content={`Logged in as ${discordUser.username}`} delay={TooltipDelay.long}>\r\n          <DefaultButton style={{ padding: \"25px\", border: \"0px solid black\" }} menuProps={LoggedInButtonDropdownItems}>\r\n            <Persona size={PersonaSize.size40} text={discordUser.username} imageUrl={userAvatar} />\r\n          </DefaultButton>\r\n        </TooltipHost>\r\n\r\n        <Dialog hidden={!editProfileShown && !registerUserShown} dialogContentProps={{ type: DialogType.largeHeader, title: registerUserShown ? \"One more step\" : \"Edit profile\" }}>\r\n          <div style={{ marginTop: -10 }}>\r\n            {registerUserShown ?\r\n              <Text variant=\"mediumPlus\" style={{ marginTop: 10 }}>Complete your profile to get started</Text>\r\n              : <></>}\r\n            <RegisterUserForm modifying={editProfileShown} userData={user} onSuccess={user => { setRegisterUserShown(false); setEditProfileShown(false); setUser(user); }} onCancel={!registerUserShown ? () => setEditProfileShown(false) : undefined} />\r\n          </div>\r\n        </Dialog>\r\n      </Stack>\r\n      :\r\n      <>\r\n        <Stack verticalAlign=\"start\" style={{ marginBottom: \"22px\" }}>\r\n          <PrimaryButton onClick={() => setPolicyConfirmationShown(true)} style={{ padding: \"18px\" }}>\r\n            <Text>Sign in</Text>\r\n            <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"discord\"]} />\r\n          </PrimaryButton>\r\n        </Stack>\r\n        <Dialog dialogContentProps={{ type: DialogType.normal, title: \"Please confirm\", showCloseButton: true }} hidden={!policyConfirmationShown}>\r\n          By logging in, you confirm that you have read and agree to our <NavLink onClick={() => setPolicyConfirmationShown(false)} to=\"/privacy-policy\">Privacy Policy</NavLink> and that you are at least 13 years of age.\r\n\r\n          <DialogFooter>\r\n            <PrimaryButton onClick={() => {\r\n              setPolicyConfirmationShown(false);\r\n              window.location.href = discordAuthEndpoint;\r\n            }} text=\"I agree\" />\r\n            <DefaultButton onClick={() => setPolicyConfirmationShown(false)} text=\"I don't agree\" />\r\n          </DialogFooter>\r\n        </Dialog>\r\n      </>\r\n  );\r\n};","import React from \"react\";\r\nimport { Text, Stack, Image, ImageCoverStyle, ImageFit } from \"office-ui-fabric-react\";\r\n\r\nimport { Images } from \"../common/const\";\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\nimport { IProject, GetLaunchProjects } from \"../common/services/projects\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\nimport { GetCurrentDiscordUser, IDiscordUser } from \"../common/services/discord\";\r\nimport { PromiseVisualizer } from \"../components/PromiseVisualizer\";\r\nimport styled from \"styled-components\";\r\nimport LaunchViewData from '../assets/views/launch.json';\r\n\r\nconst PaddedProjectHolder = styled.div`\r\n    padding: 20px 0px 20px 0px;\r\n\r\n    @media screen and (min-width: 1200px) {\r\n        padding: 20px 100px 20px 100px;\r\n    }\r\n\r\n`;\r\n\r\nconst LargeCard = styled.div`\r\nbox-shadow: ${Depths.depth16};\r\n.heroImage, .heroImage img {\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 750px;\r\n}\r\n\r\nwidth: min-content;\r\n\r\n`;\r\n\r\nexport const Launch = () => {\r\n    const [launchProjects, setLaunchProjects] = React.useState<IProject[]>();\r\n    const [user, setUser] = React.useState<IDiscordUser>();\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            setUser(await GetCurrentDiscordUser());\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <Stack tokens={{ childrenGap: 25 }} horizontalAlign=\"center\">\r\n\r\n            <LargeCard>\r\n                <Stack horizontal wrap>\r\n                    <Image className=\"heroImage\" src={Images.launchAppsHero} coverStyle={ImageCoverStyle.landscape} />\r\n                    <Stack style={{ margin: \"20px 50px 20px 50px\" }}>\r\n\r\n                        <Text style={{ fontFamily: \"Segoe UI\", fontSize: \"30px\", fontWeight: \"lighter\" }}>{LaunchViewData.main.title}</Text>\r\n\r\n                        <Text style={{ marginTop: \"10px\", fontWeight: 500 }} variant=\"xLarge\">{LaunchViewData.main.subtitle}</Text>\r\n                        <Text style={{ marginTop: \"10px\" }} variant=\"mediumPlus\">{LaunchViewData.main.details[0]}</Text>\r\n                        <Text style={{ marginTop: \"10px\" }} variant=\"mediumPlus\">{LaunchViewData.main.details[1]}</Text>\r\n                    </Stack>\r\n                </Stack>\r\n            </LargeCard>\r\n\r\n            <PromiseVisualizer promise={GetLaunchProjects(2020)} onResolve={setLaunchProjects} loadingMessage=\"Checking for Launch 2020 Participants\">\r\n                <PaddedProjectHolder>\r\n                    <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 15 }}>\r\n\r\n                        <Text variant=\"xLarge\">Launch 2020 Participants</Text>\r\n                        <Stack horizontal wrap horizontalAlign=\"center\" maxWidth={1800} tokens={{ childrenGap: 25 }}>\r\n                            {launchProjects && launchProjects.length && launchProjects.map((project, i) =>\r\n                                <ProjectCard key={i} project={project} />\r\n                            )}\r\n                        </Stack>\r\n                    </Stack>\r\n                </PaddedProjectHolder>\r\n            </PromiseVisualizer>\r\n        </Stack>\r\n    );\r\n};\r\n\r\n/* interface ILaunchCardProps {\r\n    header: string;\r\n    description: string;\r\n    path: string;\r\n    buttonText?: string;\r\n    buttonDisabled?: boolean;\r\n    buttonStyle?: CSSProperties;\r\n}; */\r\n","import * as React from \"react\";\r\nimport { IProject, GetAllProjects_Unfiltered } from \"../common/services/projects\";\r\nimport { Stack, Text, FontIcon } from \"office-ui-fabric-react\";\r\nimport { ProjectCard } from \"./ProjectCard\";\r\nimport { PromiseVisualizer } from \"./PromiseVisualizer\";\r\n\r\ninterface IProjectReviewPanelState {\r\n    promise: Promise<IProject[]>;\r\n    data?: IProject[];\r\n    onPromiseFullfilled?: () => {}\r\n}\r\n\r\ninterface IProjectReviewPanelProps {\r\n    type: ReviewType;\r\n}\r\n\r\nexport enum ReviewType {\r\n    ManualReview, Launch\r\n}\r\n\r\nexport const ProjectReviewPanel = (props: IProjectReviewPanelProps) => {\r\n    const [state, setState] = React.useState<IProjectReviewPanelState>({ promise: GetAllProjects_Unfiltered() });\r\n\r\n    function setProjectData(proj: IProject[]) {\r\n        switch (props.type) {\r\n            case ReviewType.ManualReview:\r\n                proj = proj.filter(proj => proj.needsManualReview); break;\r\n            case ReviewType.Launch:\r\n                proj = proj.filter(proj => proj.awaitingLaunchApproval && !proj.needsManualReview); break;\r\n        }\r\n        if (!state.data) setState({ ...state, data: proj });\r\n    }\r\n\r\n    return (\r\n        <Stack wrap horizontal tokens={{ childrenGap: 10 }} horizontalAlign=\"center\">\r\n            <PromiseVisualizer promise={state.promise} onResolve={setProjectData} loadingMessage='Loading Projects...' loadingStyle={{ padding: 25 }} errorStyle={{ padding: 25 }}>\r\n                {state && (state.data && state.data.length > 0 ? state.data.map((project, i) => (\r\n                    <ProjectCard modOptions editable key={i} project={project} onProjectRemove={(project) => setState({ ...state, data: state.data && state.data.filter(p => p.appName !== project.appName) })} />\r\n                )) : (\r\n                        <Stack horizontalAlign=\"center\" verticalAlign=\"center\" tokens={{ padding: 20 }}>\r\n                            <FontIcon iconName=\"sad\" style={{ fontSize: 55 }}></FontIcon>\r\n                            <Text variant=\"xLarge\">{(() => {\r\n                                switch (props.type) {\r\n                                    case ReviewType.Launch: return \"No submissions\";\r\n                                    case ReviewType.ManualReview: return \"Nothing to review\";\r\n                                    default: return \"No projects, yet\"\r\n                                }\r\n                            })()}</Text>\r\n                        </Stack>\r\n                    )\r\n                )}\r\n            </PromiseVisualizer>\r\n        </Stack>\r\n    )\r\n};","import { Text, Stack, Label, Spinner } from \"office-ui-fabric-react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { AuthData } from \"../common/services/discord\";\r\n\r\nexport const Signin: React.FC<any> = () => {\r\n\r\n    let authResponse: string | null = (new URL(window.location.href)).searchParams.get(\"authResponse\");\r\n\r\n    if (authResponse) {\r\n        authResponse = atob(authResponse);\r\n        AuthData.Set(JSON.parse(authResponse));\r\n\r\n        window.location.href = \"/dashboard\";\r\n    }\r\n\r\n    const [showRedirectLink, setShowRedirectLink] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setShowRedirectLink(true);\r\n        }, 7000);\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Stack>\r\n                <Stack horizontalAlign=\"center\">\r\n                    <Label>Signing in...</Label>\r\n                    <Spinner label=\"Hold on tight\" ariaLive=\"assertive\" />\r\n                    <Text style={{ visibility: showRedirectLink ? \"visible\" : \"hidden\" }}>If not redirected automatically, <a href=\"/dashboard\">click here</a></Text>\r\n                </Stack>\r\n            </Stack>\r\n        </div>\r\n    )\r\n};\r\n","import { EditProjectDetailsForm, IEditProjectDetailsFormProps } from './EditProjectDetailsForm';\r\nimport React from \"react\";\r\nimport { IProject } from '../../common/services/projects';\r\nimport { Stack, Text, PrimaryButton, DefaultButton, DirectionalHint, Link, TeachingBubble, TextField, FontIcon } from 'office-ui-fabric-react';\r\nimport { fetchBackend } from '../../common/helpers';\r\n\r\nexport interface ICreateProjectFormProps extends IEditProjectDetailsFormProps {\r\n\r\n};\r\n\r\nexport const CreateProjectForm = (props: ICreateProjectFormProps) => {\r\n    const [verified, setVerified] = React.useState(false);\r\n    const [codeVerificationDisplayed, setCodeVerificationDisplayed] = React.useState(false);\r\n    const [manualReviewMessageShown, setManualReviewMessageShown] = React.useState(true);\r\n    const [projectData, setProjectData] = React.useState<Partial<IProject>>({});\r\n\r\n    return (\r\n        codeVerificationDisplayed ? <ProjectCodeVerifier onCancel={() => { setCodeVerificationDisplayed(false) }} onSuccess={(projectDetails) => {\r\n            setProjectData(projectDetails);\r\n\r\n            setCodeVerificationDisplayed(false);\r\n            setVerified(true);\r\n            setManualReviewMessageShown(false);\r\n        }} />\r\n            :\r\n            verified ?\r\n                (manualReviewMessageShown ?\r\n                    <Stack tokens={{ childrenGap: 10 }}>\r\n                        <Text>Manual review is required after submitting your project. This could take anywhere from several hours to several days</Text>\r\n                        <Stack horizontal tokens={{ childrenGap: 10 }} horizontalAlign=\"space-evenly\" style={{ marginTop: 20 }}>\r\n                            <DefaultButton onClick={() => {\r\n                                setManualReviewMessageShown(false);\r\n                                setVerified(false);\r\n                            }}>Go back</DefaultButton>\r\n                            <PrimaryButton onClick={() => setManualReviewMessageShown(false)}>Continue</PrimaryButton>\r\n                        </Stack>\r\n                    </Stack>\r\n                    : <EditProjectDetailsForm {...props} projectData={projectData} />)\r\n                :\r\n                <Stack tokens={{ childrenGap: 10, padding: 5 }}>\r\n                    <Text variant=\"large\">Before we begin...</Text>\r\n                    <Stack horizontal tokens={{ childrenGap: 5 }}>\r\n                        <FontIcon iconName=\"ReceiptCheck\" style={{ fontSize: 25 }} />\r\n                        <Text variant=\"medium\">Is your app public and already in the store?</Text>\r\n                    </Stack>\r\n                    <Stack horizontal tokens={{ childrenGap: 5 }}>\r\n                        <FontIcon iconName=\"ReceiptCheck\" style={{ fontSize: 25 }} />\r\n                        <Text variant=\"medium\">Do you have a \"Publisher support\" email listed on your apps' MS Store page?</Text>\r\n                    </Stack>\r\n                    <Stack style={{ marginTop: 20 }} horizontal tokens={{ childrenGap: 15 }} horizontalAlign=\"space-evenly\">\r\n                        <PrimaryButton onClick={() => { setProjectData({ ...props.projectData, ...projectData }); setVerified(true) }}>No</PrimaryButton>\r\n                        <PrimaryButton onClick={() => { setProjectData({ ...props.projectData, ...projectData }); setCodeVerificationDisplayed(true) }}>Yes</PrimaryButton>\r\n                    </Stack>\r\n                </Stack>\r\n    );\r\n};\r\n\r\ninterface IProjectCodeVerifierProps {\r\n    onSuccess: (projectDetails: Partial<IProject>) => void;\r\n    onCancel: Function;\r\n    projectData?: Partial<IProject>;\r\n}\r\nexport const ProjectCodeVerifier = (props: IProjectCodeVerifierProps) => {\r\n    enum VerficationState {\r\n        \"PreInit\", \"WaitingForCode\", \"Verified\"\r\n    }\r\n\r\n    const [storeIdTeachingBubbleTarget, setStoreIdTeachingBubbleTarget] = React.useState<MouseEvent>();\r\n    const [storeId, setStoreId] = React.useState<string>();\r\n    const [verificationCodeText, setVerificationCodeText] = React.useState<string>();\r\n    const [verificationState, setVerificationState] = React.useState<VerficationState>(VerficationState.PreInit);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n    async function BeginVerification() {\r\n        if (!validateStoreIdField()) return;\r\n        const request = await fetchBackend(\"projects/verification\", \"POST\", {\r\n            storeId: storeId\r\n        });\r\n\r\n        if (request.status === 200) {\r\n            setVerificationState(VerficationState.WaitingForCode);\r\n        } else {\r\n            const response = await request.json();\r\n            console.error(response);\r\n            setErrorMessage(response.reason);\r\n        }\r\n    }\r\n\r\n    async function checkVerification() {\r\n        if (!validateStoreIdField()) return;\r\n        const request = await fetchBackend(`projects/verification?storeId=${storeId}&code=${verificationCodeText}`, \"GET\");\r\n\r\n        if (request.status === 200) {\r\n            setVerificationState(VerficationState.Verified);\r\n        } else {\r\n            const response = await request.json();\r\n            console.error(response);\r\n            setErrorMessage(response.reason);\r\n        }\r\n    }\r\n\r\n    function validateStoreIdField() {\r\n        if (!storeId || storeId.length < 12) {\r\n            setErrorMessage(\"Store ID is too short\");\r\n            return false;\r\n        }\r\n        setErrorMessage(\"\");\r\n        return true;\r\n    }\r\n\r\n    const hideStoreIdTeachingBubbleTimeout = {\r\n        tick: setTimeout(() => { }, 0),\r\n        onTimeout: () => {\r\n            setStoreIdTeachingBubbleTarget(undefined);\r\n        },\r\n        init: () => {\r\n            hideStoreIdTeachingBubbleTimeout.clear();\r\n            hideStoreIdTeachingBubbleTimeout.cleared = false;\r\n            hideStoreIdTeachingBubbleTimeout.tick = setTimeout(hideStoreIdTeachingBubbleTimeout.onTimeout, 1000);\r\n        },\r\n        cleared: false,\r\n        clear: () => {\r\n            hideStoreIdTeachingBubbleTimeout.cleared = true;\r\n            clearTimeout(hideStoreIdTeachingBubbleTimeout.tick);\r\n        }\r\n    };\r\n\r\n    function showStoreIdTeachingButton(event: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n        hideStoreIdTeachingBubbleTimeout.clear();\r\n        setStoreIdTeachingBubbleTarget(event.nativeEvent);\r\n    }\r\n\r\n    function hideStoreIdTeachingButton() {\r\n        hideStoreIdTeachingBubbleTimeout.init();\r\n    }\r\n\r\n    function onStoreIDTextFieldKeyPress(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n        if (event.key === \"Enter\") {\r\n            BeginVerification();\r\n        }\r\n    }\r\n\r\n    function onVerificationCodeTextFieldKeyPress(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n        if (event.key === \"Enter\") {\r\n            checkVerification();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stack>\r\n            {\r\n                (() => {\r\n                    switch (verificationState.valueOf()) {\r\n                        case VerficationState.PreInit:\r\n                            return <>\r\n                                {storeIdTeachingBubbleTarget !== undefined ?\r\n                                    <TeachingBubble calloutProps={{ directionalHintFixed: true, directionalHint: DirectionalHint.topAutoEdge }} target={storeIdTeachingBubbleTarget}>\r\n                                        <Stack onMouseLeave={hideStoreIdTeachingButton} onMouseOver={() => hideStoreIdTeachingBubbleTimeout.clear()} tokens={{ childrenGap: 10 }}>\r\n                                            <Text variant=\"mediumPlus\">This is the alphanumeric 12 character ID assigned to your app. It can be found in the URL for your app's store listing</Text>\r\n                                            <Text variant=\"small\"><DefaultButton target=\"_blank\" href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/view-app-identity-details#link-to-your-apps-listing\">More details</DefaultButton></Text>\r\n                                        </Stack>\r\n                                    </TeachingBubble>\r\n                                    : <></>}\r\n\r\n                                <Stack tokens={{ childrenGap: 13 }}>\r\n                                    <Text>Your project can be verified automatically, and will be immediately visible to the community</Text>\r\n                                    <Stack horizontal verticalAlign=\"end\" tokens={{ childrenGap: 10 }}>\r\n                                        <Text variant=\"mediumPlus\">Enter the Store ID for your app</Text>\r\n                                        <Text variant=\"small\" style={{ color: \"gray\" }} onMouseLeave={hideStoreIdTeachingButton} ><Link onClick={showStoreIdTeachingButton}>What's this?</Link></Text>\r\n                                    </Stack>\r\n                                    <Stack grow horizontal tokens={{ childrenGap: 5 }}>\r\n                                        <TextField onKeyPress={onStoreIDTextFieldKeyPress} styles={{ field: { width: 250 } }} placeholder=\"9p75w183m6qr\" onChange={(e: any, value: any) => setStoreId(value)} />\r\n                                        <PrimaryButton onClick={() => BeginVerification()} style={{ minWidth: 25 }} iconProps={{ iconName: \"Forward\" }} />\r\n                                    </Stack>\r\n                                </Stack>\r\n                            </>;\r\n                        case VerficationState.WaitingForCode:\r\n                            return <Stack tokens={{ childrenGap: 10 }}>\r\n                                <Stack grow horizontal tokens={{ childrenGap: 5 }} verticalAlign=\"end\">\r\n                                    <FontIcon iconName=\"InboxCheck\" style={{ fontSize: 24 }} />\r\n                                    <Text variant=\"xLarge\">Check your inbox / junk mail</Text>\r\n                                </Stack>\r\n                                <Text variant=\"mediumPlus\">Enter the code we sent you</Text>\r\n                                <Stack grow horizontal tokens={{ childrenGap: 5 }}>\r\n                                    <TextField onChange={(e: any, value: any) => setVerificationCodeText(value)} onKeyPress={onVerificationCodeTextFieldKeyPress} styles={{ field: { width: 250 } }} />\r\n                                    <PrimaryButton onClick={() => checkVerification()} style={{ minWidth: 25 }} iconProps={{ iconName: \"Forward\" }} />\r\n                                </Stack>\r\n                            </Stack>;\r\n                        case VerficationState.Verified:\r\n                            return <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 15, padding: 10 }}>\r\n                                <FontIcon style={{ fontSize: 38 }} iconName=\"ReminderPerson\" />\r\n                                <Text variant=\"xxLarge\">Identity verified!</Text>\r\n                                <div style={{ display: \"none\" }}>\r\n                                    {setTimeout(() => props.onSuccess({\r\n                                        ...props.projectData,\r\n                                        needsManualReview: false,\r\n                                        downloadLink: `http://microsoft.com/store/apps/${storeId}`\r\n                                    }), 1500)}\r\n                                </div>\r\n                            </Stack>\r\n                        default:\r\n                            return <></>\r\n                    }\r\n                })()\r\n            }\r\n            <Text style={{ color: \"red\" }}>{errorMessage}</Text>\r\n        </Stack >\r\n    );\r\n};\r\n\r\n","import { Text, Stack, Persona, PersonaSize, Icon, Link, Dialog, DialogType, DefaultButton, PrimaryButton, FontIcon, PivotItem, Pivot } from \"office-ui-fabric-react\";\r\nimport React from \"react\";\r\nimport { GetUserAvatar, GetCurrentDiscordUser, IDiscordUser, discordAuthEndpoint, GetUserRoles, AssignUserRole } from \"../common/services/discord\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { CreateProjectForm } from \"../components/forms/CreateProjectForm\";\r\nimport { IProject } from \"../common/services/projects\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\nimport { GetUserProjects } from \"../common/services/users\";\r\nimport { ProjectReviewPanel, ReviewType } from \"../components/ProjectReviewPanel\";\r\n\r\nconst DashboardHeader = styled.header`\r\nbackground: linear-gradient(to bottom,#005799 0,#0076d1);\r\nbox-shadow: 0 12px 45px -8px rgba(0,120,215,.35);\r\nwidth: 100vw;\r\nmargin: 0px;\r\npadding: 15px 0px;\r\n`;\r\n\r\nexport const Dashboard = () => {\r\n    const [welcomeMessage, setWelcomeMessage] = React.useState(\"Signing in...\");\r\n    const [userIcon, setUserIcon] = React.useState(\"\");\r\n\r\n    const [roles, setRoles] = React.useState<string[]>([]);\r\n\r\n    const [appRegistrationShown, setAppRegistrationShown] = React.useState(false);\r\n    const [devRegistrationShown, setDevRegistrationShown] = React.useState(false);\r\n\r\n    const [apps, setApps] = React.useState<IProject[]>();\r\n\r\n    React.useEffect(() => {\r\n        setupLoggedInUser();\r\n    });\r\n\r\n    async function getUserApps(user: IDiscordUser) {\r\n        const projects = await GetUserProjects(user.id);\r\n        if (!apps) setApps(projects);\r\n    }\r\n\r\n    async function setupLoggedInUser() {\r\n        let user: IDiscordUser | undefined = await GetCurrentDiscordUser();\r\n        if (navigator.userAgent.includes(\"ReactSnap\")) return;\r\n        if (!user) {\r\n            window.location.href = discordAuthEndpoint;\r\n            return;\r\n        }\r\n        if (welcomeMessage === \"Signing in...\") setWelcomeMessage(user.username);\r\n        if (!userIcon) setUserIcon(await GetUserAvatar(user) || \"\");\r\n\r\n        const userRoles = await GetUserRoles(user);\r\n        if (userRoles && roles.length === 0) setRoles(userRoles);\r\n\r\n        getUserApps(user);\r\n    }\r\n\r\n    async function onDevRegisterFormSuccess() {\r\n        setDevRegistrationShown(false);\r\n\r\n        AssignUserRole(\"Developer\");\r\n        setTimeout(() => {\r\n            setupLoggedInUser();\r\n        }, 1000);\r\n    }\r\n\r\n    async function onAppRegisterFormSuccess() {\r\n        setAppRegistrationShown(false);\r\n    }\r\n\r\n    const PersonaDark = styled(Persona)`\r\n    * {\r\n        &:hover {\r\n            color: white;\r\n        }\r\n        color: #f7f7f7;\r\n        font-size: 22px;\r\n    }\r\n    `;\r\n\r\n    const SectionTitleIconFontSize = 34;\r\n\r\n    const DashboardColumnFiller = styled.div`\r\n    @media only screen and (max-width: 807px) {\r\n        display: none;\r\n    } \r\n    `;\r\n\r\n    return (\r\n        <Stack tokens={{ childrenGap: 25 }}>\r\n            <DashboardHeader>\r\n                <Stack horizontal wrap style={{ padding: \"15px 0px\", margin: 0 }} verticalAlign=\"center\" horizontalAlign=\"space-around\" tokens={{ childrenGap: 25 }}>\r\n                    <PersonaDark size={PersonaSize.large} styles={{ primaryText: { color: \"white\" } }} text={welcomeMessage} imageUrl={userIcon} />\r\n\r\n                    <Stack horizontal wrap verticalAlign=\"end\" tokens={{ childrenGap: 10 }} style={{ marginLeft: 10 }}>\r\n\r\n                        {roles.includes(\"Developer\") ?\r\n                            <Link style={{ color: \"white\", width: \"150px\", textDecoration: \"none\" }} onClick={() => setAppRegistrationShown(true)}>\r\n                                <Stack verticalAlign=\"end\" horizontalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                                    <Icon style={{ fontSize: 35, userSelect: \"none\" }} iconName=\"AppIconDefaultAdd\"></Icon>\r\n                                    <Text variant=\"mediumPlus\">Register an app</Text>\r\n                                </Stack>\r\n                            </Link>\r\n                            :\r\n                            <Link style={{ color: \"white\", width: \"150px\", textDecoration: \"none\" }} onClick={() => setDevRegistrationShown(true)}>\r\n                                <Stack verticalAlign=\"end\" horizontalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                                    <Icon style={{ fontSize: 35, userSelect: \"none\" }} iconName=\"code\"></Icon>\r\n                                    <Text variant=\"mediumPlus\">Become a Developer</Text>\r\n                                </Stack>\r\n                            </Link>\r\n                        }\r\n                        <Link style={{ color: \"gray\", width: \"150px\", textDecoration: \"none\" }} to=\"/dashboard/registerapp\">\r\n                            <Stack verticalAlign=\"end\" horizontalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                                <Icon style={{ fontSize: 35, color: \"gray\", userSelect: \"none\" }} iconName=\"Robot\"></Icon>\r\n                                <Text style={{ color: \"gray\" }} variant=\"mediumPlus\">Manage your roles</Text>\r\n                            </Stack>\r\n                        </Link>\r\n\r\n                    </Stack>\r\n\r\n                    <DashboardColumnFiller style={{ width: 200 }} />\r\n                </Stack>\r\n            </DashboardHeader>\r\n\r\n            <Stack horizontalAlign=\"center\" wrap horizontal tokens={{ childrenGap: 20 }}>\r\n                {\r\n                    roles.includes(\"Developer\") ?\r\n                        <Stack style={{ margin: 50 }} horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n                            <Stack horizontal tokens={{ childrenGap: 15 }}>\r\n                                <Icon iconName=\"AppIconDefaultList\" style={{ fontSize: SectionTitleIconFontSize }} />\r\n                                <Text variant=\"xLarge\" style={{ fontWeight: 600 }}>My apps</Text>\r\n                            </Stack>\r\n\r\n                            <Stack horizontal wrap tokens={{ childrenGap: 15 }}>\r\n                                {\r\n                                    (apps && apps.length > 0 ? apps.map(project =>\r\n                                        <ProjectCard onProjectRemove={(project) => setApps(apps.filter(p => p.appName !== project.appName))} editable={true} project={project}></ProjectCard>\r\n                                    ) : <Text variant=\"large\">You don't have any registered apps</Text>)\r\n                                }\r\n                            </Stack>\r\n                        </Stack>\r\n                        :\r\n                        <Stack horizontalAlign=\"center\">\r\n                            <Icon iconName=\"BuildDefinition\" style={{ fontSize: 55 }} />\r\n                            <Text variant=\"xLarge\" style={{ fontWeight: 600 }}>Under construction</Text>\r\n                            <Text variant=\"large\">For now, this area is primarily for developers. Check back later for more</Text>\r\n                        </Stack>}\r\n\r\n                <Dialog hidden={!appRegistrationShown}\r\n                    dialogContentProps={{\r\n                        type: DialogType.normal,\r\n                        title: 'Register an app',\r\n                        styles: { title: { color: \"rgb(0, 120, 212)\", borderBottom: \"2px solid rgb(0, 117, 209)\", maxWidth: 240, margin: \"0px 0px 15px 23px\", paddingBottom: 11, paddingLeft: 10 } },\r\n                        onDismiss: () => setAppRegistrationShown(false)\r\n                    }}>\r\n                    <CreateProjectForm projectData={{}} onSuccess={onAppRegisterFormSuccess} onCancel={() => setAppRegistrationShown(false)} />\r\n                </Dialog>\r\n\r\n                <Dialog hidden={!devRegistrationShown} dialogContentProps={{\r\n                    type: DialogType.largeHeader, title: \"Become a developer\"\r\n                }}>\r\n                    <Stack tokens={{ childrenGap: 10 }} horizontalAlign=\"center\">\r\n                        <FontIcon iconName=\"GiftboxOpen\" style={{ fontSize: 56 }} />\r\n                        <Text variant=\"xLarge\">Let's build something, together</Text>\r\n                        <Text variant=\"medium\">Everyone, from seasoned veterans to enthusiastic novices can become a developer with just a click</Text>\r\n                        <Text variant=\"medium\">You'll be given the Developer role in the UWP Community Discord server, and become eligible for app services exclusive to devs</Text>\r\n                        <Stack horizontal horizontalAlign=\"space-evenly\" tokens={{ childrenGap: 10 }}>\r\n                            <DefaultButton onClick={() => setDevRegistrationShown(false)}>Cancel</DefaultButton>\r\n                            <PrimaryButton onClick={onDevRegisterFormSuccess}>Register</PrimaryButton>\r\n                        </Stack>\r\n                    </Stack>\r\n                </Dialog>\r\n            </Stack>\r\n\r\n            {\r\n                roles.includes(\"Mod\") || roles.includes(\"Admin\") ?\r\n                    <Stack horizontalAlign=\"center\">\r\n                        <Pivot styles={{ root: { justifyContent: \"center\", display: \"flex\" }, itemContainer: { padding: 20 } }}>\r\n                            <PivotItem headerText=\"Needs manual review\">\r\n                                <ProjectReviewPanel type={ReviewType.ManualReview} />\r\n                            </PivotItem>\r\n                            {\r\n                                roles.includes(\"Launch Coordinator\") ?\r\n                                    <PivotItem headerText=\"Launch submissions\">\r\n                                        <ProjectReviewPanel type={ReviewType.Launch} />\r\n                                    </PivotItem> : <></>\r\n                            }\r\n                        </Pivot>\r\n                    </Stack>\r\n                    : <></>\r\n            }\r\n        </Stack>\r\n    )\r\n};","import * as React from \"react\";\r\nimport { Text, Stack } from \"office-ui-fabric-react\";\r\n\r\nexport const NotFound: React.StatelessComponent = () => {\r\n  return (\r\n    <Stack horizontal horizontalAlign=\"center\">\r\n      <Text variant=\"large\" style={{ padding: 10 }}>\r\n        404 Not Found\r\n      </Text>\r\n    </Stack>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { Stack, Text, Link } from 'office-ui-fabric-react';\r\nimport memoize from 'promise-memoize'\r\n\r\nconst renderers = {\r\n  heading: (props: { level: 1 | 2 | 3; children: any }) => {\r\n    const { level, children } = props\r\n\r\n    const size = {\r\n      1: 'mega',\r\n      2: 'xxLarge',\r\n      3: 'xLarge'\r\n    }\r\n\r\n    const variant: any = size[level]\r\n    const headerType: any = `h${level}`\r\n\r\n    return <Text as={headerType} variant={variant}>{children[0].props.value}</Text>\r\n  },\r\n  text: Text,\r\n  link: Link\r\n}\r\n\r\nconst getMarkdown = memoize(async (url: string) => {\r\n  const req = await fetch(url)\r\n  const markdown = await req.text()\r\n\r\n  return markdown\r\n})\r\n\r\nexport const createMarkdownPage = async (filename: string) => {\r\n  const markdown = await getMarkdown(filename)\r\n  return {\r\n    default: () => (\r\n      <Stack\r\n        verticalFill\r\n        styles={{\r\n          root: {\r\n            maxWidth: 960,\r\n            height: 'auto'\r\n          }\r\n        }}>\r\n        <ReactMarkdown renderers={renderers} source={markdown} />\r\n      </Stack>\r\n    )\r\n  }\r\n}","import * as React from \"react\";\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\n\r\nimport { Projects } from './views/Projects';\r\nimport { Home } from './views/Home';\r\nimport { AppHeader } from \"./components/AppHeader\";\r\nimport { Launch } from \"./views/Launch\";\r\nimport { Signin } from \"./views/signin\";\r\nimport { Dashboard } from \"./views/dashboard\";\r\n\r\nimport { Stack } from \"office-ui-fabric-react\";\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab, faDiscord, faMedium, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { fas, faGlobe, faArrowCircleDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { NotFound } from \"./views/NotFound\";\r\n\r\nimport { createMarkdownPage } from './components/markdown-loader'\r\nimport { prerenderedLoader } from './components/prerender-loader'\r\n\r\nlibrary.add(fab, faDiscord, faMedium, faGithub);\r\nlibrary.add(fab, fas, faGlobe, faArrowCircleDown, faDiscord, faMedium, faGithub);\r\n\r\nconst AppHeaderWithRouter = withRouter(props => <AppHeader {...props} />);\r\nconst PrivacyPolicy = prerenderedLoader(() => createMarkdownPage('/privacy-policy.md'));\r\n\r\nexport const App: React.StatelessComponent = () => {\r\n\r\n  return (\r\n    <BrowserRouter basename=\"/\">\r\n      <Stack horizontalAlign=\"center\">\r\n        <AppHeaderWithRouter />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/projects/\" component={Projects} />\r\n          <Route path=\"/launch/\" component={Launch} />\r\n          <Route path=\"/signin/\" component={Signin} />\r\n          <Route path=\"/dashboard/\" component={Dashboard} />\r\n          <Route path=\"/privacy-policy/\" component={PrivacyPolicy} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </Stack>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nimport loadable from \"@loadable/component\";\r\nimport { PrerenderedComponent } from \"react-prerendered-component\";\r\n\r\nexport const prerenderedLoader = (dynamicImport: any) => {\r\n  const LoadableComponent = loadable(dynamicImport);\r\n  return React.memo(props => (\r\n    <PrerenderedComponent live={LoadableComponent.load()}>\r\n      <LoadableComponent {...props} />\r\n    </PrerenderedComponent>\r\n  ));\r\n};","import React from \"react\";\r\nimport { hydrate, render } from \"react-dom\";\r\nimport { initializeIcons } from \"@uifabric/icons\";\r\nimport {App} from './App';\r\n\r\n// Initializes the UI Fabric icons that we can use\r\n// Choose one from this list: https://developer.microsoft.com/en-us/fabric#/styles/icons\r\ninitializeIcons();\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nif (rootElement && rootElement.hasChildNodes()) {\r\n  hydrate(<App />, rootElement);\r\n} else {\r\n  render(<App />, rootElement);\r\n}"],"sourceRoot":""}