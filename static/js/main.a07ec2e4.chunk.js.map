{"version":3,"sources":["common/services/discord.ts","common/const.ts","common/helpers.ts","common/services/projects.ts","components/ProjectCard.tsx","views/Projects.tsx","components/HoverBox.tsx","views/Home.tsx","components/NavMenu.tsx","common/services/users.ts","components/forms/RegisterUser.tsx","components/AppHeader.tsx","views/Launch.tsx","views/signin.tsx","components/forms/EditProjectDetailsForm.tsx","components/forms/CreateProjectForm.tsx","views/dashboard.tsx","views/NotFound.tsx","components/markdown-loader.tsx","App.tsx","components/prerender-loader.tsx","index.tsx"],"names":["CurrentUser","Links","Images","backendHost","isLocalhost","discordAuthEndpoint","AuthData","Get","authData","localStorage","getItem","JSON","parse","Set","SetDiscordAuthData","Clear","removeItem","data","setItem","stringify","RefreshTokenIfNeeded","a","UnixTime","Math","round","Date","getTime","auth","expires_at","fetch","refresh_token","json","refreshData","expires_in","IsUserInServer","Auth","Error","headers","access_token","Req","status","Response","filter","server","id","length","GetCurrentDiscordUser","GetUserRoles","user","fetchBackend","request","result","map","role","name","AssignUserRole","roleName","GetUserAvatar","avatar","window","location","host","includes","navigator","userAgent","isReactSnap","route","method","requestBody","push","url","body","match","toMatch","regex","m","exec","undefined","CreateProject","projectData","downloadLink","storeId","GetProjectByDiscordId","discordId","GetAllProjects","GetLaunchProjects","year","project","launchYear","awaitingLaunchApproval","useProjects","cacheKey","cache","initialState","isLoading","projects","useState","res","setRes","prevState","script","document","createElement","type","innerHTML","getElementsByTagName","appendChild","error","ButtonType","FaIconStyle","color","height","width","ProjectCard","props","React","projectCardActions","setProjectCardActions","onRenderIcon","buttonProps","buttonData","link","valueOf","Download","style","icon","External","Github","projectCardsData","href","githubLink","externalLink","DocumentCard","DocumentCardImage","imageFit","ImageFit","centerCover","imageSrc","heroImage","DocumentCardDetails","DocumentCardTitle","styles","root","padding","title","appName","Stack","tokens","Text","overflowY","description","horizontal","childrenGap","verticalAlign","onEditButtonClicked","PrimaryButton","onClick","DocumentCardActions","actions","Projects","state","getProjects","horizontalAlign","wrap","marginTop","Spinner","label","FontIcon","iconName","fontSize","variant","i","key","ProgressIndicator","styled","div","Depths","depth8","depth16","LinkCard","section","Link","Img","img","LargeCard","Home","fontFamily","fontWeight","margin","maxWidth","Image","className","coverStyle","ImageCoverStyle","landscape","cover","src","text","HoverBox","target","navLinkActiveStyle","borderBottom","MyNavLink","NavLink","NavText","NavMenu","to","exact","activeStyle","display","Component","CreateUser","userData","ModifyUser","GetUser","RegisterUserForm","userRequest","setUserRequest","submissionError","setSubmissionError","showSuccessIndicator","setShowSuccessIndicator","modifying","reason","setTimeout","onSuccess","alt","TextField","defaultValue","required","onChange","e","value","email","onCancel","DefaultButton","paddingLeft","AppHeader","render","history","marginBottom","Helmet","path","getHeadTitle","pathname","PrivacyPolicyText","SignInButton","loggedIn","setLoggedIn","discordUser","setDiscordUser","setUser","userAvatar","setUserAvatar","joinServerAlertHidden","setJoinServerAlertHidden","registerUserShown","setRegisterUserShown","editProfileShown","setEditProfileShown","avatarUrl","setupLoggedInUser","LoggedInButtonDropdownItems","onItemClick","ev","item","LogOut","useTargetWidth","items","iconProps","reload","Dialog","hidden","dialogContentProps","DialogType","normal","subText","modalProps","isBlocking","main","DialogFooter","TooltipHost","content","username","delay","TooltipDelay","long","border","menuProps","Persona","size","PersonaSize","size40","imageUrl","largeHeader","calloutProps","gapSpace","closeDelay","Launch","useEffect","boxShadow","Signin","authResponse","URL","searchParams","get","atob","showRedirectLink","setShowRedirectLink","timer","clearTimeout","Label","ariaLive","visibility","categoryOptions","category","index","EditProjectDetailsForm","isPrivate","projectRequest","setProjectRequest","Pivot","PivotItem","headerText","maxLength","multiline","autoAdjustHeight","placeholder","disabled","editing","ComboBox","options","defaultSelectedKey","option","Checkbox","checked","CreateProjectForm","verified","setVerified","codeVerificationDisplayed","setCodeVerificationDisplayed","manualReviewMessageShown","setManualReviewMessageShown","setProjectData","projectDetails","ProjectCodeVerifier","VerficationState","storeIdTeachingBubbleTarget","setStoreIdTeachingBubbleTarget","setStoreId","verificationCodeText","setVerificationCodeText","PreInit","verificationState","setVerificationState","errorMessage","setErrorMessage","BeginVerification","validateStoreIdField","WaitingForCode","response","console","checkVerification","Verified","hideStoreIdTeachingBubbleTimeout","tick","onTimeout","init","clear","cleared","showStoreIdTeachingButton","event","nativeEvent","hideStoreIdTeachingButton","onStoreIDTextFieldKeyPress","onVerificationCodeTextFieldKeyPress","TeachingBubble","directionalHintFixed","directionalHint","DirectionalHint","topAutoEdge","onMouseLeave","onMouseOver","grow","onKeyPress","field","minWidth","needsManualReview","DashboardHeader","header","Dashboard","welcomeMessage","setWelcomeMessage","userIcon","setUserIcon","roles","setRoles","appRegistrationShown","setAppRegistrationShown","devRegistrationShown","setDevRegistrationShown","apps","setApps","getUserApps","PersonaDark","DashboardColumnFiller","extraLarge","marginLeft","textDecoration","Icon","userSelect","NotFound","renderers","heading","level","children","1","2","3","headerType","as","getMarkdown","memoize","req","markdown","createMarkdownPage","filename","default","verticalFill","source","library","add","fab","faDiscord","faMedium","faGithub","fas","faGlobe","faArrowCircleDown","AppHeaderWithRouter","withRouter","PrivacyPolicy","dynamicImport","LoadableComponent","loadable","memo","PrerenderedComponent","live","load","prerenderedLoader","App","basename","component","initializeIcons","rootElement","getElementById","hasChildNodes","hydrate"],"mappings":"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","file":"static/js/main.a07ec2e4.chunk.js","sourcesContent":["import { backendHost } from \"../const\";\r\nimport { isLocalhost, fetchBackend } from \"../helpers\";\r\n\r\nexport const uwpCommunityGuildId = 372137812037730304;\r\nexport const developerRoleId = 372142246625017871;\r\n\r\nexport const discordAuthEndpoint = (\r\n    isLocalhost ?\r\n        `https://discordapp.com/api/oauth2/authorize?client_id=611491369470525463&redirect_uri=http%3A%2F%2Flocalhost%3A5000%2Fsignin%2Fredirect&response_type=code&scope=identify%20guilds`\r\n        :\r\n        `https://discordapp.com/api/oauth2/authorize?client_id=611491369470525463&redirect_uri=http%3A%2F%2Fuwpcommunity-site-backend.herokuapp.com%2Fsignin%2Fredirect&response_type=code&scope=identify%20guilds`\r\n);\r\n\r\nexport const AuthData = {\r\n    Get: GetDiscordAuthData,\r\n    Set: SetDiscordAuthData,\r\n    Clear: ClearDiscordAuthData\r\n};\r\n\r\nexport function GetDiscordAuthData(): IDiscordAuthResponse | undefined {\r\n    const authData = localStorage.getItem(\"discordAuthData\");\r\n    if (!authData) return;\r\n    return JSON.parse(authData);\r\n}\r\n\r\nexport function SetDiscordAuthData(data: IDiscordAuthResponse) {\r\n    if (!data) return;\r\n    localStorage.setItem(\"discordAuthData\", JSON.stringify(data));\r\n}\r\n\r\nexport function ClearDiscordAuthData() {\r\n    localStorage.removeItem(\"discordAuthData\");\r\n}\r\n\r\nexport async function RefreshTokenIfNeeded() {\r\n    const UnixTime: number = Math.round((new Date()).getTime() / 1000);\r\n    let auth = AuthData.Get();\r\n\r\n    if (!auth) return;\r\n\r\n    if (auth.expires_at && auth.expires_at < UnixTime) {\r\n        let refreshData: IDiscordAuthResponse = await (await fetch(`https://${backendHost}/signin/refresh?refreshToken=${auth.refresh_token}`)).json();\r\n\r\n        if (refreshData.expires_in) refreshData.expires_at = UnixTime + refreshData.expires_in;\r\n\r\n        SetDiscordAuthData(refreshData);\r\n    }\r\n}\r\n\r\nexport async function IsUserInServer(): Promise<boolean> {\r\n    await RefreshTokenIfNeeded();\r\n\r\n    const Auth = AuthData.Get();\r\n    if (!Auth) throw new Error(\"No auth data found\");\r\n\r\n    const Req = await fetch(\"https://discordapp.com/api/v6/users/@me/guilds\", {\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + Auth.access_token\r\n        }\r\n    });\r\n    if (Req.status !== 200) return true; // If something goes wrong, give the benefit of the doubt\r\n\r\n    const Response: IDiscordGuild[] = await Req.json();\r\n\r\n    return Response.filter(server => server.id === \"372137812037730304\").length > 0;\r\n}\r\n\r\nexport let CurrentUser: IDiscordUser;\r\nexport async function GetCurrentDiscordUser(): Promise<IDiscordUser | undefined> {\r\n    if (CurrentUser) return CurrentUser;\r\n\r\n    const Auth = AuthData.Get();\r\n    if (!Auth) return;\r\n\r\n    const Req = await fetch(\"https://discordapp.com/api/v6/users/@me\", {\r\n        headers: {\r\n            \"Authorization\": \"Bearer \" + Auth.access_token\r\n        }\r\n    });\r\n    if (!Req || Req.status !== 200) return;\r\n    CurrentUser = await Req.json();\r\n    return CurrentUser;\r\n}\r\n\r\nexport async function GetUserRoles(user: IDiscordUser): Promise<string[] | undefined> {\r\n    user = user || await GetCurrentDiscordUser();\r\n\r\n    const request = await fetchBackend(\"bot/user/roles\", \"GET\");\r\n\r\n    if (request && request.status === 200) {\r\n        const result: IDiscordRoleData[] = await request.json();\r\n\r\n        return result.map(role => role.name);\r\n    }\r\n}\r\n\r\nexport async function AssignUserRole(roleName: string, user?: IDiscordUser) {\r\n    return await fetchBackend(\"bot/user/roles\", \"PUT\", { role: roleName });\r\n}\r\n\r\nexport async function GetUserAvatar(user?: IDiscordUser): Promise<string | undefined> {\r\n    user = user || await GetCurrentDiscordUser();\r\n    if (!user) return;\r\n    return `https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png`;\r\n}\r\n\r\nexport interface IDiscordUser {\r\n    \"username\": string;\r\n    \"locale\"?: string;\r\n    \"premium_type\"?: number;\r\n    \"mfa_enabled\": boolean;\r\n    \"flags\"?: number;\r\n    \"avatar\": string;\r\n    \"discriminator\": string;\r\n    \"id\": string;\r\n}\r\n\r\nexport interface IDiscordRoleData {\r\n    deleted: boolean;\r\n    id: string;\r\n    name: string;\r\n    color: number;\r\n    hoist: boolean;\r\n    position: number;\r\n    permissions: number;\r\n    managed: boolean;\r\n    mentionable: boolean;\r\n}\r\n\r\nexport interface IDiscordGuildMember {\r\n    /** @summary the user this guild member represents */\r\n    user: IDiscordUser;\r\n    /** @summary this users guild nickname (if one is set) */\r\n    nick?: string;\r\n    /** @summary array of role object ids @type Snowflake[] */\r\n    roles: string[];\r\n    /** @summary when the user joined the guild */\r\n    joined_at: string;\r\n    /** @summary when the user used their Nitro boost on the server */\r\n    premium_since?: string;\r\n    /** @summary whether the user is deafened in voice channels */\r\n    deaf: boolean;\r\n    /** @summary whether the user is muted in voice channels */\r\n    mute: boolean;\r\n};\r\n\r\nexport interface IDiscordGuild {\r\n    \"owner\": boolean,\r\n    \"permissions\": number,\r\n    \"icon\": string,\r\n    \"id\": string,\r\n    \"name\": string;\r\n}\r\n\r\nexport interface IDiscordAuthResponse {\r\n    \"access_token\": string;\r\n    \"token_type\": \"Bearer\";\r\n    \"expires_in\": number;\r\n    \"expires_at\"?: number;\r\n    \"refresh_token\": string;\r\n    \"scope\": string;\r\n}","import { isLocalhost } from \"./helpers\";\r\n\r\nexport const Links = {\r\n  thisSiteRepo: \"https://github.com/UWPCommunity/uwpcommunity.github.io/\",\r\n  launch2019Medium: \"https://medium.com/@Arlodottxt/launch-2019-7efd37cc0877\",\r\n  discordServerInvite: \"https://discord.gg/eBHZSKG\",\r\n  githubOrganization: \"https://github.com/UWPCommunity/\"\r\n};\r\n\r\nexport const Images = {\r\n  discordChatExample: \"/assets/img/discordchatexample.png\",\r\n  githubOrgScreenshot: \"/assets/img/githuborgscreenshot.png\",\r\n  launchHeroImage: \"/assets/img/LaunchHero.png\",\r\n  launchHeroImageHD: \"/assets/img/LaunchHeroHD.png\",\r\n  launchAppsHero: \"/assets/img/LaunchAppsHero.png\",\r\n\r\n  uwpCommunityLogo: \"/assets/img/uwpCommunityLogo.png\",\r\n  Badges: {\r\n    msstore: \"/assets/img/msstoreBadge.svg\",\r\n    github: \"/assets/img/githubBadge.svg\",\r\n    discord: \"/assets/img/discordBadge.svg\"\r\n  }\r\n};\r\n\r\nexport const MicrosoftStoreAppCategories = [\r\n  \"Books & reference\",\r\n  \"Business\",\r\n  \"Developer tools\",\r\n  \"Education\",\r\n  \"Entertainment\",\r\n  \"Food & dining\",\r\n  \"Government & politics\",\r\n  \"Kids & family\",\r\n  \"Lifestyle\",\r\n  \"Medical\",\r\n  \"Multimedia design\",\r\n  \"Music\",\r\n  \"Navigation & maps\",\r\n  \"News & weather\",\r\n  \"Personal finance\",\r\n  \"Personalization\",\r\n  \"Photo & video\",\r\n  \"Productivity\",\r\n  \"Security\",\r\n  \"Shopping\",\r\n  \"Social\",\r\n  \"Sports\",\r\n  \"Travel\",\r\n  \"Utilities & tools\"\r\n];\r\n\r\nexport const backendHost: string = (\r\n  isLocalhost ? \"localhost:5000\" : \"uwpcommunity-site-backend.herokuapp.com\"\r\n); ","import { AuthData, GetCurrentDiscordUser } from \"./services/discord\";\r\nimport { backendHost } from \"./const\";\r\n\r\nexport const getStoreUrl = (id: string) => {\r\n    return `https://www.microsoft.com/store/apps/${id}`;\r\n}\r\n\r\nexport const getGithubUrl = (id: string) => {\r\n    return `https://www.github.com/${id}`;\r\n}\r\n\r\nexport const getDiscordUrl = (id: string) => {\r\n    return `https://www.discord.gg/${id}`;\r\n}\r\n\r\nexport const getHeadTitle = (path: string) => {\r\n    let title = \"UWP Community\"\r\n    switch (path) {\r\n        case \"/\":\r\n            title = title + \" // Home\"\r\n            break;\r\n        case \"/projects\":\r\n            title = title + \" // Projects\"\r\n            break;\r\n        case \"/launch\":\r\n            title = title + \" // Launch\"\r\n            break;\r\n        case \"/dashboard\":\r\n            title = title + \" // Dashboard\"\r\n            break;\r\n        case \"/signin\":\r\n            title = title + \" // Sign in\"\r\n            break;\r\n        default:\r\n            title = title + \" // 404\"\r\n            break;\r\n    }\r\n    return title\r\n}\r\nexport const isLocalhost = window.location.host.includes(\"localhost\") || navigator.userAgent.includes(\"ReactSnap\");\r\n\r\nexport const isReactSnap = navigator.userAgent.includes(\"ReactSnap\");\r\n\r\nexport async function fetchBackend(route: string, method: (\"GET\" | \"POST\" | \"PUT\" | \"DELETE\"), requestBody?: any): Promise<Response> {\r\n    let headers: string[][] = [[\"Content-Type\", \"application/json\"]];\r\n\r\n    let authData = await AuthData.Get();\r\n    if (authData) headers.push([\"authorization\", authData.access_token])\r\n\r\n    let protocol = isLocalhost ? \"http\" : \"https\";\r\n    let url = `${protocol}://${backendHost}/${route}`;\r\n\r\n    return await fetch(url, {\r\n        headers: headers,\r\n        method: method,\r\n        body: JSON.stringify(requestBody)\r\n    });\r\n}\r\n/**\r\n * @summary Get the first matching regex group, instead of an array with the full string and all matches\r\n * @param {string} toMatch  \r\n * @param {regex} regex \r\n * @returns {string} First matching regex group\r\n */\r\nexport function match(toMatch: string, regex: RegExp) {\r\n    let m = regex.exec(toMatch);\r\n    return (m && m[1]) ? m[1] : undefined;\r\n}\r\nexport async function ObjectToPathQuery(data: object) {\r\n    let queryString: string = \"\";\r\n    for (let [key, value] of Object.entries(data)) {\r\n        queryString += `${key}=${value}&`;\r\n    }\r\n    // If the last character is an \"&\", remove it\r\n    if (queryString.charAt(queryString.length - 1) === \"&\") queryString = queryString.slice(0, -1);\r\n    return queryString;\r\n}\r\nexport default {\r\n    getDiscordUrl, getGithubUrl, getStoreUrl\r\n}","import { IUser } from \"./users\";\r\nimport { fetchBackend, ObjectToPathQuery, match, isReactSnap } from \"../helpers\";\r\nimport { useState } from \"react\";\r\n\r\nexport async function CreateProject(projectData: ICreateProjectsRequestBody): Promise<Response> {\r\n    // Reformat microsoft store links to an international format\r\n    if (projectData.downloadLink) {\r\n        const storeId = match(projectData.downloadLink, /http.*microsoft\\..*([\\w\\d]{12})[\\/|?]?/);\r\n        if (storeId) {\r\n            projectData.downloadLink = `https://www.microsoft.com/store/apps/${storeId}`;\r\n        }\r\n    }\r\n    return await fetchBackend(\"projects\", \"POST\", projectData);\r\n}\r\nexport interface ICreateProjectsRequestBody {\r\n    role: \"Developer\" | \"Other\"; // Only a developer or \"Other\" (manager, etc) can create a new project\r\n    appName: string;\r\n    category: string;\r\n    description: string;\r\n    isPrivate: boolean;\r\n    downloadLink?: string;\r\n    githubLink?: string;\r\n    externalLink?: string;\r\n    launchYear: number;\r\n    awaitingLaunchApproval: boolean;\r\n    needsManualReview: boolean;\r\n    heroImage: string;\r\n    lookingForRoles: string[];\r\n}\r\n\r\n\r\nexport async function ModifyProject(projectData: IModifyProjectsRequestBody, queryData: IModifyProjectRequestQuery) {\r\n    return await fetchBackend(`projects?${ObjectToPathQuery(queryData)}`, \"POST\", projectData);\r\n}\r\n\r\nexport async function GetProjectByDiscordId(discordId: string): Promise<IProject[]> {\r\n    return (await fetchBackend(`projects?discordId=${discordId}`, \"GET\")).json();\r\n}\r\n\r\nexport async function GetAllProjects(): Promise<IProject[]> {\r\n    return (await fetchBackend(`projects`, \"GET\")).json();\r\n}\r\n\r\nexport async function GetLaunchProjects(year: number): Promise<IProject[]> {\r\n    return (await (await fetchBackend(`projects`, \"GET\")).json()).filter((project: IProject) => project.launchYear == year && project.awaitingLaunchApproval == false);\r\n}\r\n\r\nexport interface IProjectsState {\r\n    projects?: IProject[]\r\n    error?: Error\r\n    isLoading: boolean\r\n}\r\n\r\nexport function useProjects(year?: number): [IProjectsState, () => Promise<void>] {\r\n    const cacheKey = 'loadedProjects' + (year || '')\r\n    const cache: IProject[] = (window as any)[cacheKey]\r\n    const initialState: IProjectsState = { isLoading: false }\r\n\r\n    if (!isReactSnap && cache && cache.length) {\r\n        initialState.projects = cache\r\n    }\r\n    \r\n    const [res, setRes] = useState<IProjectsState>(initialState)\r\n\r\n    const getProjects = async () => {\r\n        setRes(prevState => ({ ...prevState, isLoading: true }))\r\n\r\n        let projects: IProject[]\r\n        try {\r\n            if (!year) {\r\n                projects = await GetAllProjects()\r\n            } else {\r\n                projects = await GetLaunchProjects(year)\r\n            }\r\n            setRes(prevState => ({ ...prevState, isLoading: false, projects }))\r\n\r\n            if (isReactSnap) {\r\n                var script = document.createElement(\"script\");\r\n                script.type = \"text/javascript\";\r\n                script.innerHTML = `window['${cacheKey}'] = ${JSON.stringify(projects)}`;\r\n                document.getElementsByTagName('head')[0].appendChild(script);\r\n            }\r\n        } catch (error) {\r\n            setRes(prevState => ({ ...prevState, isLoading: false, error }))\r\n        }\r\n    }\r\n\r\n    return [res, getProjects]\r\n}\r\n\r\ninterface IModifyProjectsRequestBody {\r\n    appName: string;\r\n    description?: string;\r\n    isPrivate: boolean;\r\n    category?: string;\r\n\r\n    downloadLink?: string;\r\n    githubLink?: string;\r\n    externalLink?: string;\r\n\r\n    collaborators?: IUser[];\r\n\r\n    launchYear?: number;\r\n    awaitingLaunchApproval: boolean;\r\n}\r\n\r\ninterface IModifyProjectRequestQuery {\r\n    /** @summary The app name that's being modified */\r\n    appName: string;\r\n}\r\n\r\nexport interface IProjectCollaborator extends IUser {\r\n    role: \"Developer\" | \"Translator\" | \"Beta Tester\" | \"Other\";\r\n}\r\nexport interface IProject {\r\n    id?: number;\r\n\r\n    appName: string;\r\n    description: string;\r\n    isPrivate: boolean;\r\n    downloadLink?: string;\r\n    githubLink?: string;\r\n    externalLink?: string;\r\n\r\n    heroImage: string;\r\n\r\n    awaitingLaunchApproval: boolean;\r\n    needsManualReview: boolean;\r\n    lookingForRoles?: string[];\r\n\r\n    collaborators: IProjectCollaborator[];\r\n\r\n    launchYear?: number;\r\n    category?: string;\r\n};\r\n","import { IProject } from \"../common/services/projects\";\r\nimport { DocumentCard, DocumentCardImage, ImageFit, DocumentCardDetails, DocumentCardTitle, Text, Stack, DocumentCardActions, IButtonProps, PrimaryButton } from \"office-ui-fabric-react\";\r\nimport * as React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nenum ButtonType {\r\n  Github, Download, External\r\n}\r\n\r\ninterface ICustomButtonRenderProps {\r\n  type: ButtonType;\r\n  link: string;\r\n}\r\nconst FaIconStyle: React.CSSProperties = {\r\n  color: \"black\",\r\n  height: \"25px\",\r\n  width: \"25px\"\r\n};\r\n\r\nexport interface IProjectCard {\r\n  project: IProject;\r\n  onEditButtonClicked?: Function;\r\n}\r\n\r\nexport const ProjectCard = (props: IProjectCard) => {\r\n  const [projectCardActions, setProjectCardActions] = React.useState<IButtonProps[]>([]);\r\n\r\n  React.useEffect(() => {\r\n    const projectCardsData: IButtonProps[] = [];\r\n\r\n    if (props.project.downloadLink) {\r\n      projectCardsData.push({\r\n        data: {\r\n          type: ButtonType.Download,\r\n          link: props.project.downloadLink\r\n        },\r\n        href: props.project.downloadLink,\r\n        onRenderIcon: onRenderIcon\r\n      });\r\n    }\r\n\r\n    if (props.project.githubLink) {\r\n      projectCardsData.push({\r\n        data: {\r\n          type: ButtonType.Github,\r\n          link: props.project.githubLink\r\n        },\r\n        href: props.project.githubLink,\r\n        onRenderIcon: onRenderIcon\r\n      });\r\n    }\r\n\r\n    if (props.project.externalLink) {\r\n      projectCardsData.push({\r\n        data: {\r\n          type: ButtonType.External,\r\n          link: props.project.externalLink\r\n        },\r\n        href: props.project.externalLink,\r\n        onRenderIcon: onRenderIcon\r\n      });\r\n    }\r\n\r\n    setProjectCardActions(projectCardsData);\r\n\r\n  }, [props.project.githubLink, props.project.externalLink, props.project.downloadLink]);\r\n\r\n  function onRenderIcon(buttonProps: IButtonProps | undefined) {\r\n    if (!buttonProps) return null;\r\n    const buttonData: ICustomButtonRenderProps = buttonProps.data;\r\n    if (!buttonData.link) return null;\r\n\r\n    switch (buttonData.type.valueOf()) {\r\n      case ButtonType.Download:\r\n        if (buttonData.link && buttonData.link.includes(\"microsoft.com\")) {\r\n          return <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"microsoft\"]} />\r\n        } else {\r\n          return <FontAwesomeIcon style={FaIconStyle} icon=\"arrow-circle-down\" />\r\n        }\r\n      case ButtonType.External:\r\n        return <FontAwesomeIcon style={FaIconStyle} icon={[\"fas\", \"globe\"]} />\r\n      case ButtonType.Github:\r\n        return <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"github\"]} />\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <DocumentCard style={{ width: 275 }}>\r\n      <DocumentCardImage height={150} imageFit={ImageFit.centerCover} imageSrc={props.project.heroImage} />\r\n      <DocumentCardDetails>\r\n        <DocumentCardTitle styles={{ root: { padding: 5, height: \"auto\" } }} title={props.project.appName} />\r\n        <Stack tokens={{ padding: 10 }}>\r\n          <Text style={{ overflowY: \"auto\", height: 60 }}>{props.project.description}</Text>\r\n        </Stack>\r\n        <Stack horizontal tokens={{ childrenGap: 5, padding: 5 }} verticalAlign=\"center\">\r\n          {props.onEditButtonClicked !== undefined ? <PrimaryButton onClick={() => { if (props.onEditButtonClicked) props.onEditButtonClicked() }}>Edit</PrimaryButton> : <></>}\r\n\r\n          <DocumentCardActions styles={{ root: { padding: 0 } }} actions={projectCardActions} />\r\n        </Stack>\r\n      </DocumentCardDetails>\r\n    </DocumentCard>\r\n  )\r\n}","import * as React from \"react\";\r\nimport { Stack, Text, FontIcon, Spinner, ProgressIndicator } from \"office-ui-fabric-react\";\r\nimport { useProjects } from \"../common/services/projects\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\n\r\nexport const Projects: React.StatelessComponent = () => {\r\n  const [state, getProjects] = useProjects();\r\n\r\n  React.useEffect(() => {\r\n    getProjects();\r\n  }, []);\r\n\r\n  return (\r\n    /* Todo: Add a header with brief explanation of the below */\r\n    <>\r\n      <Stack horizontalAlign=\"center\" horizontal wrap tokens={{ childrenGap: 10 }}>\r\n        {!state.projects && state.isLoading &&\r\n          <Stack horizontalAlign=\"center\" style={{ marginTop: \"25vh\" }}>\r\n            <Spinner label=\"Loading Projects...\" />\r\n          </Stack>\r\n        }\r\n        {state.error && (\r\n          <Stack horizontalAlign=\"center\" style={{ marginTop: \"25vh\" }}>\r\n            <FontIcon iconName=\"sad\" style={{ fontSize: 55 }}></FontIcon>\r\n            <Text variant=\"xLarge\">An error occured getting projects</Text>\r\n          </Stack>      \r\n        )}\r\n        {state.projects && (\r\n          state.projects.length > 0 ? state.projects.map((project, i) => (\r\n            <ProjectCard key={i} project={project}></ProjectCard>\r\n          )) : (\r\n            <Stack horizontalAlign=\"center\" style={{ marginTop: \"25vh\" }}>\r\n              <FontIcon iconName=\"sad\" style={{ fontSize: 55 }}></FontIcon>\r\n              <Text variant=\"xLarge\">No projects, yet</Text>\r\n            </Stack>\r\n          )\r\n        )}\r\n      </Stack>\r\n      \r\n      {state.projects && state.isLoading && (\r\n        <ProgressIndicator />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\n\r\nexport default styled.div`\r\n    box-shadow: ${Depths.depth8};\r\n    :hover {\r\n      box-shadow: ${Depths.depth16};\r\n    };\r\n    transition: 150ms all;\r\n`;","import React, { CSSProperties } from \"react\";\r\nimport { Stack, Text, PrimaryButton, Image, ImageFit, ImageCoverStyle } from \"office-ui-fabric-react\";\r\nimport { Links, Images } from \"../common/const\";\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport HoverBox from '../components/HoverBox';\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\n\r\nconst FaIconStyle: CSSProperties = {\r\n  color: \"black\",\r\n  height: \"65px\",\r\n  width: \"65px\"\r\n};\r\n\r\nconst LinkCard = styled.section`\r\n    font-family: Segoe UI, sans-serif;\r\n    padding: 7px;\r\n    max-width: 400px;\r\n`;\r\n\r\nlet Link = styled.a`\r\n    color: blue;\r\n    width: fit-content;\r\n    text-decoration: none;\r\n    :hover {\r\n      text-decoration: underline;\r\n    };\r\n`;\r\n\r\nlet Img = styled.img`\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n`;\r\n\r\nconst LargeCard = styled.div`\r\nbox-shadow: ${Depths.depth16};\r\n.heroImage, .heroImage img {\r\n  width: 720px;\r\n  height: 350px;\r\n}\r\n\r\n@media screen and (max-width: 1479px) {\r\n  width: min-content;\r\n  .heroImage, .heroImage img {\r\n      width: 850px;\r\n      height: 350px;\r\n  }\r\n}\r\n`;\r\n\r\nexport const Home: React.StatelessComponent = () => {\r\n  return (\r\n    <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n      <p style={{ fontFamily: \"Segoe UI, Sans-Serif\", fontWeight: \"lighter\", fontSize: \"24px\", margin: 0 }}>The homepage for the unofficial Discord server </p>\r\n\r\n      <Stack wrap horizontal horizontalAlign=\"space-around\" tokens={{ childrenGap: 25 }}>\r\n\r\n        <LargeCard>\r\n          <Stack horizontal wrap maxWidth=\"1400px\" horizontalAlign=\"space-evenly\">\r\n            <Image className=\"heroImage\" coverStyle={ImageCoverStyle.landscape} imageFit={ImageFit.cover} src={Images.launchAppsHero} />\r\n\r\n            <Stack style={{ margin: \"15px\" }} verticalAlign=\"center\">\r\n              <Text variant=\"xLargePlus\">Project registration now open!</Text>\r\n              <Text variant=\"mediumPlus\">Register your apps/projects to showcase on our website and participate in Launch 2020!</Text>\r\n              <PrimaryButton href=\"/dashboard\" style={{ marginTop: \"15px\", width: 150 }} text=\"Get started\" />\r\n            </Stack>\r\n          </Stack>\r\n        </LargeCard>\r\n\r\n        <Stack wrap horizontal horizontalAlign=\"space-around\" tokens={{ childrenGap: 15 }}>\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.discordChatExample} />\r\n\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>Discuss the platform with other enthusiasts, get help as a developer, and interact with the devs of your favorite apps</Text>\r\n                    <Link href={Links.discordServerInvite} target=\"_blank\"> Join our discord server </Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"discord\"]} />\r\n                </Stack>\r\n\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.githubOrgScreenshot} />\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>Many of our projects are open source, so others can learn or build with them</Text>\r\n                    <Link href={Links.githubOrganization} target=\"_blank\">See our open source projects</Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"github\"]} />\r\n                </Stack>\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n          <HoverBox>\r\n            <LinkCard>\r\n              <Stack>\r\n                <Img src={Images.launchHeroImage} />\r\n                <Stack horizontal verticalAlign=\"center\" horizontalAlign=\"center\" tokens={{ childrenGap: 7 }}>\r\n                  <Stack style={{ margin: \"10px\" }} tokens={{ childrenGap: 10 }}>\r\n                    <Text>As a community of talented developers, each year we Launch our projects together in an annual event known as <code>Launch</code></Text>\r\n                    <Link href={Links.launch2019Medium} target=\"_blank\">Read about Launch 2019</Link>\r\n                  </Stack>\r\n                  <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"medium\"]} />\r\n                </Stack>\r\n              </Stack>\r\n            </LinkCard>\r\n          </HoverBox>\r\n\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n","import React, { CSSProperties } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Text, Stack } from \"office-ui-fabric-react\";\r\n\r\nconst navLinkActiveStyle: CSSProperties = {\r\n  borderBottom: \"3px solid #5e5eff\",\r\n};\r\n\r\nconst MyNavLink = styled(NavLink)`     \r\n   color: black;\r\n   padding: 10px 12px 5px 12px;\r\n   text-align: center;\r\n   display: inline-block;\r\n   text-decoration: none;\r\n   margin: 7px;\r\n   border-bottom: 3px solid #c9c9c9;\r\n\r\n  :hover  {\r\n    text-decoration: none;    \r\n    border-bottom: 3px solid #9e9e9e;\r\n  };\r\n`;\r\n\r\nconst NavText = styled(Text)`\r\n  font-size: 18px;\r\n`;\r\n\r\nexport class NavMenu extends React.Component<any, any> {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <nav>\r\n        <Stack horizontal wrap style={{ maxWidth: \"100%\" }}>\r\n          <MyNavLink to=\"/\" exact activeStyle={navLinkActiveStyle}>\r\n            <NavText>Home</NavText>\r\n          </MyNavLink>\r\n          <MyNavLink to=\"/projects\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Projects</NavText>\r\n          </MyNavLink>\r\n          <MyNavLink to=\"/launch\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Launch</NavText>\r\n          </MyNavLink>\r\n          {/* Present but not shown, so it gets crawled */}\r\n          <MyNavLink style={{ display: \"none\" }} to=\"/dashboard\" activeStyle={navLinkActiveStyle}>\r\n            <NavText>Dashboard</NavText>\r\n          </MyNavLink>\r\n        </Stack>\r\n      </nav>\r\n    );\r\n  }\r\n}","import { fetchBackend } from \"../helpers\";\r\n\r\nexport async function CreateUser(userData: IUser): Promise<Response> {\r\n    return await fetchBackend(\"user\", \"POST\", userData);\r\n}\r\n\r\nexport async function ModifyUser(userData: IUser) {\r\n    return await fetchBackend(\"user\", \"PUT\", userData);\r\n}\r\n\r\nexport async function GetUser(discordId: string) {\r\n    return await fetchBackend(`user?discordId=${discordId}`, \"GET\");\r\n}\r\n\r\nexport interface IUser {\r\n    name: string;\r\n    discordId: string;\r\n    email?: string; // This is a contact email supplied by the user, and is safe to be public \r\n}","import { Text, Stack, PrimaryButton, TextField, DefaultButton } from \"office-ui-fabric-react\";\r\nimport React from \"react\";\r\nimport { IBackendReponseError } from \"../../common/interfaces\";\r\nimport { CreateUser, IUser, ModifyUser } from \"../../common/services/users\";\r\nimport { CurrentUser } from \"../../common/services/discord\";\r\n\r\nexport interface IRegisterDevProps {\r\n    onCancel?: Function;\r\n    onSuccess: Function;\r\n    userData?: Partial<IUser>;\r\n};\r\n\r\nexport const RegisterUserForm = (props: IRegisterDevProps) => {\r\n    let [userRequest, setUserRequest] = React.useState<IUser>({\r\n        discordId: CurrentUser.id,\r\n        name: \"\"\r\n    });\r\n\r\n    let [submissionError, setSubmissionError] = React.useState<string>(\"\");\r\n    let [showSuccessIndicator, setShowSuccessIndicator] = React.useState(false);\r\n\r\n    /* Todo: Attempt to find an existing user in the DB and set this according, then prepopulate the fields below */\r\n    let [modifying] = React.useState(false);\r\n\r\n    async function addUser() {\r\n        if (!userRequest) return;\r\n\r\n        let request = modifying ? await ModifyUser(userRequest)\r\n            : await CreateUser(userRequest);\r\n\r\n        let success = await request.status === 200;\r\n\r\n        if (!success) {\r\n            let error: IBackendReponseError = await request.json();\r\n            if (error.error && error.reason) {\r\n                setSubmissionError(error.reason);\r\n            }\r\n        } else {\r\n            setShowSuccessIndicator(true);\r\n            setTimeout(() => {\r\n                props.onSuccess();\r\n            }, 2500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n            {/* Need to toggle both src and display so it trigger the animation, and space is taken up during the transition (while the svg loads) */}\r\n            <img style={{ display: (showSuccessIndicator ? \"block\" : \"none\"), height: \"200px\" }} src={showSuccessIndicator ? \"/assets/img/checkanimated.svg\" : \"\"} alt=\"Check\" />\r\n            <Stack horizontalAlign=\"start\" tokens={{ childrenGap: 10 }} style={{ maxWidth: \"100%\", width: \"300px\", display: (!showSuccessIndicator ? \"block\" : \"none\") }}>\r\n                <TextField label=\"Name:\"\r\n                    description=\"Friendly name for other users/devs to see\"\r\n                    defaultValue={props.userData ? props.userData.name : \"\"}\r\n                    styles={{ root: { width: \"100%\" } }}\r\n                    required\r\n                    onChange={(e: any, value: any) => setUserRequest({ ...userRequest, name: value })} />\r\n\r\n                <TextField label=\"Contact email:\"\r\n                    description=\"Optional\"\r\n                    defaultValue={props.userData ? props.userData.email : \"\"}\r\n                    styles={{ root: { width: \"100%\" } }}\r\n                    onChange={(e: any, value: any) => setUserRequest({ ...userRequest, email: value })} />\r\n\r\n                <Text style={{ color: \"red\" }}>{submissionError}</Text>\r\n                <Stack horizontal tokens={{ childrenGap: 10 }}>\r\n                    <PrimaryButton text=\"Register\"\r\n                        onClick={addUser} />\r\n                    {\r\n                        props.onCancel ?\r\n                            <DefaultButton text=\"Cancel\" onClick={() => props.onCancel ? props.onCancel() : undefined} />\r\n                            : \"\"\r\n                    }\r\n                </Stack>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n};","import * as React from \"react\";\r\nimport { Stack, Link, Text, PrimaryButton, Persona, TooltipHost, TooltipDelay, DefaultButton, IContextualMenuProps, IContextualMenuItem, PersonaSize, Dialog, DialogFooter, DialogType } from \"office-ui-fabric-react\";\r\nimport { Images, Links } from \"../common/const\";\r\nimport { NavMenu } from \"./NavMenu\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CSSProperties } from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { GetUserAvatar, GetCurrentDiscordUser, IDiscordUser, AuthData, IsUserInServer, discordAuthEndpoint } from \"../common/services/discord\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getHeadTitle } from \"../common/helpers\";\r\nimport { History } from \"history\";\r\nimport { RegisterUserForm } from \"./forms/RegisterUser\";\r\nimport { GetUser, IUser } from \"../common/services/users\";\r\n\r\nconst FaIconStyle: CSSProperties = {\r\n  color: \"white\",\r\n  height: \"20px\",\r\n  width: \"20px\",\r\n  paddingLeft: \"10px\"\r\n};\r\n\r\nexport const AppHeader: React.StatelessComponent = (props: any) => {\r\n  return (\r\n    <Route render={({ history }) => (\r\n      <header style={{ marginBottom: \"10px\", maxWidth: \"98vw\" }}>\r\n        <Stack style={{ width: \"100vw\", margin: \"0px\" }} horizontal wrap tokens={{ childrenGap: 10 }} verticalAlign='end' horizontalAlign=\"space-around\">\r\n          <Helmet>\r\n            <title>{getHeadTitle(props.location.pathname)}</title>\r\n          </Helmet>\r\n          <Link href=\"/\">\r\n            {/* This is an img and not an Image from FabricUI because when rendered on the live server, the image randomly doesn't show */}\r\n            <img style={{ maxWidth: \"100vw\" }} src={Images.uwpCommunityLogo} alt=\"Uwp Community Logo\" />\r\n          </Link>\r\n\r\n          <NavMenu />\r\n\r\n          <SignInButton history={history} />\r\n        </Stack>\r\n\r\n      </header>\r\n    )} />\r\n  );\r\n};\r\n\r\nconst PrivacyPolicyText: React.StatelessComponent = () => <p>Make sure you've read the <NavLink to=\"/privacy-policy\">Privacy Policy</NavLink> first -- by logging in, you agree to accept this policy.</p>\r\n\r\nexport const SignInButton: React.FC<{ history: History }> = ({ history }) => {\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n  const [discordUser, setDiscordUser] = React.useState<IDiscordUser>();\r\n  const [user, setUser] = React.useState<IUser>();\r\n  const [userAvatar, setUserAvatar] = React.useState<string>();\r\n  const [joinServerAlertHidden, setJoinServerAlertHidden] = React.useState(true);\r\n  const [registerUserShown, setRegisterUserShown] = React.useState(false);\r\n  const [editProfileShown, setEditProfileShown] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setupLoggedInUser();\r\n  }, []);\r\n\r\n  async function setupLoggedInUser() {\r\n    const discordUser = await GetCurrentDiscordUser();\r\n    const avatarUrl = await GetUserAvatar(discordUser);\r\n\r\n    if (!discordUser || !avatarUrl) return;\r\n    setLoggedIn(true);\r\n    setDiscordUser(discordUser);\r\n\r\n    let userIsInServer = await IsUserInServer();\r\n    if (!userIsInServer) {\r\n      setJoinServerAlertHidden(false);\r\n      return;\r\n    }\r\n\r\n    const userRequest = await GetUser(discordUser.id);\r\n    if (userRequest.status === 404) {\r\n      // User isn't registered\r\n      setRegisterUserShown(true);\r\n      return;\r\n    }\r\n    if (userRequest && userRequest.status !== 200) throw new Error(await userRequest.text());\r\n\r\n    let user: IUser = await userRequest.json();\r\n\r\n    setUser(user);\r\n    setUserAvatar(avatarUrl);\r\n  }\r\n\r\n  const LoggedInButtonDropdownItems: IContextualMenuProps = {\r\n    onItemClick: OnMenuItemClick,\r\n    useTargetWidth: true,\r\n    items: [{\r\n      key: \"dashboard\",\r\n      text: \"Dashboard\",\r\n      iconProps: { iconName: \"ViewDashboard\" }\r\n    }, {\r\n      /* Todo: Only show this button if the user HAS a profile to edit */\r\n      key: \"editProfile\",\r\n      text: \"Edit Profile\",\r\n      iconProps: { iconName: \"EditContact\" }\r\n    }, {\r\n      key: \"logOut\",\r\n      text: \"Log out\",\r\n      iconProps: { iconName: \"SignOut\" }\r\n    }]\r\n  }\r\n\r\n  function OnMenuItemClick(ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined, item?: IContextualMenuItem | undefined) {\r\n    if (!item) return;\r\n\r\n    switch (item.key) {\r\n      case \"logOut\":\r\n        LogOut();\r\n        break;\r\n      case \"dashboard\":\r\n        history.push(\"/dashboard\");\r\n        break;\r\n      case \"editProfile\":\r\n        setEditProfileShown(true);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function LogOut() {\r\n    AuthData.Clear();\r\n    history.push(\"/\");\r\n    window.location.reload();\r\n  }\r\n\r\n  function CloseJoinServerDialog() {\r\n    setJoinServerAlertHidden(true);\r\n    LogOut();\r\n  }\r\n\r\n\r\n  return (\r\n    loggedIn && discordUser ?\r\n      <Stack>\r\n        <Dialog\r\n          hidden={joinServerAlertHidden}\r\n          dialogContentProps={{\r\n            type: DialogType.normal,\r\n            title: \"Join the Community to continue\",\r\n            subText: \"Looks like you aren't part of the UWP Community. To sign in, you'll need to join the server first\"\r\n          }}\r\n          modalProps={{\r\n            isBlocking: true,\r\n            styles: { main: { maxWidth: 450 } }\r\n          }}\r\n        >\r\n          <DialogFooter>\r\n            <PrimaryButton href={Links.discordServerInvite} text=\"Join the server\" />\r\n            <DefaultButton onClick={CloseJoinServerDialog} text=\"Sign out\" />\r\n          </DialogFooter>\r\n        </Dialog>\r\n        <TooltipHost content={`Logged in as ${discordUser.username}`} delay={TooltipDelay.long}>\r\n          <DefaultButton style={{ padding: \"25px\", border: \"0px solid black\" }} menuProps={LoggedInButtonDropdownItems}>\r\n            <Persona size={PersonaSize.size40} text={discordUser.username} imageUrl={userAvatar} />\r\n          </DefaultButton>\r\n        </TooltipHost>\r\n\r\n        <Dialog hidden={!editProfileShown && !registerUserShown} dialogContentProps={{ type: DialogType.largeHeader, title: registerUserShown ? \"One more step\" : \"Edit profile\" }}>\r\n          {registerUserShown ?\r\n            <Text variant=\"large\">Complete your profile to get started</Text>\r\n            : <></>}\r\n          <RegisterUserForm userData={user} onSuccess={() => { setRegisterUserShown(false); setEditProfileShown(false) }} onCancel={!registerUserShown ? () => setEditProfileShown(false) : undefined} />\r\n        </Dialog>\r\n      </Stack>\r\n      :\r\n      <Stack verticalAlign=\"start\" style={{ marginBottom: \"22px\" }}>\r\n        <TooltipHost\r\n          content={<PrivacyPolicyText />}\r\n          id={'privacyPolicyHost'}\r\n          calloutProps={{ gapSpace: 0 }}\r\n          closeDelay={500}\r\n          delay={0}\r\n          styles={{ root: { display: 'inline-block' } }}\r\n        >\r\n          <PrimaryButton href={discordAuthEndpoint} style={{ padding: \"18px\" }}>\r\n            <Text>Sign in</Text>\r\n            <FontAwesomeIcon style={FaIconStyle} icon={[\"fab\", \"discord\"]} />\r\n          </PrimaryButton>\r\n      </TooltipHost>\r\n    </Stack>\r\n  );\r\n};","import React, { useState, CSSProperties } from \"react\";\r\nimport { Text, Stack, FontIcon, Spinner, Image, ImageCoverStyle, ImageFit, ProgressIndicator } from \"office-ui-fabric-react\";\r\nimport styled from 'styled-components';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport HoverBox from '../components/HoverBox';\r\nimport { Images } from \"../common/const\";\r\nimport { Depths } from \"@uifabric/fluent-theme/lib/fluent/FluentDepths\";\r\nimport { useProjects, IProject } from \"../common/services/projects\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\nimport { GetCurrentDiscordUser, IDiscordUser } from \"../common/services/discord\";\r\n\r\nexport const Launch = () => {\r\n    const [state, getProjects] = useProjects(2020);\r\n    const [user, setUser] = React.useState<IDiscordUser>();\r\n\r\n    React.useEffect(()=>{\r\n        getProjects();\r\n        (async () => {\r\n            setUser(await GetCurrentDiscordUser());\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <Stack tokens={{childrenGap: 25}}>\r\n            <Stack horizontal wrap style={{ boxShadow: Depths.depth16 }} maxWidth=\"1200px\">\r\n                <Image width=\"100%\" height=\"400px\" src={Images.launchAppsHero} coverStyle={ImageCoverStyle.landscape} imageFit={ImageFit.cover} />\r\n                <Stack style={{margin: \"20px\"}}>\r\n\r\n                    <Text style={{fontFamily: \"Segoe UI\", fontSize: \"30px\", fontWeight: \"lighter\"}}>// Launch</Text>\r\n\r\n                    <Text style={{marginTop: \"10px\", fontWeight: 500}} variant=\"xLarge\">Learn, develop, and Launch together</Text>\r\n                    <Text style={{marginTop: \"10px\"}} variant=\"mediumPlus\">Once a year, our community of Windows App developers join together to release their UWP-related projects. If you’re a developer, new or veteran, then we HIGHLY encourage you to join the server and register your app for the next Launch event!</Text>\r\n                    <Text style={{marginTop: \"10px\"}} variant=\"large\">{ user ? \"Go to your dashboard to get started\" : \"\"}</Text>\r\n                </Stack>\r\n            </Stack>\r\n\r\n            {state.projects && state.projects.length ? <Text variant=\"xLarge\">Launch 2020 Participants</Text> : <></>}\r\n            <Stack horizontal wrap horizontalAlign=\"center\" tokens={{childrenGap: 25}}>\r\n                {/* Todo: Add launch 2019 summary */}\r\n                {state.projects && state.projects.length && state.projects.map((project, i) => <ProjectCard key={i} project={project} />)}\r\n                {!state.projects && state.isLoading && <Spinner label=\"Checking for Launch 2020 Participants\" />}\r\n                {state.error && (\r\n                    <Stack horizontalAlign=\"center\">\r\n                        <FontIcon iconName=\"sad\" style={{ fontSize: 55 }}></FontIcon>\r\n                        <Text variant=\"xLarge\">An error occured getting launch participants</Text>\r\n                    </Stack>\r\n                )}\r\n            </Stack>\r\n\r\n            {state.projects && state.isLoading && (\r\n                <ProgressIndicator />\r\n            )}\r\n        </Stack>\r\n    );\r\n};\r\n\r\ninterface ILaunchCardProps {\r\n    header: string;\r\n    description: string;\r\n    path: string;\r\n    buttonText?: string;\r\n    buttonDisabled?: boolean;\r\n    buttonStyle?: CSSProperties;\r\n};\r\n\r\nconst LaunchCardStyle = styled(HoverBox)`\r\n    max-height: 500px;\r\n    max-width: 350px;\r\n    padding: 50px;\r\n    :hover {\r\n                pointer: cursor;\r\n        };\r\n    `;\r\n\r\n","import { Text, Stack, Label, Spinner } from \"office-ui-fabric-react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { AuthData } from \"../common/services/discord\";\r\n\r\nexport const Signin: React.FC<any> = () => {\r\n\r\n    let authResponse: string | null = (new URL(window.location.href)).searchParams.get(\"authResponse\");\r\n\r\n    if (authResponse) {\r\n        authResponse = atob(authResponse);\r\n        AuthData.Set(JSON.parse(authResponse));\r\n\r\n        window.location.href = \"/dashboard\";\r\n    }\r\n\r\n    const [showRedirectLink, setShowRedirectLink] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setShowRedirectLink(true);\r\n        }, 7000);\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Stack>\r\n                <Stack horizontalAlign=\"center\">\r\n                    <Label>Signing in...</Label>\r\n                    <Spinner label=\"Hold on tight\" ariaLive=\"assertive\" />\r\n                    <Text style={{ visibility: showRedirectLink ? \"visible\" : \"hidden\" }}>If not redirected automatically, <a href=\"/dashboard\">click here</a></Text>\r\n                </Stack>\r\n            </Stack>\r\n        </div>\r\n    )\r\n};\r\n","import { Text, Stack, PrimaryButton, Checkbox, TextField, DefaultButton, IComboBoxOption, ComboBox, MaskedTextField, Pivot, PivotItem, IComboBox } from \"office-ui-fabric-react\";\r\nimport React, { FormEvent } from \"react\";\r\nimport { IBackendReponseError } from \"../../common/interfaces\";\r\nimport { CreateProject, ICreateProjectsRequestBody, IProject } from \"../../common/services/projects\";\r\nimport { MicrosoftStoreAppCategories } from \"../../common/const\";\r\n\r\nexport interface IEditProjectDetailsFormProps {\r\n    onCancel?: Function;\r\n    onSuccess: Function;\r\n    projectData: Partial<IProject>;\r\n    editing?: boolean;\r\n};\r\n\r\nconst roleOptions: IComboBoxOption[] = [\r\n    { key: 1, text: 'Developer', selected: true },\r\n    { key: 2, text: 'Beta tester' },\r\n    { key: 3, text: 'Translator' },\r\n    { key: 4, text: 'Other' }\r\n];\r\n\r\nconst categoryOptions: IComboBoxOption[] = MicrosoftStoreAppCategories.map((category, index) => {\r\n    return { key: category, text: category }\r\n});\r\n\r\nexport const EditProjectDetailsForm = (props: IEditProjectDetailsFormProps) => {\r\n    let [projectRequest, setProjectRequest] = React.useState<Partial<ICreateProjectsRequestBody>>({\r\n        isPrivate: false, awaitingLaunchApproval: false, role: \"Developer\", ...props.projectData\r\n    });\r\n\r\n    let [submissionError, setSubmissionError] = React.useState<string>(\"\");\r\n    let [showSuccessIndicator, setShowSuccessIndicator] = React.useState(false);\r\n\r\n    async function submitParticipantRequest() {\r\n        let request = await CreateProject(projectRequest as ICreateProjectsRequestBody);\r\n\r\n        let success = request.status === 200;\r\n\r\n        if (!success) {\r\n            let error: IBackendReponseError = await request.json();\r\n            if (error.error && error.reason) {\r\n                setSubmissionError(error.reason);\r\n            }\r\n        } else {\r\n            setShowSuccessIndicator(true);\r\n            setTimeout(() => {\r\n                props.onSuccess();\r\n            }, 2500);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stack horizontalAlign=\"center\">\r\n            {/* Need to toggle both src and display so it trigger the animation, and space is taken up during the transition (while the svg loads) */}\r\n            <img style={{ display: (showSuccessIndicator ? \"block\" : \"none\"), height: \"200px\" }} src={showSuccessIndicator ? \"/assets/img/checkanimated.svg\" : \"\"} alt=\"Check\" />\r\n            <Stack horizontalAlign=\"start\" tokens={{ childrenGap: 10 }} style={{ maxWidth: \"100%\", width: \"300px\", display: (!showSuccessIndicator ? \"block\" : \"none\") }}>\r\n                <Pivot>\r\n                    <PivotItem headerText=\"Basic info\">\r\n                        <Stack tokens={{ childrenGap: 10 }}>\r\n                            <TextField label=\"Project name:\" maxLength={50}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                value={projectRequest.appName}\r\n                                required onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, appName: value })} />\r\n\r\n                            <TextField label=\"Description\" maxLength={140}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                multiline required autoAdjustHeight\r\n                                value={projectRequest.description}\r\n                                placeholder=\"Enter a brief description\"\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, description: value })} />\r\n\r\n                            <TextField label=\"Hero image\"\r\n                                type=\"url\"\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                required\r\n                                value={projectRequest.heroImage}\r\n                                placeholder=\"External link to an image of your app\"\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, heroImage: value })} />\r\n                        </Stack>\r\n                    </PivotItem>\r\n                    <PivotItem headerText=\"Project links\">\r\n                        <Stack tokens={{ childrenGap: 10 }}>\r\n                            <TextField label=\"Download Link:\"\r\n                                value={projectRequest.downloadLink}\r\n                                disabled={!props.editing && props.projectData.downloadLink !== undefined}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, downloadLink: value })} />\r\n\r\n                            <TextField label=\"Github Link:\"\r\n                                value={projectRequest.githubLink}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, githubLink: value })} />\r\n\r\n                            <TextField label=\"External link\"\r\n                                value={projectRequest.externalLink}\r\n                                styles={{ root: { width: \"100%\" } }}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, externalLink: value })} />\r\n\r\n                        </Stack>\r\n                    </PivotItem>\r\n                    <PivotItem headerText=\"More info\">\r\n                        <Stack tokens={{ childrenGap: 10 }}>\r\n                            <ComboBox\r\n                                label=\"Category\"\r\n                                options={categoryOptions}\r\n                                defaultSelectedKey={projectRequest.category || categoryOptions[0].key}\r\n                                onChange={(e: FormEvent<IComboBox>, option: IComboBoxOption | undefined) => {\r\n                                    if (!option) return;\r\n                                    setProjectRequest({ ...projectRequest, category: option.text });\r\n                                }} />\r\n\r\n                            <Checkbox label=\"Project is private/secret\"\r\n                                checked={projectRequest.isPrivate}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, isPrivate: value })} />\r\n\r\n                            <Checkbox label=\"Partipation in Launch 2020\"\r\n                                checked={projectRequest.awaitingLaunchApproval}\r\n                                onChange={(e: any, value: any) => setProjectRequest({ ...projectRequest, awaitingLaunchApproval: value })} />\r\n\r\n                            <Text style={{ display: projectRequest.awaitingLaunchApproval ? \"block\" : \"none\" }}>A moderator will contact you over Discord to help with the manual review process for Launch 2020</Text>\r\n                        </Stack>\r\n                    </PivotItem>\r\n                </Pivot>\r\n\r\n                <Text style={{ color: \"red\" }}>{submissionError}</Text>\r\n                <Stack horizontal tokens={{ childrenGap: 10 }} horizontalAlign=\"space-evenly\" style={{ marginTop: 20 }}>\r\n                    {\r\n                        props.onCancel ?\r\n                            <DefaultButton text=\"Cancel\" onClick={() => props.onCancel ? props.onCancel() : undefined} />\r\n                            : \"\"\r\n                    }\r\n                    <PrimaryButton text=\"Register\" onClick={submitParticipantRequest} />\r\n                </Stack>\r\n            </Stack>\r\n        </Stack>\r\n    )\r\n};","import { EditProjectDetailsForm, IEditProjectDetailsFormProps } from './EditProjectDetailsForm';\r\nimport React from \"react\";\r\nimport { IProject } from '../../common/services/projects';\r\nimport { Stack, Text, PrimaryButton, DefaultButton, TooltipHost, DirectionalHint, Link, TeachingBubble, TextField, FontIcon } from 'office-ui-fabric-react';\r\nimport { fetchBackend } from '../../common/helpers';\r\n\r\nexport interface ICreateProjectFormProps extends IEditProjectDetailsFormProps {\r\n\r\n};\r\n\r\nexport const CreateProjectForm = (props: ICreateProjectFormProps) => {\r\n    const [verified, setVerified] = React.useState(false);\r\n    const [codeVerificationDisplayed, setCodeVerificationDisplayed] = React.useState(false);\r\n    const [manualReviewMessageShown, setManualReviewMessageShown] = React.useState(true);\r\n    const [projectData, setProjectData] = React.useState<Partial<IProject>>({});\r\n\r\n    return (\r\n        codeVerificationDisplayed ? <ProjectCodeVerifier onCancel={() => { setCodeVerificationDisplayed(false) }} onSuccess={(projectDetails) => {\r\n            setProjectData(projectDetails);\r\n\r\n            setCodeVerificationDisplayed(false);\r\n            setVerified(true);\r\n            setManualReviewMessageShown(false);\r\n        }} />\r\n            :\r\n            verified ?\r\n                (manualReviewMessageShown ?\r\n                    <Stack tokens={{ childrenGap: 10 }}>\r\n                        <Text>Manual review is required after submitting your project. This could take anywhere from several hours to several days</Text>\r\n                        <Stack horizontal tokens={{ childrenGap: 10 }} horizontalAlign=\"space-evenly\" style={{ marginTop: 20 }}>\r\n                            <DefaultButton onClick={() => {\r\n                                setManualReviewMessageShown(false);\r\n                                setVerified(false);\r\n                            }}>Go back</DefaultButton>\r\n                            <PrimaryButton onClick={() => setManualReviewMessageShown(false)}>Continue</PrimaryButton>\r\n                        </Stack>\r\n                    </Stack>\r\n                    : <EditProjectDetailsForm {...props} projectData={projectData} />)\r\n                :\r\n                <Stack tokens={{ childrenGap: 10, padding: 5 }}>\r\n                    <Text variant=\"large\">Before we begin...</Text>\r\n                    <Stack horizontal tokens={{ childrenGap: 5 }}>\r\n                        <FontIcon iconName=\"ReceiptCheck\" style={{ fontSize: 25 }} />\r\n                        <Text variant=\"medium\">Is your app public and already in the store?</Text>\r\n                    </Stack>\r\n                    <Stack horizontal tokens={{ childrenGap: 5 }}>\r\n                        <FontIcon iconName=\"ReceiptCheck\" style={{ fontSize: 25 }} />\r\n                        <Text variant=\"medium\">Do you have a \"Publisher support\" email listed on your apps' MS Store page?</Text>\r\n                    </Stack>\r\n                    <Stack style={{ marginTop: 20 }} horizontal tokens={{ childrenGap: 15 }} horizontalAlign=\"space-evenly\">\r\n                        <DefaultButton onClick={() => { setProjectData({ ...props.projectData, ...projectData }); setVerified(true) }}>No</DefaultButton>\r\n                        <PrimaryButton onClick={() => { setProjectData({ ...props.projectData, ...projectData }); setCodeVerificationDisplayed(true) }}>Yes</PrimaryButton>\r\n                    </Stack>\r\n                </Stack>\r\n    );\r\n};\r\n\r\ninterface IProjectCodeVerifierProps {\r\n    onSuccess: (projectDetails: Partial<IProject>) => void;\r\n    onCancel: Function;\r\n    projectData?: Partial<IProject>;\r\n}\r\nexport const ProjectCodeVerifier = (props: IProjectCodeVerifierProps) => {\r\n    enum VerficationState {\r\n        \"PreInit\", \"WaitingForCode\", \"Verified\"\r\n    }\r\n\r\n    const [storeIdTeachingBubbleTarget, setStoreIdTeachingBubbleTarget] = React.useState<MouseEvent>();\r\n    const [storeId, setStoreId] = React.useState<string>();\r\n    const [verificationCodeText, setVerificationCodeText] = React.useState<string>();\r\n    const [verificationState, setVerificationState] = React.useState<VerficationState>(VerficationState.PreInit);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n    async function BeginVerification() {\r\n        if (!validateStoreIdField()) return;\r\n        const request = await fetchBackend(\"projects/verification\", \"POST\", {\r\n            storeId: storeId\r\n        });\r\n\r\n        if (request.status === 200) {\r\n            setVerificationState(VerficationState.WaitingForCode);\r\n        } else {\r\n            const response = await request.json();\r\n            console.error(response);\r\n            setErrorMessage(response.reason);\r\n        }\r\n    }\r\n\r\n    async function checkVerification() {\r\n        if (!validateStoreIdField()) return;\r\n        const request = await fetchBackend(`projects/verification?storeId=${storeId}&code=${verificationCodeText}`, \"GET\");\r\n\r\n        if (request.status === 200) {\r\n            setVerificationState(VerficationState.Verified);\r\n        } else {\r\n            const response = await request.json();\r\n            console.error(response);\r\n            setErrorMessage(response.reason);\r\n        }\r\n    }\r\n\r\n    function validateStoreIdField() {\r\n        if (!storeId || storeId.length < 12) {\r\n            setErrorMessage(\"Store ID is too short\");\r\n            return false;\r\n        }\r\n        setErrorMessage(\"\");\r\n        return true;\r\n    }\r\n\r\n    const hideStoreIdTeachingBubbleTimeout = {\r\n        tick: setTimeout(() => { }),\r\n        onTimeout: () => {\r\n            setStoreIdTeachingBubbleTarget(undefined);\r\n        },\r\n        init: () => {\r\n            hideStoreIdTeachingBubbleTimeout.clear();\r\n            hideStoreIdTeachingBubbleTimeout.cleared = false;\r\n            hideStoreIdTeachingBubbleTimeout.tick = setTimeout(hideStoreIdTeachingBubbleTimeout.onTimeout, 1000);\r\n        },\r\n        cleared: false,\r\n        clear: () => {\r\n            hideStoreIdTeachingBubbleTimeout.cleared = true;\r\n            clearTimeout(hideStoreIdTeachingBubbleTimeout.tick);\r\n        }\r\n    };\r\n\r\n    function showStoreIdTeachingButton(event: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n        hideStoreIdTeachingBubbleTimeout.clear();\r\n        setStoreIdTeachingBubbleTarget(event.nativeEvent);\r\n    }\r\n\r\n    function hideStoreIdTeachingButton(event: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n        hideStoreIdTeachingBubbleTimeout.init();\r\n    }\r\n\r\n    function onStoreIDTextFieldKeyPress(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n        if (event.key == \"Enter\") {\r\n            BeginVerification();\r\n        }\r\n    }\r\n\r\n    function onVerificationCodeTextFieldKeyPress(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n        if (event.key == \"Enter\") {\r\n            checkVerification();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Stack>\r\n            {\r\n                (() => {\r\n                    switch (verificationState.valueOf()) {\r\n                        case VerficationState.PreInit:\r\n                            return <>\r\n                                {storeIdTeachingBubbleTarget !== undefined ?\r\n                                    <TeachingBubble calloutProps={{ directionalHintFixed: true, directionalHint: DirectionalHint.topAutoEdge }} target={storeIdTeachingBubbleTarget}>\r\n                                        <Stack onMouseLeave={hideStoreIdTeachingButton} onMouseOver={() => hideStoreIdTeachingBubbleTimeout.clear()} tokens={{ childrenGap: 10 }}>\r\n                                            <Text variant=\"mediumPlus\">This is the alphanumeric 12 character ID assigned to your app. It can be found in the URL for your app's store listing</Text>\r\n                                            <Text variant=\"small\"><DefaultButton target=\"_blank\" href=\"https://docs.microsoft.com/en-us/windows/uwp/publish/view-app-identity-details#link-to-your-apps-listing\">More details</DefaultButton></Text>\r\n                                        </Stack>\r\n                                    </TeachingBubble>\r\n                                    : <></>}\r\n\r\n                                <Stack tokens={{ childrenGap: 13 }}>\r\n                                    <Text>Your project can be verified automatically, and will be immediately visible to the community</Text>\r\n                                    <Stack horizontal verticalAlign=\"end\" tokens={{ childrenGap: 10 }}>\r\n                                        <Text variant=\"mediumPlus\">Enter the Store ID for your app</Text>\r\n                                        <Text variant=\"small\" style={{ color: \"gray\" }} onMouseLeave={hideStoreIdTeachingButton} ><Link onClick={showStoreIdTeachingButton}>What's this?</Link></Text>\r\n                                    </Stack>\r\n                                    <Stack grow horizontal tokens={{ childrenGap: 5 }}>\r\n                                        <TextField onKeyPress={onStoreIDTextFieldKeyPress} styles={{ field: { width: 250 } }} placeholder=\"9p75w183m6qr\" onChange={(e: any, value: any) => setStoreId(value)} />\r\n                                        <PrimaryButton onClick={() => BeginVerification()} style={{ minWidth: 25 }} iconProps={{ iconName: \"Forward\" }} />\r\n                                    </Stack>\r\n                                </Stack>\r\n                            </>;\r\n                        case VerficationState.WaitingForCode:\r\n                            return <Stack tokens={{ childrenGap: 10 }}>\r\n                                <Stack grow horizontal tokens={{ childrenGap: 5 }} verticalAlign=\"end\">\r\n                                    <FontIcon iconName=\"InboxCheck\" style={{ fontSize: 24 }} />\r\n                                    <Text variant=\"xLarge\">Check your inbox / junk mail</Text>\r\n                                </Stack>\r\n                                <Text variant=\"mediumPlus\">Enter the code we sent you</Text>\r\n                                <Stack grow horizontal tokens={{ childrenGap: 5 }}>\r\n                                    <TextField onChange={(e: any, value: any) => setVerificationCodeText(value)} onKeyPress={onVerificationCodeTextFieldKeyPress} styles={{ field: { width: 250 } }} />\r\n                                    <PrimaryButton onClick={() => checkVerification()} style={{ minWidth: 25 }} iconProps={{ iconName: \"Forward\" }} />\r\n                                </Stack>\r\n                            </Stack>;\r\n                        case VerficationState.Verified:\r\n                            return <Stack horizontalAlign=\"center\" tokens={{ childrenGap: 15, padding: 10 }}>\r\n                                <FontIcon style={{ fontSize: 38 }} iconName=\"ReminderPerson\" />\r\n                                <Text variant=\"xxLarge\">Identity verified!</Text>\r\n                                <div style={{ display: \"none\" }}>\r\n                                    {setTimeout(() => props.onSuccess({\r\n                                        ...props.projectData,\r\n                                        needsManualReview: false,\r\n                                        downloadLink: `http://microsoft.com/store/apps/${storeId}`\r\n                                    }), 1500)}\r\n                                </div>\r\n                            </Stack>\r\n                        default:\r\n                            return <></>\r\n                    }\r\n                })()\r\n            }\r\n            <Text style={{ color: \"red\" }}>{errorMessage}</Text>\r\n        </Stack >\r\n    );\r\n};\r\n\r\n","import { Text, Stack, Persona, PersonaSize, Icon, Link, Dialog, DialogType, Image, ImageFit, DefaultButton, PrimaryButton, FontIcon } from \"office-ui-fabric-react\";\r\nimport React from \"react\";\r\nimport { GetUserAvatar, GetCurrentDiscordUser, IDiscordUser, discordAuthEndpoint, GetUserRoles, AssignUserRole } from \"../common/services/discord\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { CreateProjectForm } from \"../components/forms/CreateProjectForm\";\r\nimport { GetProjectByDiscordId, IProject } from \"../common/services/projects\";\r\nimport { ProjectCard } from \"../components/ProjectCard\";\r\n\r\nconst DashboardHeader = styled.header`\r\nbackground: linear-gradient(to bottom,#005799 0,#0076d1);\r\nbox-shadow: 0 12px 45px -8px rgba(0,120,215,.35);\r\nwidth: 100vw;\r\nmargin: 0px;\r\npadding: 15px 0px;\r\n`;\r\n\r\nexport const Dashboard = () => {\r\n    const [welcomeMessage, setWelcomeMessage] = React.useState(\"Signing in...\");\r\n    const [userIcon, setUserIcon] = React.useState(\"\");\r\n\r\n    const [roles, setRoles] = React.useState<string[]>([]);\r\n\r\n    const [appRegistrationShown, setAppRegistrationShown] = React.useState(false);\r\n    const [devRegistrationShown, setDevRegistrationShown] = React.useState(false);\r\n\r\n    const [apps, setApps] = React.useState<IProject[]>();\r\n\r\n    React.useEffect(() => {\r\n        setupLoggedInUser();\r\n    }, []);\r\n\r\n    async function getUserApps(user: IDiscordUser) {\r\n        const projects = await GetProjectByDiscordId(user.id);\r\n        setApps(projects);\r\n    }\r\n\r\n    async function setupLoggedInUser() {\r\n        let user: IDiscordUser | undefined = await GetCurrentDiscordUser();\r\n        if (navigator.userAgent.includes(\"ReactSnap\")) return;\r\n        if (!user) {\r\n            window.location.href = discordAuthEndpoint;\r\n            return;\r\n        }\r\n        setWelcomeMessage(user.username);\r\n        setUserIcon(await GetUserAvatar(user) || \"\");\r\n\r\n        const roles = await GetUserRoles(user);\r\n        if (roles) setRoles(roles);\r\n\r\n        getUserApps(user);\r\n    }\r\n\r\n    async function onDevRegisterFormSuccess() {\r\n        setDevRegistrationShown(false);\r\n\r\n        AssignUserRole(\"Developer\");\r\n        setTimeout(() => {\r\n            setupLoggedInUser();\r\n        }, 1000);\r\n    }\r\n\r\n    async function onAppRegisterFormSuccess() {\r\n        setAppRegistrationShown(false);\r\n    }\r\n\r\n    const PersonaDark = styled(Persona)`\r\n    * {\r\n        :hover {\r\n            color: white;\r\n        }\r\n        color: #f7f7f7;\r\n        font-size: 22px;\r\n    }\r\n    `;\r\n\r\n    const SectionTitleIconFontSize = 34;\r\n\r\n    const DashboardColumnFiller = styled.div`\r\n    @media only screen and (max-width: 807px) {\r\n        display: none;\r\n    } \r\n    `;\r\n\r\n    return (\r\n        <Stack tokens={{ childrenGap: 25 }}>\r\n            <DashboardHeader>\r\n                <Stack horizontal wrap style={{ padding: \"15px 0px\", margin: 0 }} verticalAlign=\"center\" horizontalAlign=\"space-around\" tokens={{ childrenGap: 25 }}>\r\n                    <PersonaDark size={PersonaSize.extraLarge} text={welcomeMessage} imageUrl={userIcon} />\r\n\r\n                    <Stack horizontal wrap verticalAlign=\"end\" tokens={{ childrenGap: 10 }} style={{ marginLeft: 10 }}>\r\n\r\n                        {roles.includes(\"Developer\") ?\r\n                            <Link style={{ color: \"white\", width: \"150px\", textDecoration: \"none\" }} onClick={() => setAppRegistrationShown(true)}>\r\n                                <Stack verticalAlign=\"end\" horizontalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                                    <Icon style={{ fontSize: 35, userSelect: \"none\" }} iconName=\"AppIconDefaultAdd\"></Icon>\r\n                                    <Text variant=\"mediumPlus\">Register an app</Text>\r\n                                </Stack>\r\n                            </Link>\r\n                            :\r\n                            <Link style={{ color: \"white\", width: \"150px\", textDecoration: \"none\" }} onClick={() => setDevRegistrationShown(true)}>\r\n                                <Stack verticalAlign=\"end\" horizontalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                                    <Icon style={{ fontSize: 35, userSelect: \"none\" }} iconName=\"code\"></Icon>\r\n                                    <Text variant=\"mediumPlus\">Become a Developer</Text>\r\n                                </Stack>\r\n                            </Link>\r\n                        }\r\n                        <Link style={{ color: \"gray\", width: \"150px\", textDecoration: \"none\" }} to=\"/dashboard/registerapp\">\r\n                            <Stack verticalAlign=\"end\" horizontalAlign=\"center\" tokens={{ childrenGap: 5 }}>\r\n                                <Icon style={{ fontSize: 35, color: \"gray\", userSelect: \"none\" }} iconName=\"Robot\"></Icon>\r\n                                <Text style={{ color: \"gray\" }} variant=\"mediumPlus\">Manage your roles</Text>\r\n                            </Stack>\r\n                        </Link>\r\n\r\n                    </Stack>\r\n\r\n                    <DashboardColumnFiller style={{ width: 200 }} />\r\n                </Stack>\r\n            </DashboardHeader>\r\n\r\n            <Stack horizontalAlign=\"center\" wrap horizontal tokens={{ childrenGap: 20 }}>\r\n                {/* Todo: Hide this area if the user doesn't have Dev role, or no apps are registered */}\r\n                {\r\n                    roles.includes(\"Developer\") ?\r\n                        <Stack style={{ margin: 50 }} horizontalAlign=\"center\" tokens={{ childrenGap: 10 }}>\r\n                            <Stack horizontal tokens={{ childrenGap: 15 }}>\r\n                                <Icon iconName=\"AppIconDefaultList\" style={{ fontSize: SectionTitleIconFontSize }} />\r\n                                <Text variant=\"xLarge\" style={{ fontWeight: 600 }}>My apps</Text>\r\n                            </Stack>\r\n\r\n                            <Stack horizontal wrap tokens={{ childrenGap: 15 }}>\r\n                                {\r\n                                    (apps && apps.length > 0 ? apps.map(project =>\r\n                                        <ProjectCard /* onEditButtonClicked={() => {\r\n                                    \r\n                                }} */ project={project}></ProjectCard>\r\n                                    ) : <Text variant=\"large\">You don't have any registered apps</Text>)\r\n                                }\r\n                            </Stack>\r\n                        </Stack>\r\n                        :\r\n                        <Stack horizontalAlign=\"center\">\r\n                            <Icon iconName=\"BuildDefinition\" style={{ fontSize: 55 }} />\r\n                            <Text variant=\"xLarge\" style={{ fontWeight: 600 }}>Under construction</Text>\r\n                            <Text variant=\"large\">For now, this area is primarily for developers. Check back later for more</Text>\r\n                        </Stack>}\r\n\r\n                <Dialog hidden={!appRegistrationShown} dialogContentProps={{\r\n                    type: DialogType.largeHeader,\r\n                    title: 'Register an app',\r\n                }}>\r\n                    <CreateProjectForm projectData={{}} onSuccess={onAppRegisterFormSuccess} onCancel={() => setAppRegistrationShown(false)} />\r\n                </Dialog>\r\n\r\n                <Dialog hidden={!devRegistrationShown} dialogContentProps={{\r\n                    type: DialogType.largeHeader, title: \"Become a developer\"\r\n                }}>\r\n                    <Stack tokens={{ childrenGap: 10 }} horizontalAlign=\"center\">\r\n                        <FontIcon iconName=\"GiftboxOpen\" style={{ fontSize: 56 }} />\r\n                        <Text variant=\"xLarge\">Let's build something, together</Text>\r\n                        <Text variant=\"medium\">Everyone, from seasoned veterans to enthusiastic novices can become a developer with just a click</Text>\r\n                        <Text variant=\"medium\">You'll be given the Developer role in the UWP Community Discord server, and become eligible for app services exclusive to devs</Text>\r\n                        <Stack horizontal horizontalAlign=\"space-evenly\" tokens={{ childrenGap: 10 }}>\r\n                            <DefaultButton onClick={() => setDevRegistrationShown(false)}>Cancel</DefaultButton>\r\n                            <PrimaryButton onClick={onDevRegisterFormSuccess}>Register</PrimaryButton>\r\n                        </Stack>\r\n                    </Stack>\r\n                </Dialog>\r\n            </Stack>\r\n\r\n        </Stack >\r\n    )\r\n};","import * as React from \"react\";\r\nimport { Text, Stack } from \"office-ui-fabric-react\";\r\n\r\nexport const NotFound: React.StatelessComponent = () => {\r\n  return (\r\n    <Stack horizontal horizontalAlign=\"center\">\r\n      <Text variant=\"large\" style={{ padding: 10 }}>\r\n        404 Not Found\r\n      </Text>\r\n    </Stack>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { Stack, Text, Link } from 'office-ui-fabric-react';\r\nimport memoize from 'promise-memoize'\r\n\r\nconst renderers = {\r\n  heading: (props: { level: 1 | 2 | 3; children: any }) => {\r\n    const { level, children } = props\r\n\r\n    const size = {\r\n      1: 'mega',\r\n      2: 'xxLarge',\r\n      3: 'xLarge'\r\n    }\r\n\r\n    const variant: any = size[level]\r\n    const headerType: any = `h${level}`\r\n\r\n    return <Text as={headerType} variant={variant}>{children[0].props.value}</Text>\r\n  },\r\n  text: Text,\r\n  link: Link\r\n}\r\n\r\nconst getMarkdown = memoize(async (url: string) => {\r\n  const req = await fetch(url)\r\n  const markdown = await req.text()\r\n\r\n  return markdown\r\n})\r\n\r\nexport const createMarkdownPage = async (filename: string) => {\r\n  const markdown = await getMarkdown(filename)\r\n  return {\r\n    default: () => (\r\n      <Stack\r\n        verticalFill\r\n        styles={{\r\n          root: {\r\n            maxWidth: 960,\r\n            height: 'auto'\r\n          }\r\n        }}>\r\n        <ReactMarkdown renderers={renderers} source={markdown} />\r\n      </Stack>\r\n    )\r\n  }\r\n}","import * as React from \"react\";\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\n\r\nimport { Projects } from './views/Projects';\r\nimport { Home } from './views/Home';\r\nimport { AppHeader } from \"./components/AppHeader\";\r\nimport { Launch } from \"./views/Launch\";\r\nimport { Signin } from \"./views/signin\";\r\nimport { Dashboard } from \"./views/dashboard\";\r\n\r\nimport { Stack } from \"office-ui-fabric-react\";\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab, faDiscord, faMedium, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { fas, faGlobe, faArrowCircleDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { NotFound } from \"./views/NotFound\";\r\n\r\nimport { createMarkdownPage } from './components/markdown-loader'\r\nimport { prerenderedLoader } from './components/prerender-loader'\r\n\r\nlibrary.add(fab, faDiscord, faMedium, faGithub);\r\nlibrary.add(fab, fas, faGlobe, faArrowCircleDown, faDiscord, faMedium, faGithub);\r\n\r\nconst AppHeaderWithRouter = withRouter(props => <AppHeader {...props} />);\r\nconst PrivacyPolicy = prerenderedLoader(() => createMarkdownPage('/privacy-policy.md'));\r\n\r\nexport const App: React.StatelessComponent = () => {\r\n\r\n  return (\r\n    <BrowserRouter basename=\"/\">\r\n      <Stack horizontalAlign=\"center\">\r\n        <AppHeaderWithRouter />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/projects\" component={Projects} />\r\n          <Route exact path=\"/launch\" component={Launch} />\r\n          <Route exact path=\"/signin\" component={Signin} />\r\n          <Route exact path=\"/dashboard\" component={Dashboard} />\r\n          <Route exact path=\"/privacy-policy\" component={PrivacyPolicy} />\r\n          <Route component={NotFound} />}\r\n        </Switch>\r\n      </Stack>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nimport loadable from \"@loadable/component\";\r\nimport { PrerenderedComponent } from \"react-prerendered-component\";\r\n\r\nexport const prerenderedLoader = (dynamicImport: any) => {\r\n  const LoadableComponent = loadable(dynamicImport);\r\n  return React.memo(props => (\r\n    <PrerenderedComponent live={LoadableComponent.load()}>\r\n      <LoadableComponent {...props} />\r\n    </PrerenderedComponent>\r\n  ));\r\n};","import React from \"react\";\r\nimport { hydrate, render } from \"react-dom\";\r\nimport { initializeIcons } from \"@uifabric/icons\";\r\nimport {App} from './App';\r\n\r\n// Initializes the UI Fabric icons that we can use\r\n// Choose one from this list: https://developer.microsoft.com/en-us/fabric#/styles/icons\r\ninitializeIcons();\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nif (rootElement && rootElement.hasChildNodes()) {\r\n  hydrate(<App />, rootElement);\r\n} else {\r\n  render(<App />, rootElement);\r\n}"],"sourceRoot":""}